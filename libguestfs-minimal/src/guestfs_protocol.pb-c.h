/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: guestfs_protocol.proto */

#ifndef PROTOBUF_C_guestfs_5fprotocol_2eproto__INCLUDED
#define PROTOBUF_C_guestfs_5fprotocol_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1000000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1001001 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif


typedef struct _GuestfsIntIntBool GuestfsIntIntBool;
typedef struct _GuestfsIntIntBoolList GuestfsIntIntBoolList;
typedef struct _GuestfsIntPv GuestfsIntPv;
typedef struct _GuestfsIntPvList GuestfsIntPvList;
typedef struct _GuestfsIntVg GuestfsIntVg;
typedef struct _GuestfsIntVgList GuestfsIntVgList;
typedef struct _GuestfsIntLv GuestfsIntLv;
typedef struct _GuestfsIntLvList GuestfsIntLvList;
typedef struct _GuestfsIntStat GuestfsIntStat;
typedef struct _GuestfsIntStatList GuestfsIntStatList;
typedef struct _GuestfsIntStatNS GuestfsIntStatNS;
typedef struct _GuestfsIntStatNSList GuestfsIntStatNSList;
typedef struct _GuestfsIntStatVFS GuestfsIntStatVFS;
typedef struct _GuestfsIntStatVFSList GuestfsIntStatVFSList;
typedef struct _GuestfsIntDirent GuestfsIntDirent;
typedef struct _GuestfsIntDirentList GuestfsIntDirentList;
typedef struct _GuestfsIntVersion GuestfsIntVersion;
typedef struct _GuestfsIntVersionList GuestfsIntVersionList;
typedef struct _GuestfsIntXAttr GuestfsIntXAttr;
typedef struct _GuestfsIntXAttrList GuestfsIntXAttrList;
typedef struct _GuestfsIntINotifyEvent GuestfsIntINotifyEvent;
typedef struct _GuestfsIntINotifyEventList GuestfsIntINotifyEventList;
typedef struct _GuestfsIntPartition GuestfsIntPartition;
typedef struct _GuestfsIntPartitionList GuestfsIntPartitionList;
typedef struct _GuestfsIntApplication GuestfsIntApplication;
typedef struct _GuestfsIntApplicationList GuestfsIntApplicationList;
typedef struct _GuestfsIntApplication2 GuestfsIntApplication2;
typedef struct _GuestfsIntApplication2List GuestfsIntApplication2List;
typedef struct _GuestfsIntISOInfo GuestfsIntISOInfo;
typedef struct _GuestfsIntISOInfoList GuestfsIntISOInfoList;
typedef struct _GuestfsIntMDStat GuestfsIntMDStat;
typedef struct _GuestfsIntMDStatList GuestfsIntMDStatList;
typedef struct _GuestfsIntBTRFSSubvolume GuestfsIntBTRFSSubvolume;
typedef struct _GuestfsIntBTRFSSubvolumeList GuestfsIntBTRFSSubvolumeList;
typedef struct _GuestfsIntXFSInfo GuestfsIntXFSInfo;
typedef struct _GuestfsIntXFSInfoList GuestfsIntXFSInfoList;
typedef struct _GuestfsIntUTSName GuestfsIntUTSName;
typedef struct _GuestfsIntUTSNameList GuestfsIntUTSNameList;
typedef struct _GuestfsIntHivexNode GuestfsIntHivexNode;
typedef struct _GuestfsIntHivexNodeList GuestfsIntHivexNodeList;
typedef struct _GuestfsIntHivexValue GuestfsIntHivexValue;
typedef struct _GuestfsIntHivexValueList GuestfsIntHivexValueList;
typedef struct _GuestfsIntInternalMountable GuestfsIntInternalMountable;
typedef struct _GuestfsIntInternalMountableList GuestfsIntInternalMountableList;
typedef struct _GuestfsMountArgs GuestfsMountArgs;
typedef struct _GuestfsTouchArgs GuestfsTouchArgs;
typedef struct _GuestfsLlArgs GuestfsLlArgs;
typedef struct _GuestfsLlRet GuestfsLlRet;
typedef struct _GuestfsListDevicesRet GuestfsListDevicesRet;
typedef struct _GuestfsListPartitionsRet GuestfsListPartitionsRet;
typedef struct _GuestfsPvsRet GuestfsPvsRet;
typedef struct _GuestfsVgsRet GuestfsVgsRet;
typedef struct _GuestfsLvsRet GuestfsLvsRet;
typedef struct _GuestfsPvsFullRet GuestfsPvsFullRet;
typedef struct _GuestfsVgsFullRet GuestfsVgsFullRet;
typedef struct _GuestfsLvsFullRet GuestfsLvsFullRet;
typedef struct _GuestfsAugInitArgs GuestfsAugInitArgs;
typedef struct _GuestfsAugDefvarArgs GuestfsAugDefvarArgs;
typedef struct _GuestfsAugDefvarRet GuestfsAugDefvarRet;
typedef struct _GuestfsAugDefnodeArgs GuestfsAugDefnodeArgs;
typedef struct _GuestfsAugDefnodeRet GuestfsAugDefnodeRet;
typedef struct _GuestfsAugGetArgs GuestfsAugGetArgs;
typedef struct _GuestfsAugGetRet GuestfsAugGetRet;
typedef struct _GuestfsAugSetArgs GuestfsAugSetArgs;
typedef struct _GuestfsAugInsertArgs GuestfsAugInsertArgs;
typedef struct _GuestfsAugRmArgs GuestfsAugRmArgs;
typedef struct _GuestfsAugRmRet GuestfsAugRmRet;
typedef struct _GuestfsAugMvArgs GuestfsAugMvArgs;
typedef struct _GuestfsAugMatchArgs GuestfsAugMatchArgs;
typedef struct _GuestfsAugMatchRet GuestfsAugMatchRet;
typedef struct _GuestfsAugLsArgs GuestfsAugLsArgs;
typedef struct _GuestfsAugLsRet GuestfsAugLsRet;
typedef struct _GuestfsRmArgs GuestfsRmArgs;
typedef struct _GuestfsRmdirArgs GuestfsRmdirArgs;
typedef struct _GuestfsRmRfArgs GuestfsRmRfArgs;
typedef struct _GuestfsMkdirArgs GuestfsMkdirArgs;
typedef struct _GuestfsMkdirPpArgs GuestfsMkdirPpArgs;
typedef struct _GuestfsChmodArgs GuestfsChmodArgs;
typedef struct _GuestfsChownArgs GuestfsChownArgs;
typedef struct _GuestfsExistsArgs GuestfsExistsArgs;
typedef struct _GuestfsExistsRet GuestfsExistsRet;
typedef struct _GuestfsIsFileArgs GuestfsIsFileArgs;
typedef struct _GuestfsIsFileRet GuestfsIsFileRet;
typedef struct _GuestfsIsDirArgs GuestfsIsDirArgs;
typedef struct _GuestfsIsDirRet GuestfsIsDirRet;
typedef struct _GuestfsPvcreateArgs GuestfsPvcreateArgs;
typedef struct _GuestfsVgcreateArgs GuestfsVgcreateArgs;
typedef struct _GuestfsLvcreateArgs GuestfsLvcreateArgs;
typedef struct _GuestfsSfdiskArgs GuestfsSfdiskArgs;
typedef struct _GuestfsWriteFileArgs GuestfsWriteFileArgs;
typedef struct _GuestfsUmountArgs GuestfsUmountArgs;
typedef struct _GuestfsMountsRet GuestfsMountsRet;
typedef struct _GuestfsFileArgs GuestfsFileArgs;
typedef struct _GuestfsFileRet GuestfsFileRet;
typedef struct _GuestfsCommandArgs GuestfsCommandArgs;
typedef struct _GuestfsCommandRet GuestfsCommandRet;
typedef struct _GuestfsCommandLinesArgs GuestfsCommandLinesArgs;
typedef struct _GuestfsCommandLinesRet GuestfsCommandLinesRet;
typedef struct _GuestfsStatvfsArgs GuestfsStatvfsArgs;
typedef struct _GuestfsStatvfsRet GuestfsStatvfsRet;
typedef struct _GuestfsTune2fslArgs GuestfsTune2fslArgs;
typedef struct _GuestfsTune2fslRet GuestfsTune2fslRet;
typedef struct _GuestfsBlockdevSetroArgs GuestfsBlockdevSetroArgs;
typedef struct _GuestfsBlockdevSetrwArgs GuestfsBlockdevSetrwArgs;
typedef struct _GuestfsBlockdevGetroArgs GuestfsBlockdevGetroArgs;
typedef struct _GuestfsBlockdevGetroRet GuestfsBlockdevGetroRet;
typedef struct _GuestfsBlockdevGetssArgs GuestfsBlockdevGetssArgs;
typedef struct _GuestfsBlockdevGetssRet GuestfsBlockdevGetssRet;
typedef struct _GuestfsBlockdevGetbszArgs GuestfsBlockdevGetbszArgs;
typedef struct _GuestfsBlockdevGetbszRet GuestfsBlockdevGetbszRet;
typedef struct _GuestfsBlockdevSetbszArgs GuestfsBlockdevSetbszArgs;
typedef struct _GuestfsBlockdevGetszArgs GuestfsBlockdevGetszArgs;
typedef struct _GuestfsBlockdevGetszRet GuestfsBlockdevGetszRet;
typedef struct _GuestfsBlockdevGetsize64Args GuestfsBlockdevGetsize64Args;
typedef struct _GuestfsBlockdevGetsize64Ret GuestfsBlockdevGetsize64Ret;
typedef struct _GuestfsBlockdevFlushbufsArgs GuestfsBlockdevFlushbufsArgs;
typedef struct _GuestfsBlockdevRereadptArgs GuestfsBlockdevRereadptArgs;
typedef struct _GuestfsUploadArgs GuestfsUploadArgs;
typedef struct _GuestfsDownloadArgs GuestfsDownloadArgs;
typedef struct _GuestfsChecksumArgs GuestfsChecksumArgs;
typedef struct _GuestfsChecksumRet GuestfsChecksumRet;
typedef struct _GuestfsTarInArgs GuestfsTarInArgs;
typedef struct _GuestfsTarOutArgs GuestfsTarOutArgs;
typedef struct _GuestfsTgzInArgs GuestfsTgzInArgs;
typedef struct _GuestfsTgzOutArgs GuestfsTgzOutArgs;
typedef struct _GuestfsMountRoArgs GuestfsMountRoArgs;
typedef struct _GuestfsMountOptionsArgs GuestfsMountOptionsArgs;
typedef struct _GuestfsMountVfsArgs GuestfsMountVfsArgs;
typedef struct _GuestfsDebugArgs GuestfsDebugArgs;
typedef struct _GuestfsDebugRet GuestfsDebugRet;
typedef struct _GuestfsLvremoveArgs GuestfsLvremoveArgs;
typedef struct _GuestfsVgremoveArgs GuestfsVgremoveArgs;
typedef struct _GuestfsPvremoveArgs GuestfsPvremoveArgs;
typedef struct _GuestfsSetE2labelArgs GuestfsSetE2labelArgs;
typedef struct _GuestfsGetE2labelArgs GuestfsGetE2labelArgs;
typedef struct _GuestfsGetE2labelRet GuestfsGetE2labelRet;
typedef struct _GuestfsSetE2uuidArgs GuestfsSetE2uuidArgs;
typedef struct _GuestfsGetE2uuidArgs GuestfsGetE2uuidArgs;
typedef struct _GuestfsGetE2uuidRet GuestfsGetE2uuidRet;
typedef struct _GuestfsFsckArgs GuestfsFsckArgs;
typedef struct _GuestfsFsckRet GuestfsFsckRet;
typedef struct _GuestfsZeroArgs GuestfsZeroArgs;
typedef struct _GuestfsGrubInstallArgs GuestfsGrubInstallArgs;
typedef struct _GuestfsCpArgs GuestfsCpArgs;
typedef struct _GuestfsCpAaArgs GuestfsCpAaArgs;
typedef struct _GuestfsMvArgs GuestfsMvArgs;
typedef struct _GuestfsDropCachesArgs GuestfsDropCachesArgs;
typedef struct _GuestfsDmesgRet GuestfsDmesgRet;
typedef struct _GuestfsEqualArgs GuestfsEqualArgs;
typedef struct _GuestfsEqualRet GuestfsEqualRet;
typedef struct _GuestfsStringsArgs GuestfsStringsArgs;
typedef struct _GuestfsStringsRet GuestfsStringsRet;
typedef struct _GuestfsStringsEeArgs GuestfsStringsEeArgs;
typedef struct _GuestfsStringsEeRet GuestfsStringsEeRet;
typedef struct _GuestfsHexdumpArgs GuestfsHexdumpArgs;
typedef struct _GuestfsHexdumpRet GuestfsHexdumpRet;
typedef struct _GuestfsZerofreeArgs GuestfsZerofreeArgs;
typedef struct _GuestfsPvresizeArgs GuestfsPvresizeArgs;
typedef struct _GuestfsSfdiskNnArgs GuestfsSfdiskNnArgs;
typedef struct _GuestfsSfdisklArgs GuestfsSfdisklArgs;
typedef struct _GuestfsSfdisklRet GuestfsSfdisklRet;
typedef struct _GuestfsSfdiskKernelGeometryArgs GuestfsSfdiskKernelGeometryArgs;
typedef struct _GuestfsSfdiskKernelGeometryRet GuestfsSfdiskKernelGeometryRet;
typedef struct _GuestfsSfdiskDiskGeometryArgs GuestfsSfdiskDiskGeometryArgs;
typedef struct _GuestfsSfdiskDiskGeometryRet GuestfsSfdiskDiskGeometryRet;
typedef struct _GuestfsVgActivateAllArgs GuestfsVgActivateAllArgs;
typedef struct _GuestfsVgActivateArgs GuestfsVgActivateArgs;
typedef struct _GuestfsLvresizeArgs GuestfsLvresizeArgs;
typedef struct _GuestfsResize2fsArgs GuestfsResize2fsArgs;
typedef struct _GuestfsE2fsckFfArgs GuestfsE2fsckFfArgs;
typedef struct _GuestfsSleepArgs GuestfsSleepArgs;
typedef struct _GuestfsNtfs3gprobeArgs GuestfsNtfs3gprobeArgs;
typedef struct _GuestfsNtfs3gprobeRet GuestfsNtfs3gprobeRet;
typedef struct _GuestfsShArgs GuestfsShArgs;
typedef struct _GuestfsShRet GuestfsShRet;
typedef struct _GuestfsShLinesArgs GuestfsShLinesArgs;
typedef struct _GuestfsShLinesRet GuestfsShLinesRet;
typedef struct _GuestfsGlobExpandArgs GuestfsGlobExpandArgs;
typedef struct _GuestfsGlobExpandRet GuestfsGlobExpandRet;
typedef struct _GuestfsScrubDeviceArgs GuestfsScrubDeviceArgs;
typedef struct _GuestfsScrubFileArgs GuestfsScrubFileArgs;
typedef struct _GuestfsScrubFreespaceArgs GuestfsScrubFreespaceArgs;
typedef struct _GuestfsMkdtempArgs GuestfsMkdtempArgs;
typedef struct _GuestfsMkdtempRet GuestfsMkdtempRet;
typedef struct _GuestfsWclArgs GuestfsWclArgs;
typedef struct _GuestfsWclRet GuestfsWclRet;
typedef struct _GuestfsWcwArgs GuestfsWcwArgs;
typedef struct _GuestfsWcwRet GuestfsWcwRet;
typedef struct _GuestfsWccArgs GuestfsWccArgs;
typedef struct _GuestfsWccRet GuestfsWccRet;
typedef struct _GuestfsHeadArgs GuestfsHeadArgs;
typedef struct _GuestfsHeadRet GuestfsHeadRet;
typedef struct _GuestfsHeadNnArgs GuestfsHeadNnArgs;
typedef struct _GuestfsHeadNnRet GuestfsHeadNnRet;
typedef struct _GuestfsTailArgs GuestfsTailArgs;
typedef struct _GuestfsTailRet GuestfsTailRet;
typedef struct _GuestfsTailNnArgs GuestfsTailNnArgs;
typedef struct _GuestfsTailNnRet GuestfsTailNnRet;
typedef struct _GuestfsDfRet GuestfsDfRet;
typedef struct _GuestfsDfhRet GuestfsDfhRet;
typedef struct _GuestfsDuArgs GuestfsDuArgs;
typedef struct _GuestfsDuRet GuestfsDuRet;
typedef struct _GuestfsInitrdListArgs GuestfsInitrdListArgs;
typedef struct _GuestfsInitrdListRet GuestfsInitrdListRet;
typedef struct _GuestfsMountLoopArgs GuestfsMountLoopArgs;
typedef struct _GuestfsMkswapArgs GuestfsMkswapArgs;
typedef struct _GuestfsMkswapLlArgs GuestfsMkswapLlArgs;
typedef struct _GuestfsMkswapUuArgs GuestfsMkswapUuArgs;
typedef struct _GuestfsMknodArgs GuestfsMknodArgs;
typedef struct _GuestfsMkfifoArgs GuestfsMkfifoArgs;
typedef struct _GuestfsMknodBbArgs GuestfsMknodBbArgs;
typedef struct _GuestfsMknodCcArgs GuestfsMknodCcArgs;
typedef struct _GuestfsUmaskArgs GuestfsUmaskArgs;
typedef struct _GuestfsUmaskRet GuestfsUmaskRet;
typedef struct _GuestfsReaddirArgs GuestfsReaddirArgs;
typedef struct _GuestfsReaddirRet GuestfsReaddirRet;
typedef struct _GuestfsSfdiskmArgs GuestfsSfdiskmArgs;
typedef struct _GuestfsZfileArgs GuestfsZfileArgs;
typedef struct _GuestfsZfileRet GuestfsZfileRet;
typedef struct _GuestfsGetxattrsArgs GuestfsGetxattrsArgs;
typedef struct _GuestfsGetxattrsRet GuestfsGetxattrsRet;
typedef struct _GuestfsLgetxattrsArgs GuestfsLgetxattrsArgs;
typedef struct _GuestfsLgetxattrsRet GuestfsLgetxattrsRet;
typedef struct _GuestfsSetxattrArgs GuestfsSetxattrArgs;
typedef struct _GuestfsLsetxattrArgs GuestfsLsetxattrArgs;
typedef struct _GuestfsRemovexattrArgs GuestfsRemovexattrArgs;
typedef struct _GuestfsLremovexattrArgs GuestfsLremovexattrArgs;
typedef struct _GuestfsMountpointsRet GuestfsMountpointsRet;
typedef struct _GuestfsMkmountpointArgs GuestfsMkmountpointArgs;
typedef struct _GuestfsRmmountpointArgs GuestfsRmmountpointArgs;
typedef struct _GuestfsGrepArgs GuestfsGrepArgs;
typedef struct _GuestfsGrepRet GuestfsGrepRet;
typedef struct _GuestfsEgrepArgs GuestfsEgrepArgs;
typedef struct _GuestfsEgrepRet GuestfsEgrepRet;
typedef struct _GuestfsFgrepArgs GuestfsFgrepArgs;
typedef struct _GuestfsFgrepRet GuestfsFgrepRet;
typedef struct _GuestfsGrepiArgs GuestfsGrepiArgs;
typedef struct _GuestfsGrepiRet GuestfsGrepiRet;
typedef struct _GuestfsEgrepiArgs GuestfsEgrepiArgs;
typedef struct _GuestfsEgrepiRet GuestfsEgrepiRet;
typedef struct _GuestfsFgrepiArgs GuestfsFgrepiArgs;
typedef struct _GuestfsFgrepiRet GuestfsFgrepiRet;
typedef struct _GuestfsZgrepArgs GuestfsZgrepArgs;
typedef struct _GuestfsZgrepRet GuestfsZgrepRet;
typedef struct _GuestfsZegrepArgs GuestfsZegrepArgs;
typedef struct _GuestfsZegrepRet GuestfsZegrepRet;
typedef struct _GuestfsZfgrepArgs GuestfsZfgrepArgs;
typedef struct _GuestfsZfgrepRet GuestfsZfgrepRet;
typedef struct _GuestfsZgrepiArgs GuestfsZgrepiArgs;
typedef struct _GuestfsZgrepiRet GuestfsZgrepiRet;
typedef struct _GuestfsZegrepiArgs GuestfsZegrepiArgs;
typedef struct _GuestfsZegrepiRet GuestfsZegrepiRet;
typedef struct _GuestfsZfgrepiArgs GuestfsZfgrepiArgs;
typedef struct _GuestfsZfgrepiRet GuestfsZfgrepiRet;
typedef struct _GuestfsRealpathArgs GuestfsRealpathArgs;
typedef struct _GuestfsRealpathRet GuestfsRealpathRet;
typedef struct _GuestfsLnArgs GuestfsLnArgs;
typedef struct _GuestfsLnfArgs GuestfsLnfArgs;
typedef struct _GuestfsLnsArgs GuestfsLnsArgs;
typedef struct _GuestfsLnSfArgs GuestfsLnSfArgs;
typedef struct _GuestfsReadlinkArgs GuestfsReadlinkArgs;
typedef struct _GuestfsReadlinkRet GuestfsReadlinkRet;
typedef struct _GuestfsFallocateArgs GuestfsFallocateArgs;
typedef struct _GuestfsSwaponDeviceArgs GuestfsSwaponDeviceArgs;
typedef struct _GuestfsSwapoffDeviceArgs GuestfsSwapoffDeviceArgs;
typedef struct _GuestfsSwaponFileArgs GuestfsSwaponFileArgs;
typedef struct _GuestfsSwapoffFileArgs GuestfsSwapoffFileArgs;
typedef struct _GuestfsSwaponLabelArgs GuestfsSwaponLabelArgs;
typedef struct _GuestfsSwapoffLabelArgs GuestfsSwapoffLabelArgs;
typedef struct _GuestfsSwaponUuidArgs GuestfsSwaponUuidArgs;
typedef struct _GuestfsSwapoffUuidArgs GuestfsSwapoffUuidArgs;
typedef struct _GuestfsMkswapFileArgs GuestfsMkswapFileArgs;
typedef struct _GuestfsInotifyInitArgs GuestfsInotifyInitArgs;
typedef struct _GuestfsInotifyAddWatchArgs GuestfsInotifyAddWatchArgs;
typedef struct _GuestfsInotifyAddWatchRet GuestfsInotifyAddWatchRet;
typedef struct _GuestfsInotifyRmWatchArgs GuestfsInotifyRmWatchArgs;
typedef struct _GuestfsInotifyReadRet GuestfsInotifyReadRet;
typedef struct _GuestfsInotifyFilesRet GuestfsInotifyFilesRet;
typedef struct _GuestfsSetconArgs GuestfsSetconArgs;
typedef struct _GuestfsGetconRet GuestfsGetconRet;
typedef struct _GuestfsMkfsBbArgs GuestfsMkfsBbArgs;
typedef struct _GuestfsMke2journalArgs GuestfsMke2journalArgs;
typedef struct _GuestfsMke2journalLlArgs GuestfsMke2journalLlArgs;
typedef struct _GuestfsMke2journalUuArgs GuestfsMke2journalUuArgs;
typedef struct _GuestfsMke2fsJjArgs GuestfsMke2fsJjArgs;
typedef struct _GuestfsMke2fsJlArgs GuestfsMke2fsJlArgs;
typedef struct _GuestfsMke2fsJuArgs GuestfsMke2fsJuArgs;
typedef struct _GuestfsModprobeArgs GuestfsModprobeArgs;
typedef struct _GuestfsEchoDaemonArgs GuestfsEchoDaemonArgs;
typedef struct _GuestfsEchoDaemonRet GuestfsEchoDaemonRet;
typedef struct _GuestfsFind0Args GuestfsFind0Args;
typedef struct _GuestfsCaseSensitivePathArgs GuestfsCaseSensitivePathArgs;
typedef struct _GuestfsCaseSensitivePathRet GuestfsCaseSensitivePathRet;
typedef struct _GuestfsVfsTypeArgs GuestfsVfsTypeArgs;
typedef struct _GuestfsVfsTypeRet GuestfsVfsTypeRet;
typedef struct _GuestfsTruncateArgs GuestfsTruncateArgs;
typedef struct _GuestfsTruncateSizeArgs GuestfsTruncateSizeArgs;
typedef struct _GuestfsUtimensArgs GuestfsUtimensArgs;
typedef struct _GuestfsMkdirModeArgs GuestfsMkdirModeArgs;
typedef struct _GuestfsLchownArgs GuestfsLchownArgs;
typedef struct _GuestfsInternalLxattrlistArgs GuestfsInternalLxattrlistArgs;
typedef struct _GuestfsInternalLxattrlistRet GuestfsInternalLxattrlistRet;
typedef struct _GuestfsInternalReadlinklistArgs GuestfsInternalReadlinklistArgs;
typedef struct _GuestfsInternalReadlinklistRet GuestfsInternalReadlinklistRet;
typedef struct _GuestfsPreadArgs GuestfsPreadArgs;
typedef struct _GuestfsPreadRet GuestfsPreadRet;
typedef struct _GuestfsPartInitArgs GuestfsPartInitArgs;
typedef struct _GuestfsPartAddArgs GuestfsPartAddArgs;
typedef struct _GuestfsPartDiskArgs GuestfsPartDiskArgs;
typedef struct _GuestfsPartSetBootableArgs GuestfsPartSetBootableArgs;
typedef struct _GuestfsPartSetNameArgs GuestfsPartSetNameArgs;
typedef struct _GuestfsPartListArgs GuestfsPartListArgs;
typedef struct _GuestfsPartListRet GuestfsPartListRet;
typedef struct _GuestfsPartGetParttypeArgs GuestfsPartGetParttypeArgs;
typedef struct _GuestfsPartGetParttypeRet GuestfsPartGetParttypeRet;
typedef struct _GuestfsFillArgs GuestfsFillArgs;
typedef struct _GuestfsAvailableArgs GuestfsAvailableArgs;
typedef struct _GuestfsDdArgs GuestfsDdArgs;
typedef struct _GuestfsFilesizeArgs GuestfsFilesizeArgs;
typedef struct _GuestfsFilesizeRet GuestfsFilesizeRet;
typedef struct _GuestfsLvrenameArgs GuestfsLvrenameArgs;
typedef struct _GuestfsVgrenameArgs GuestfsVgrenameArgs;
typedef struct _GuestfsInitrdCatArgs GuestfsInitrdCatArgs;
typedef struct _GuestfsInitrdCatRet GuestfsInitrdCatRet;
typedef struct _GuestfsPvuuidArgs GuestfsPvuuidArgs;
typedef struct _GuestfsPvuuidRet GuestfsPvuuidRet;
typedef struct _GuestfsVguuidArgs GuestfsVguuidArgs;
typedef struct _GuestfsVguuidRet GuestfsVguuidRet;
typedef struct _GuestfsLvuuidArgs GuestfsLvuuidArgs;
typedef struct _GuestfsLvuuidRet GuestfsLvuuidRet;
typedef struct _GuestfsVgpvuuidsArgs GuestfsVgpvuuidsArgs;
typedef struct _GuestfsVgpvuuidsRet GuestfsVgpvuuidsRet;
typedef struct _GuestfsVglvuuidsArgs GuestfsVglvuuidsArgs;
typedef struct _GuestfsVglvuuidsRet GuestfsVglvuuidsRet;
typedef struct _GuestfsCopySizeArgs GuestfsCopySizeArgs;
typedef struct _GuestfsZeroDeviceArgs GuestfsZeroDeviceArgs;
typedef struct _GuestfsTxzInArgs GuestfsTxzInArgs;
typedef struct _GuestfsTxzOutArgs GuestfsTxzOutArgs;
typedef struct _GuestfsPartDelArgs GuestfsPartDelArgs;
typedef struct _GuestfsPartGetBootableArgs GuestfsPartGetBootableArgs;
typedef struct _GuestfsPartGetBootableRet GuestfsPartGetBootableRet;
typedef struct _GuestfsPartGetMbrIdArgs GuestfsPartGetMbrIdArgs;
typedef struct _GuestfsPartGetMbrIdRet GuestfsPartGetMbrIdRet;
typedef struct _GuestfsPartSetMbrIdArgs GuestfsPartSetMbrIdArgs;
typedef struct _GuestfsChecksumDeviceArgs GuestfsChecksumDeviceArgs;
typedef struct _GuestfsChecksumDeviceRet GuestfsChecksumDeviceRet;
typedef struct _GuestfsLvresizeFreeArgs GuestfsLvresizeFreeArgs;
typedef struct _GuestfsAugClearArgs GuestfsAugClearArgs;
typedef struct _GuestfsGetUmaskRet GuestfsGetUmaskRet;
typedef struct _GuestfsDebugUploadArgs GuestfsDebugUploadArgs;
typedef struct _GuestfsBase64InArgs GuestfsBase64InArgs;
typedef struct _GuestfsBase64OutArgs GuestfsBase64OutArgs;
typedef struct _GuestfsChecksumsOutArgs GuestfsChecksumsOutArgs;
typedef struct _GuestfsFillPatternArgs GuestfsFillPatternArgs;
typedef struct _GuestfsInternalWriteArgs GuestfsInternalWriteArgs;
typedef struct _GuestfsPwriteArgs GuestfsPwriteArgs;
typedef struct _GuestfsPwriteRet GuestfsPwriteRet;
typedef struct _GuestfsResize2fsSizeArgs GuestfsResize2fsSizeArgs;
typedef struct _GuestfsPvresizeSizeArgs GuestfsPvresizeSizeArgs;
typedef struct _GuestfsNtfsresizeSizeArgs GuestfsNtfsresizeSizeArgs;
typedef struct _GuestfsAvailableAllGroupsRet GuestfsAvailableAllGroupsRet;
typedef struct _GuestfsFallocate64Args GuestfsFallocate64Args;
typedef struct _GuestfsVfsLabelArgs GuestfsVfsLabelArgs;
typedef struct _GuestfsVfsLabelRet GuestfsVfsLabelRet;
typedef struct _GuestfsVfsUuidArgs GuestfsVfsUuidArgs;
typedef struct _GuestfsVfsUuidRet GuestfsVfsUuidRet;
typedef struct _GuestfsLvmSetFilterArgs GuestfsLvmSetFilterArgs;
typedef struct _GuestfsLuksOpenArgs GuestfsLuksOpenArgs;
typedef struct _GuestfsLuksOpenRoArgs GuestfsLuksOpenRoArgs;
typedef struct _GuestfsLuksCloseArgs GuestfsLuksCloseArgs;
typedef struct _GuestfsLuksFormatArgs GuestfsLuksFormatArgs;
typedef struct _GuestfsLuksFormatCipherArgs GuestfsLuksFormatCipherArgs;
typedef struct _GuestfsLuksAddKeyArgs GuestfsLuksAddKeyArgs;
typedef struct _GuestfsLuksKillSlotArgs GuestfsLuksKillSlotArgs;
typedef struct _GuestfsIsLvArgs GuestfsIsLvArgs;
typedef struct _GuestfsIsLvRet GuestfsIsLvRet;
typedef struct _GuestfsFindfsUuidArgs GuestfsFindfsUuidArgs;
typedef struct _GuestfsFindfsUuidRet GuestfsFindfsUuidRet;
typedef struct _GuestfsFindfsLabelArgs GuestfsFindfsLabelArgs;
typedef struct _GuestfsFindfsLabelRet GuestfsFindfsLabelRet;
typedef struct _GuestfsIsChardevArgs GuestfsIsChardevArgs;
typedef struct _GuestfsIsChardevRet GuestfsIsChardevRet;
typedef struct _GuestfsIsBlockdevArgs GuestfsIsBlockdevArgs;
typedef struct _GuestfsIsBlockdevRet GuestfsIsBlockdevRet;
typedef struct _GuestfsIsFifoArgs GuestfsIsFifoArgs;
typedef struct _GuestfsIsFifoRet GuestfsIsFifoRet;
typedef struct _GuestfsIsSymlinkArgs GuestfsIsSymlinkArgs;
typedef struct _GuestfsIsSymlinkRet GuestfsIsSymlinkRet;
typedef struct _GuestfsIsSocketArgs GuestfsIsSocketArgs;
typedef struct _GuestfsIsSocketRet GuestfsIsSocketRet;
typedef struct _GuestfsPartToDevArgs GuestfsPartToDevArgs;
typedef struct _GuestfsPartToDevRet GuestfsPartToDevRet;
typedef struct _GuestfsUploadOffsetArgs GuestfsUploadOffsetArgs;
typedef struct _GuestfsDownloadOffsetArgs GuestfsDownloadOffsetArgs;
typedef struct _GuestfsPwriteDeviceArgs GuestfsPwriteDeviceArgs;
typedef struct _GuestfsPwriteDeviceRet GuestfsPwriteDeviceRet;
typedef struct _GuestfsPreadDeviceArgs GuestfsPreadDeviceArgs;
typedef struct _GuestfsPreadDeviceRet GuestfsPreadDeviceRet;
typedef struct _GuestfsLvmCanonicalLvNameArgs GuestfsLvmCanonicalLvNameArgs;
typedef struct _GuestfsLvmCanonicalLvNameRet GuestfsLvmCanonicalLvNameRet;
typedef struct _GuestfsMkfsArgs GuestfsMkfsArgs;
typedef struct _GuestfsGetxattrArgs GuestfsGetxattrArgs;
typedef struct _GuestfsGetxattrRet GuestfsGetxattrRet;
typedef struct _GuestfsLgetxattrArgs GuestfsLgetxattrArgs;
typedef struct _GuestfsLgetxattrRet GuestfsLgetxattrRet;
typedef struct _GuestfsResize2fsmArgs GuestfsResize2fsmArgs;
typedef struct _GuestfsIsZeroArgs GuestfsIsZeroArgs;
typedef struct _GuestfsIsZeroRet GuestfsIsZeroRet;
typedef struct _GuestfsIsZeroDeviceArgs GuestfsIsZeroDeviceArgs;
typedef struct _GuestfsIsZeroDeviceRet GuestfsIsZeroDeviceRet;
typedef struct _GuestfsList9pRet GuestfsList9pRet;
typedef struct _GuestfsMount9pArgs GuestfsMount9pArgs;
typedef struct _GuestfsListDmDevicesRet GuestfsListDmDevicesRet;
typedef struct _GuestfsNTFSResizeArgs GuestfsNTFSResizeArgs;
typedef struct _GuestfsBtrfsFilesystemResizeArgs GuestfsBtrfsFilesystemResizeArgs;
typedef struct _GuestfsInternalWriteAppendArgs GuestfsInternalWriteAppendArgs;
typedef struct _GuestfsCompressOutArgs GuestfsCompressOutArgs;
typedef struct _GuestfsCompressDeviceOutArgs GuestfsCompressDeviceOutArgs;
typedef struct _GuestfsPartToPartnumArgs GuestfsPartToPartnumArgs;
typedef struct _GuestfsPartToPartnumRet GuestfsPartToPartnumRet;
typedef struct _GuestfsCopyDeviceToDeviceArgs GuestfsCopyDeviceToDeviceArgs;
typedef struct _GuestfsCopyDeviceToFileArgs GuestfsCopyDeviceToFileArgs;
typedef struct _GuestfsCopyFileToDeviceArgs GuestfsCopyFileToDeviceArgs;
typedef struct _GuestfsCopyFileToFileArgs GuestfsCopyFileToFileArgs;
typedef struct _GuestfsTune2fsArgs GuestfsTune2fsArgs;
typedef struct _GuestfsMdCreateArgs GuestfsMdCreateArgs;
typedef struct _GuestfsListMdDevicesRet GuestfsListMdDevicesRet;
typedef struct _GuestfsMdDetailArgs GuestfsMdDetailArgs;
typedef struct _GuestfsMdDetailRet GuestfsMdDetailRet;
typedef struct _GuestfsMdStopArgs GuestfsMdStopArgs;
typedef struct _GuestfsBlkidArgs GuestfsBlkidArgs;
typedef struct _GuestfsBlkidRet GuestfsBlkidRet;
typedef struct _GuestfsE2fsckArgs GuestfsE2fsckArgs;
typedef struct _GuestfsLlzArgs GuestfsLlzArgs;
typedef struct _GuestfsLlzRet GuestfsLlzRet;
typedef struct _GuestfsWipefsArgs GuestfsWipefsArgs;
typedef struct _GuestfsNtfsfixArgs GuestfsNtfsfixArgs;
typedef struct _GuestfsNtfscloneOutArgs GuestfsNtfscloneOutArgs;
typedef struct _GuestfsNtfscloneInArgs GuestfsNtfscloneInArgs;
typedef struct _GuestfsSetLabelArgs GuestfsSetLabelArgs;
typedef struct _GuestfsZeroFreeSpaceArgs GuestfsZeroFreeSpaceArgs;
typedef struct _GuestfsLvcreateFreeArgs GuestfsLvcreateFreeArgs;
typedef struct _GuestfsIsoinfoDeviceArgs GuestfsIsoinfoDeviceArgs;
typedef struct _GuestfsIsoinfoDeviceRet GuestfsIsoinfoDeviceRet;
typedef struct _GuestfsIsoinfoArgs GuestfsIsoinfoArgs;
typedef struct _GuestfsIsoinfoRet GuestfsIsoinfoRet;
typedef struct _GuestfsVgmetaArgs GuestfsVgmetaArgs;
typedef struct _GuestfsVgmetaRet GuestfsVgmetaRet;
typedef struct _GuestfsMdStatArgs GuestfsMdStatArgs;
typedef struct _GuestfsMdStatRet GuestfsMdStatRet;
typedef struct _GuestfsMkfsBtrfsArgs GuestfsMkfsBtrfsArgs;
typedef struct _GuestfsGetE2attrsArgs GuestfsGetE2attrsArgs;
typedef struct _GuestfsGetE2attrsRet GuestfsGetE2attrsRet;
typedef struct _GuestfsSetE2attrsArgs GuestfsSetE2attrsArgs;
typedef struct _GuestfsGetE2generationArgs GuestfsGetE2generationArgs;
typedef struct _GuestfsGetE2generationRet GuestfsGetE2generationRet;
typedef struct _GuestfsSetE2generationArgs GuestfsSetE2generationArgs;
typedef struct _GuestfsBtrfsSubvolumeSnapshotArgs GuestfsBtrfsSubvolumeSnapshotArgs;
typedef struct _GuestfsBtrfsSubvolumeDeleteArgs GuestfsBtrfsSubvolumeDeleteArgs;
typedef struct _GuestfsBtrfsSubvolumeCreateArgs GuestfsBtrfsSubvolumeCreateArgs;
typedef struct _GuestfsBtrfsSubvolumeListArgs GuestfsBtrfsSubvolumeListArgs;
typedef struct _GuestfsBtrfsSubvolumeListRet GuestfsBtrfsSubvolumeListRet;
typedef struct _GuestfsBtrfsSubvolumeSetDefaultArgs GuestfsBtrfsSubvolumeSetDefaultArgs;
typedef struct _GuestfsBtrfsFilesystemSyncArgs GuestfsBtrfsFilesystemSyncArgs;
typedef struct _GuestfsBtrfsFilesystemBalanceArgs GuestfsBtrfsFilesystemBalanceArgs;
typedef struct _GuestfsBtrfsDeviceAddArgs GuestfsBtrfsDeviceAddArgs;
typedef struct _GuestfsBtrfsDeviceDeleteArgs GuestfsBtrfsDeviceDeleteArgs;
typedef struct _GuestfsBtrfsSetSeedingArgs GuestfsBtrfsSetSeedingArgs;
typedef struct _GuestfsBtrfsFsckArgs GuestfsBtrfsFsckArgs;
typedef struct _GuestfsFilesystemAvailableArgs GuestfsFilesystemAvailableArgs;
typedef struct _GuestfsFilesystemAvailableRet GuestfsFilesystemAvailableRet;
typedef struct _GuestfsFstrimArgs GuestfsFstrimArgs;
typedef struct _GuestfsDeviceIndexArgs GuestfsDeviceIndexArgs;
typedef struct _GuestfsDeviceIndexRet GuestfsDeviceIndexRet;
typedef struct _GuestfsNrDevicesRet GuestfsNrDevicesRet;
typedef struct _GuestfsXfsInfoArgs GuestfsXfsInfoArgs;
typedef struct _GuestfsXfsInfoRet GuestfsXfsInfoRet;
typedef struct _GuestfsPvchangeUuidArgs GuestfsPvchangeUuidArgs;
typedef struct _GuestfsVgchangeUuidArgs GuestfsVgchangeUuidArgs;
typedef struct _GuestfsUtsnameRet GuestfsUtsnameRet;
typedef struct _GuestfsXfsGrowfsArgs GuestfsXfsGrowfsArgs;
typedef struct _GuestfsRsyncArgs GuestfsRsyncArgs;
typedef struct _GuestfsRsyncInArgs GuestfsRsyncInArgs;
typedef struct _GuestfsRsyncOutArgs GuestfsRsyncOutArgs;
typedef struct _GuestfsLs0Args GuestfsLs0Args;
typedef struct _GuestfsFillDirArgs GuestfsFillDirArgs;
typedef struct _GuestfsXfsAdminArgs GuestfsXfsAdminArgs;
typedef struct _GuestfsHivexOpenArgs GuestfsHivexOpenArgs;
typedef struct _GuestfsHivexRootRet GuestfsHivexRootRet;
typedef struct _GuestfsHivexNodeNameArgs GuestfsHivexNodeNameArgs;
typedef struct _GuestfsHivexNodeNameRet GuestfsHivexNodeNameRet;
typedef struct _GuestfsHivexNodeChildrenArgs GuestfsHivexNodeChildrenArgs;
typedef struct _GuestfsHivexNodeChildrenRet GuestfsHivexNodeChildrenRet;
typedef struct _GuestfsHivexNodeGetChildArgs GuestfsHivexNodeGetChildArgs;
typedef struct _GuestfsHivexNodeGetChildRet GuestfsHivexNodeGetChildRet;
typedef struct _GuestfsHivexNodeParentArgs GuestfsHivexNodeParentArgs;
typedef struct _GuestfsHivexNodeParentRet GuestfsHivexNodeParentRet;
typedef struct _GuestfsHivexNodeValuesArgs GuestfsHivexNodeValuesArgs;
typedef struct _GuestfsHivexNodeValuesRet GuestfsHivexNodeValuesRet;
typedef struct _GuestfsHivexNodeGetValueArgs GuestfsHivexNodeGetValueArgs;
typedef struct _GuestfsHivexNodeGetValueRet GuestfsHivexNodeGetValueRet;
typedef struct _GuestfsHivexValueKeyArgs GuestfsHivexValueKeyArgs;
typedef struct _GuestfsHivexValueKeyRet GuestfsHivexValueKeyRet;
typedef struct _GuestfsHivexValueTypeArgs GuestfsHivexValueTypeArgs;
typedef struct _GuestfsHivexValueTypeRet GuestfsHivexValueTypeRet;
typedef struct _GuestfsHivexValueValueArgs GuestfsHivexValueValueArgs;
typedef struct _GuestfsHivexValueValueRet GuestfsHivexValueValueRet;
typedef struct _GuestfsHivexCommitArgs GuestfsHivexCommitArgs;
typedef struct _GuestfsHivexNodeAddChildArgs GuestfsHivexNodeAddChildArgs;
typedef struct _GuestfsHivexNodeAddChildRet GuestfsHivexNodeAddChildRet;
typedef struct _GuestfsHivexNodeDeleteChildArgs GuestfsHivexNodeDeleteChildArgs;
typedef struct _GuestfsHivexNodeSetValueArgs GuestfsHivexNodeSetValueArgs;
typedef struct _GuestfsXfsRepairArgs GuestfsXfsRepairArgs;
typedef struct _GuestfsXfsRepairRet GuestfsXfsRepairRet;
typedef struct _GuestfsRmFfArgs GuestfsRmFfArgs;
typedef struct _GuestfsMke2fsArgs GuestfsMke2fsArgs;
typedef struct _GuestfsListDiskLabelsRet GuestfsListDiskLabelsRet;
typedef struct _GuestfsInternalHotAddDriveArgs GuestfsInternalHotAddDriveArgs;
typedef struct _GuestfsInternalHotRemoveDrivePrecheckArgs GuestfsInternalHotRemoveDrivePrecheckArgs;
typedef struct _GuestfsInternalHotRemoveDriveArgs GuestfsInternalHotRemoveDriveArgs;
typedef struct _GuestfsMktempArgs GuestfsMktempArgs;
typedef struct _GuestfsMktempRet GuestfsMktempRet;
typedef struct _GuestfsMklostAndFoundArgs GuestfsMklostAndFoundArgs;
typedef struct _GuestfsAclGetFileArgs GuestfsAclGetFileArgs;
typedef struct _GuestfsAclGetFileRet GuestfsAclGetFileRet;
typedef struct _GuestfsAclSetFileArgs GuestfsAclSetFileArgs;
typedef struct _GuestfsAclDeleteDefFileArgs GuestfsAclDeleteDefFileArgs;
typedef struct _GuestfsCapGetFileArgs GuestfsCapGetFileArgs;
typedef struct _GuestfsCapGetFileRet GuestfsCapGetFileRet;
typedef struct _GuestfsCapSetFileArgs GuestfsCapSetFileArgs;
typedef struct _GuestfsListLdmVolumesRet GuestfsListLdmVolumesRet;
typedef struct _GuestfsListLdmPartitionsRet GuestfsListLdmPartitionsRet;
typedef struct _GuestfsLdmtoolScanRet GuestfsLdmtoolScanRet;
typedef struct _GuestfsLdmtoolScanDevicesArgs GuestfsLdmtoolScanDevicesArgs;
typedef struct _GuestfsLdmtoolScanDevicesRet GuestfsLdmtoolScanDevicesRet;
typedef struct _GuestfsLdmtoolDiskgroupNameArgs GuestfsLdmtoolDiskgroupNameArgs;
typedef struct _GuestfsLdmtoolDiskgroupNameRet GuestfsLdmtoolDiskgroupNameRet;
typedef struct _GuestfsLdmtoolDiskgroupVolumesArgs GuestfsLdmtoolDiskgroupVolumesArgs;
typedef struct _GuestfsLdmtoolDiskgroupVolumesRet GuestfsLdmtoolDiskgroupVolumesRet;
typedef struct _GuestfsLdmtoolDiskgroupDisksArgs GuestfsLdmtoolDiskgroupDisksArgs;
typedef struct _GuestfsLdmtoolDiskgroupDisksRet GuestfsLdmtoolDiskgroupDisksRet;
typedef struct _GuestfsLdmtoolVolumeTypeArgs GuestfsLdmtoolVolumeTypeArgs;
typedef struct _GuestfsLdmtoolVolumeTypeRet GuestfsLdmtoolVolumeTypeRet;
typedef struct _GuestfsLdmtoolVolumeHintArgs GuestfsLdmtoolVolumeHintArgs;
typedef struct _GuestfsLdmtoolVolumeHintRet GuestfsLdmtoolVolumeHintRet;
typedef struct _GuestfsLdmtoolVolumePartitionsArgs GuestfsLdmtoolVolumePartitionsArgs;
typedef struct _GuestfsLdmtoolVolumePartitionsRet GuestfsLdmtoolVolumePartitionsRet;
typedef struct _GuestfsPartSetGptTypeArgs GuestfsPartSetGptTypeArgs;
typedef struct _GuestfsPartGetGptTypeArgs GuestfsPartGetGptTypeArgs;
typedef struct _GuestfsPartGetGptTypeRet GuestfsPartGetGptTypeRet;
typedef struct _GuestfsRenameArgs GuestfsRenameArgs;
typedef struct _GuestfsIsWholeDeviceArgs GuestfsIsWholeDeviceArgs;
typedef struct _GuestfsIsWholeDeviceRet GuestfsIsWholeDeviceRet;
typedef struct _GuestfsInternalParseMountableArgs GuestfsInternalParseMountableArgs;
typedef struct _GuestfsInternalParseMountableRet GuestfsInternalParseMountableRet;
typedef struct _GuestfsInternalRhbz914931Args GuestfsInternalRhbz914931Args;
typedef struct _GuestfsFeatureAvailableArgs GuestfsFeatureAvailableArgs;
typedef struct _GuestfsFeatureAvailableRet GuestfsFeatureAvailableRet;
typedef struct _GuestfsSyslinuxArgs GuestfsSyslinuxArgs;
typedef struct _GuestfsExtlinuxArgs GuestfsExtlinuxArgs;
typedef struct _GuestfsCpRrArgs GuestfsCpRrArgs;
typedef struct _GuestfsRemountArgs GuestfsRemountArgs;
typedef struct _GuestfsSetUuidArgs GuestfsSetUuidArgs;
typedef struct _GuestfsJournalOpenArgs GuestfsJournalOpenArgs;
typedef struct _GuestfsJournalNextRet GuestfsJournalNextRet;
typedef struct _GuestfsJournalSkipArgs GuestfsJournalSkipArgs;
typedef struct _GuestfsJournalSkipRet GuestfsJournalSkipRet;
typedef struct _GuestfsJournalGetDataThresholdRet GuestfsJournalGetDataThresholdRet;
typedef struct _GuestfsJournalSetDataThresholdArgs GuestfsJournalSetDataThresholdArgs;
typedef struct _GuestfsAugSetmArgs GuestfsAugSetmArgs;
typedef struct _GuestfsAugSetmRet GuestfsAugSetmRet;
typedef struct _GuestfsAugLabelArgs GuestfsAugLabelArgs;
typedef struct _GuestfsAugLabelRet GuestfsAugLabelRet;
typedef struct _GuestfsInternalUploadArgs GuestfsInternalUploadArgs;
typedef struct _GuestfsCopyAttributesArgs GuestfsCopyAttributesArgs;
typedef struct _GuestfsPartGetNameArgs GuestfsPartGetNameArgs;
typedef struct _GuestfsPartGetNameRet GuestfsPartGetNameRet;
typedef struct _GuestfsBlkdiscardArgs GuestfsBlkdiscardArgs;
typedef struct _GuestfsBlkdiscardzeroesArgs GuestfsBlkdiscardzeroesArgs;
typedef struct _GuestfsBlkdiscardzeroesRet GuestfsBlkdiscardzeroesRet;
typedef struct _GuestfsCpioOutArgs GuestfsCpioOutArgs;
typedef struct _GuestfsJournalGetRealtimeUsecRet GuestfsJournalGetRealtimeUsecRet;
typedef struct _GuestfsStatnsArgs GuestfsStatnsArgs;
typedef struct _GuestfsStatnsRet GuestfsStatnsRet;
typedef struct _GuestfsLstatnsArgs GuestfsLstatnsArgs;
typedef struct _GuestfsLstatnsRet GuestfsLstatnsRet;
typedef struct _GuestfsInternalLstatnslistArgs GuestfsInternalLstatnslistArgs;
typedef struct _GuestfsInternalLstatnslistRet GuestfsInternalLstatnslistRet;
typedef struct _GuestfsMessageError GuestfsMessageError;
typedef struct _GuestfsMessageHeader GuestfsMessageHeader;
typedef struct _GuestfsChunk GuestfsChunk;
typedef struct _GuestfsProgress GuestfsProgress;
typedef struct _GuestfsFlagMessage GuestfsFlagMessage;


/* --- enums --- */

/*
 * Table of procedure numbers. 
 */
typedef enum _GuestfsProcedure {
  GUESTFS_PROCEDURE__GUESTFS_PROC_MOUNT = 1,
  GUESTFS_PROCEDURE__GUESTFS_PROC_SYNC = 2,
  GUESTFS_PROCEDURE__GUESTFS_PROC_TOUCH = 3,
  GUESTFS_PROCEDURE__GUESTFS_PROC_LL = 5,
  GUESTFS_PROCEDURE__GUESTFS_PROC_LIST_DEVICES = 7,
  GUESTFS_PROCEDURE__GUESTFS_PROC_LIST_PARTITIONS = 8,
  GUESTFS_PROCEDURE__GUESTFS_PROC_PVS = 9,
  GUESTFS_PROCEDURE__GUESTFS_PROC_VGS = 10,
  GUESTFS_PROCEDURE__GUESTFS_PROC_LVS = 11,
  GUESTFS_PROCEDURE__GUESTFS_PROC_PVS_FULL = 12,
  GUESTFS_PROCEDURE__GUESTFS_PROC_VGS_FULL = 13,
  GUESTFS_PROCEDURE__GUESTFS_PROC_LVS_FULL = 14,
  GUESTFS_PROCEDURE__GUESTFS_PROC_AUG_INIT = 16,
  GUESTFS_PROCEDURE__GUESTFS_PROC_AUG_CLOSE = 26,
  GUESTFS_PROCEDURE__GUESTFS_PROC_AUG_DEFVAR = 17,
  GUESTFS_PROCEDURE__GUESTFS_PROC_AUG_DEFNODE = 18,
  GUESTFS_PROCEDURE__GUESTFS_PROC_AUG_GET = 19,
  GUESTFS_PROCEDURE__GUESTFS_PROC_AUG_SET = 20,
  GUESTFS_PROCEDURE__GUESTFS_PROC_AUG_INSERT = 21,
  GUESTFS_PROCEDURE__GUESTFS_PROC_AUG_RM = 22,
  GUESTFS_PROCEDURE__GUESTFS_PROC_AUG_MV = 23,
  GUESTFS_PROCEDURE__GUESTFS_PROC_AUG_MATCH = 24,
  GUESTFS_PROCEDURE__GUESTFS_PROC_AUG_SAVE = 25,
  GUESTFS_PROCEDURE__GUESTFS_PROC_AUG_LOAD = 27,
  GUESTFS_PROCEDURE__GUESTFS_PROC_AUG_LS = 28,
  GUESTFS_PROCEDURE__GUESTFS_PROC_RM = 29,
  GUESTFS_PROCEDURE__GUESTFS_PROC_RMDIR = 30,
  GUESTFS_PROCEDURE__GUESTFS_PROC_RM_RF = 31,
  GUESTFS_PROCEDURE__GUESTFS_PROC_MKDIR = 32,
  GUESTFS_PROCEDURE__GUESTFS_PROC_MKDIR_PP = 33,
  GUESTFS_PROCEDURE__GUESTFS_PROC_CHMOD = 34,
  GUESTFS_PROCEDURE__GUESTFS_PROC_CHOWN = 35,
  GUESTFS_PROCEDURE__GUESTFS_PROC_EXISTS = 36,
  GUESTFS_PROCEDURE__GUESTFS_PROC_IS_FILE = 37,
  GUESTFS_PROCEDURE__GUESTFS_PROC_IS_DIR = 38,
  GUESTFS_PROCEDURE__GUESTFS_PROC_PVCREATE = 39,
  GUESTFS_PROCEDURE__GUESTFS_PROC_VGCREATE = 40,
  GUESTFS_PROCEDURE__GUESTFS_PROC_LVCREATE = 41,
  GUESTFS_PROCEDURE__GUESTFS_PROC_SFDISK = 43,
  GUESTFS_PROCEDURE__GUESTFS_PROC_WRITE_FILE = 44,
  GUESTFS_PROCEDURE__GUESTFS_PROC_UMOUNT = 45,
  GUESTFS_PROCEDURE__GUESTFS_PROC_MOUNTS = 46,
  GUESTFS_PROCEDURE__GUESTFS_PROC_UMOUNT_ALL = 47,
  GUESTFS_PROCEDURE__GUESTFS_PROC_LVM_REMOVE_ALL = 48,
  GUESTFS_PROCEDURE__GUESTFS_PROC_FILE = 49,
  GUESTFS_PROCEDURE__GUESTFS_PROC_COMMAND = 50,
  GUESTFS_PROCEDURE__GUESTFS_PROC_COMMAND_LINES = 51,
  GUESTFS_PROCEDURE__GUESTFS_PROC_STATVFS = 54,
  GUESTFS_PROCEDURE__GUESTFS_PROC_TUNE2FSL = 55,
  GUESTFS_PROCEDURE__GUESTFS_PROC_BLOCKDEV_SETRO = 56,
  GUESTFS_PROCEDURE__GUESTFS_PROC_BLOCKDEV_SETRW = 57,
  GUESTFS_PROCEDURE__GUESTFS_PROC_BLOCKDEV_GETRO = 58,
  GUESTFS_PROCEDURE__GUESTFS_PROC_BLOCKDEV_GETSS = 59,
  GUESTFS_PROCEDURE__GUESTFS_PROC_BLOCKDEV_GETBSZ = 60,
  GUESTFS_PROCEDURE__GUESTFS_PROC_BLOCKDEV_SETBSZ = 61,
  GUESTFS_PROCEDURE__GUESTFS_PROC_BLOCKDEV_GETSZ = 62,
  GUESTFS_PROCEDURE__GUESTFS_PROC_BLOCKDEV_GETSIZE64 = 63,
  GUESTFS_PROCEDURE__GUESTFS_PROC_BLOCKDEV_FLUSHBUFS = 64,
  GUESTFS_PROCEDURE__GUESTFS_PROC_BLOCKDEV_REREADPT = 65,
  GUESTFS_PROCEDURE__GUESTFS_PROC_UPLOAD = 66,
  GUESTFS_PROCEDURE__GUESTFS_PROC_DOWNLOAD = 67,
  GUESTFS_PROCEDURE__GUESTFS_PROC_CHECKSUM = 68,
  GUESTFS_PROCEDURE__GUESTFS_PROC_TAR_IN = 69,
  GUESTFS_PROCEDURE__GUESTFS_PROC_TAR_OUT = 70,
  GUESTFS_PROCEDURE__GUESTFS_PROC_TGZ_IN = 71,
  GUESTFS_PROCEDURE__GUESTFS_PROC_TGZ_OUT = 72,
  GUESTFS_PROCEDURE__GUESTFS_PROC_MOUNT_RO = 73,
  GUESTFS_PROCEDURE__GUESTFS_PROC_MOUNT_OPTIONS = 74,
  GUESTFS_PROCEDURE__GUESTFS_PROC_MOUNT_VFS = 75,
  GUESTFS_PROCEDURE__GUESTFS_PROC_DEBUG = 76,
  GUESTFS_PROCEDURE__GUESTFS_PROC_LVREMOVE = 77,
  GUESTFS_PROCEDURE__GUESTFS_PROC_VGREMOVE = 78,
  GUESTFS_PROCEDURE__GUESTFS_PROC_PVREMOVE = 79,
  GUESTFS_PROCEDURE__GUESTFS_PROC_SET_E2LABEL = 80,
  GUESTFS_PROCEDURE__GUESTFS_PROC_GET_E2LABEL = 81,
  GUESTFS_PROCEDURE__GUESTFS_PROC_SET_E2UUID = 82,
  GUESTFS_PROCEDURE__GUESTFS_PROC_GET_E2UUID = 83,
  GUESTFS_PROCEDURE__GUESTFS_PROC_FSCK = 84,
  GUESTFS_PROCEDURE__GUESTFS_PROC_ZERO = 85,
  GUESTFS_PROCEDURE__GUESTFS_PROC_GRUB_INSTALL = 86,
  GUESTFS_PROCEDURE__GUESTFS_PROC_CP = 87,
  GUESTFS_PROCEDURE__GUESTFS_PROC_CP_AA = 88,
  GUESTFS_PROCEDURE__GUESTFS_PROC_MV = 89,
  GUESTFS_PROCEDURE__GUESTFS_PROC_DROP_CACHES = 90,
  GUESTFS_PROCEDURE__GUESTFS_PROC_DMESG = 91,
  GUESTFS_PROCEDURE__GUESTFS_PROC_PING_DAEMON = 92,
  GUESTFS_PROCEDURE__GUESTFS_PROC_EQUAL = 93,
  GUESTFS_PROCEDURE__GUESTFS_PROC_STRINGS = 94,
  GUESTFS_PROCEDURE__GUESTFS_PROC_STRINGS_EE = 95,
  GUESTFS_PROCEDURE__GUESTFS_PROC_HEXDUMP = 96,
  GUESTFS_PROCEDURE__GUESTFS_PROC_ZEROFREE = 97,
  GUESTFS_PROCEDURE__GUESTFS_PROC_PVRESIZE = 98,
  GUESTFS_PROCEDURE__GUESTFS_PROC_SFDISK_NN = 99,
  GUESTFS_PROCEDURE__GUESTFS_PROC_SFDISKL = 100,
  GUESTFS_PROCEDURE__GUESTFS_PROC_SFDISK_KERNEL_GEOMETRY = 101,
  GUESTFS_PROCEDURE__GUESTFS_PROC_SFDISK_DISK_GEOMETRY = 102,
  GUESTFS_PROCEDURE__GUESTFS_PROC_VG_ACTIVATE_ALL = 103,
  GUESTFS_PROCEDURE__GUESTFS_PROC_VG_ACTIVATE = 104,
  GUESTFS_PROCEDURE__GUESTFS_PROC_LVRESIZE = 105,
  GUESTFS_PROCEDURE__GUESTFS_PROC_RESIZE2FS = 106,
  GUESTFS_PROCEDURE__GUESTFS_PROC_E2FSCK_FF = 108,
  GUESTFS_PROCEDURE__GUESTFS_PROC_SLEEP = 109,
  GUESTFS_PROCEDURE__GUESTFS_PROC_NTFS3GPROBE = 110,
  GUESTFS_PROCEDURE__GUESTFS_PROC_SH = 111,
  GUESTFS_PROCEDURE__GUESTFS_PROC_SH_LINES = 112,
  GUESTFS_PROCEDURE__GUESTFS_PROC_GLOB_EXPAND = 113,
  GUESTFS_PROCEDURE__GUESTFS_PROC_SCRUB_DEVICE = 114,
  GUESTFS_PROCEDURE__GUESTFS_PROC_SCRUB_FILE = 115,
  GUESTFS_PROCEDURE__GUESTFS_PROC_SCRUB_FREESPACE = 116,
  GUESTFS_PROCEDURE__GUESTFS_PROC_MKDTEMP = 117,
  GUESTFS_PROCEDURE__GUESTFS_PROC_WCL = 118,
  GUESTFS_PROCEDURE__GUESTFS_PROC_WCW = 119,
  GUESTFS_PROCEDURE__GUESTFS_PROC_WCC = 120,
  GUESTFS_PROCEDURE__GUESTFS_PROC_HEAD = 121,
  GUESTFS_PROCEDURE__GUESTFS_PROC_HEAD_NN = 122,
  GUESTFS_PROCEDURE__GUESTFS_PROC_TAIL = 123,
  GUESTFS_PROCEDURE__GUESTFS_PROC_TAIL_NN = 124,
  GUESTFS_PROCEDURE__GUESTFS_PROC_DF = 125,
  GUESTFS_PROCEDURE__GUESTFS_PROC_DFH = 126,
  GUESTFS_PROCEDURE__GUESTFS_PROC_DU = 127,
  GUESTFS_PROCEDURE__GUESTFS_PROC_INITRD_LIST = 128,
  GUESTFS_PROCEDURE__GUESTFS_PROC_MOUNT_LOOP = 129,
  GUESTFS_PROCEDURE__GUESTFS_PROC_MKSWAP = 130,
  GUESTFS_PROCEDURE__GUESTFS_PROC_MKSWAP_LL = 131,
  GUESTFS_PROCEDURE__GUESTFS_PROC_MKSWAP_UU = 132,
  GUESTFS_PROCEDURE__GUESTFS_PROC_MKNOD = 133,
  GUESTFS_PROCEDURE__GUESTFS_PROC_MKFIFO = 134,
  GUESTFS_PROCEDURE__GUESTFS_PROC_MKNOD_BB = 135,
  GUESTFS_PROCEDURE__GUESTFS_PROC_MKNOD_CC = 136,
  GUESTFS_PROCEDURE__GUESTFS_PROC_UMASK = 137,
  GUESTFS_PROCEDURE__GUESTFS_PROC_READDIR = 138,
  GUESTFS_PROCEDURE__GUESTFS_PROC_SFDISKM = 139,
  GUESTFS_PROCEDURE__GUESTFS_PROC_ZFILE = 140,
  GUESTFS_PROCEDURE__GUESTFS_PROC_GETXATTRS = 141,
  GUESTFS_PROCEDURE__GUESTFS_PROC_LGETXATTRS = 142,
  GUESTFS_PROCEDURE__GUESTFS_PROC_SETXATTR = 143,
  GUESTFS_PROCEDURE__GUESTFS_PROC_LSETXATTR = 144,
  GUESTFS_PROCEDURE__GUESTFS_PROC_REMOVEXATTR = 145,
  GUESTFS_PROCEDURE__GUESTFS_PROC_LREMOVEXATTR = 146,
  GUESTFS_PROCEDURE__GUESTFS_PROC_MOUNTPOINTS = 147,
  GUESTFS_PROCEDURE__GUESTFS_PROC_MKMOUNTPOINT = 148,
  GUESTFS_PROCEDURE__GUESTFS_PROC_RMMOUNTPOINT = 149,
  GUESTFS_PROCEDURE__GUESTFS_PROC_GREP = 151,
  GUESTFS_PROCEDURE__GUESTFS_PROC_EGREP = 152,
  GUESTFS_PROCEDURE__GUESTFS_PROC_FGREP = 153,
  GUESTFS_PROCEDURE__GUESTFS_PROC_GREPI = 154,
  GUESTFS_PROCEDURE__GUESTFS_PROC_EGREPI = 155,
  GUESTFS_PROCEDURE__GUESTFS_PROC_FGREPI = 156,
  GUESTFS_PROCEDURE__GUESTFS_PROC_ZGREP = 157,
  GUESTFS_PROCEDURE__GUESTFS_PROC_ZEGREP = 158,
  GUESTFS_PROCEDURE__GUESTFS_PROC_ZFGREP = 159,
  GUESTFS_PROCEDURE__GUESTFS_PROC_ZGREPI = 160,
  GUESTFS_PROCEDURE__GUESTFS_PROC_ZEGREPI = 161,
  GUESTFS_PROCEDURE__GUESTFS_PROC_ZFGREPI = 162,
  GUESTFS_PROCEDURE__GUESTFS_PROC_REALPATH = 163,
  GUESTFS_PROCEDURE__GUESTFS_PROC_LN = 164,
  GUESTFS_PROCEDURE__GUESTFS_PROC_LNF = 165,
  GUESTFS_PROCEDURE__GUESTFS_PROC_LNS = 166,
  GUESTFS_PROCEDURE__GUESTFS_PROC_LN_SF = 167,
  GUESTFS_PROCEDURE__GUESTFS_PROC_READLINK = 168,
  GUESTFS_PROCEDURE__GUESTFS_PROC_FALLOCATE = 169,
  GUESTFS_PROCEDURE__GUESTFS_PROC_SWAPON_DEVICE = 170,
  GUESTFS_PROCEDURE__GUESTFS_PROC_SWAPOFF_DEVICE = 171,
  GUESTFS_PROCEDURE__GUESTFS_PROC_SWAPON_FILE = 172,
  GUESTFS_PROCEDURE__GUESTFS_PROC_SWAPOFF_FILE = 173,
  GUESTFS_PROCEDURE__GUESTFS_PROC_SWAPON_LABEL = 174,
  GUESTFS_PROCEDURE__GUESTFS_PROC_SWAPOFF_LABEL = 175,
  GUESTFS_PROCEDURE__GUESTFS_PROC_SWAPON_UUID = 176,
  GUESTFS_PROCEDURE__GUESTFS_PROC_SWAPOFF_UUID = 177,
  GUESTFS_PROCEDURE__GUESTFS_PROC_MKSWAP_FILE = 178,
  GUESTFS_PROCEDURE__GUESTFS_PROC_INOTIFY_INIT = 179,
  GUESTFS_PROCEDURE__GUESTFS_PROC_INOTIFY_ADD_WATCH = 180,
  GUESTFS_PROCEDURE__GUESTFS_PROC_INOTIFY_RM_WATCH = 181,
  GUESTFS_PROCEDURE__GUESTFS_PROC_INOTIFY_READ = 182,
  GUESTFS_PROCEDURE__GUESTFS_PROC_INOTIFY_FILES = 183,
  GUESTFS_PROCEDURE__GUESTFS_PROC_INOTIFY_CLOSE = 184,
  GUESTFS_PROCEDURE__GUESTFS_PROC_SETCON = 185,
  GUESTFS_PROCEDURE__GUESTFS_PROC_GETCON = 186,
  GUESTFS_PROCEDURE__GUESTFS_PROC_MKFS_BB = 187,
  GUESTFS_PROCEDURE__GUESTFS_PROC_MKE2JOURNAL = 188,
  GUESTFS_PROCEDURE__GUESTFS_PROC_MKE2JOURNAL_LL = 189,
  GUESTFS_PROCEDURE__GUESTFS_PROC_MKE2JOURNAL_UU = 190,
  GUESTFS_PROCEDURE__GUESTFS_PROC_MKE2FS_JJ = 191,
  GUESTFS_PROCEDURE__GUESTFS_PROC_MKE2FS_JL = 192,
  GUESTFS_PROCEDURE__GUESTFS_PROC_MKE2FS_JU = 193,
  GUESTFS_PROCEDURE__GUESTFS_PROC_MODPROBE = 194,
  GUESTFS_PROCEDURE__GUESTFS_PROC_ECHO_DAEMON = 195,
  GUESTFS_PROCEDURE__GUESTFS_PROC_FIND0 = 196,
  GUESTFS_PROCEDURE__GUESTFS_PROC_CASE_SENSITIVE_PATH = 197,
  GUESTFS_PROCEDURE__GUESTFS_PROC_VFS_TYPE = 198,
  GUESTFS_PROCEDURE__GUESTFS_PROC_TRUNCATE = 199,
  GUESTFS_PROCEDURE__GUESTFS_PROC_TRUNCATE_SIZE = 200,
  GUESTFS_PROCEDURE__GUESTFS_PROC_UTIMENS = 201,
  GUESTFS_PROCEDURE__GUESTFS_PROC_MKDIR_MODE = 202,
  GUESTFS_PROCEDURE__GUESTFS_PROC_LCHOWN = 203,
  GUESTFS_PROCEDURE__GUESTFS_PROC_INTERNAL_LXATTRLIST = 205,
  GUESTFS_PROCEDURE__GUESTFS_PROC_INTERNAL_READLINKLIST = 206,
  GUESTFS_PROCEDURE__GUESTFS_PROC_PREAD = 207,
  GUESTFS_PROCEDURE__GUESTFS_PROC_PART_INIT = 208,
  GUESTFS_PROCEDURE__GUESTFS_PROC_PART_ADD = 209,
  GUESTFS_PROCEDURE__GUESTFS_PROC_PART_DISK = 210,
  GUESTFS_PROCEDURE__GUESTFS_PROC_PART_SET_BOOTABLE = 211,
  GUESTFS_PROCEDURE__GUESTFS_PROC_PART_SET_NAME = 212,
  GUESTFS_PROCEDURE__GUESTFS_PROC_PART_LIST = 213,
  GUESTFS_PROCEDURE__GUESTFS_PROC_PART_GET_PARTTYPE = 214,
  GUESTFS_PROCEDURE__GUESTFS_PROC_FILL = 215,
  GUESTFS_PROCEDURE__GUESTFS_PROC_AVAILABLE = 216,
  GUESTFS_PROCEDURE__GUESTFS_PROC_DD = 217,
  GUESTFS_PROCEDURE__GUESTFS_PROC_FILESIZE = 218,
  GUESTFS_PROCEDURE__GUESTFS_PROC_LVRENAME = 219,
  GUESTFS_PROCEDURE__GUESTFS_PROC_VGRENAME = 220,
  GUESTFS_PROCEDURE__GUESTFS_PROC_INITRD_CAT = 221,
  GUESTFS_PROCEDURE__GUESTFS_PROC_PVUUID = 222,
  GUESTFS_PROCEDURE__GUESTFS_PROC_VGUUID = 223,
  GUESTFS_PROCEDURE__GUESTFS_PROC_LVUUID = 224,
  GUESTFS_PROCEDURE__GUESTFS_PROC_VGPVUUIDS = 225,
  GUESTFS_PROCEDURE__GUESTFS_PROC_VGLVUUIDS = 226,
  GUESTFS_PROCEDURE__GUESTFS_PROC_COPY_SIZE = 227,
  GUESTFS_PROCEDURE__GUESTFS_PROC_ZERO_DEVICE = 228,
  GUESTFS_PROCEDURE__GUESTFS_PROC_TXZ_IN = 229,
  GUESTFS_PROCEDURE__GUESTFS_PROC_TXZ_OUT = 230,
  GUESTFS_PROCEDURE__GUESTFS_PROC_VGSCAN = 232,
  GUESTFS_PROCEDURE__GUESTFS_PROC_PART_DEL = 233,
  GUESTFS_PROCEDURE__GUESTFS_PROC_PART_GET_BOOTABLE = 234,
  GUESTFS_PROCEDURE__GUESTFS_PROC_PART_GET_MBR_ID = 235,
  GUESTFS_PROCEDURE__GUESTFS_PROC_PART_SET_MBR_ID = 236,
  GUESTFS_PROCEDURE__GUESTFS_PROC_CHECKSUM_DEVICE = 237,
  GUESTFS_PROCEDURE__GUESTFS_PROC_LVRESIZE_FREE = 238,
  GUESTFS_PROCEDURE__GUESTFS_PROC_AUG_CLEAR = 239,
  GUESTFS_PROCEDURE__GUESTFS_PROC_GET_UMASK = 240,
  GUESTFS_PROCEDURE__GUESTFS_PROC_DEBUG_UPLOAD = 241,
  GUESTFS_PROCEDURE__GUESTFS_PROC_BASE64_IN = 242,
  GUESTFS_PROCEDURE__GUESTFS_PROC_BASE64_OUT = 243,
  GUESTFS_PROCEDURE__GUESTFS_PROC_CHECKSUMS_OUT = 244,
  GUESTFS_PROCEDURE__GUESTFS_PROC_FILL_PATTERN = 245,
  GUESTFS_PROCEDURE__GUESTFS_PROC_INTERNAL_WRITE = 246,
  GUESTFS_PROCEDURE__GUESTFS_PROC_PWRITE = 247,
  GUESTFS_PROCEDURE__GUESTFS_PROC_RESIZE2FS_SIZE = 248,
  GUESTFS_PROCEDURE__GUESTFS_PROC_PVRESIZE_SIZE = 249,
  GUESTFS_PROCEDURE__GUESTFS_PROC_NTFSRESIZE_SIZE = 250,
  GUESTFS_PROCEDURE__GUESTFS_PROC_AVAILABLE_ALL_GROUPS = 251,
  GUESTFS_PROCEDURE__GUESTFS_PROC_FALLOCATE64 = 252,
  GUESTFS_PROCEDURE__GUESTFS_PROC_VFS_LABEL = 253,
  GUESTFS_PROCEDURE__GUESTFS_PROC_VFS_UUID = 254,
  GUESTFS_PROCEDURE__GUESTFS_PROC_LVM_SET_FILTER = 255,
  GUESTFS_PROCEDURE__GUESTFS_PROC_LVM_CLEAR_FILTER = 256,
  GUESTFS_PROCEDURE__GUESTFS_PROC_LUKS_OPEN = 257,
  GUESTFS_PROCEDURE__GUESTFS_PROC_LUKS_OPEN_RO = 258,
  GUESTFS_PROCEDURE__GUESTFS_PROC_LUKS_CLOSE = 259,
  GUESTFS_PROCEDURE__GUESTFS_PROC_LUKS_FORMAT = 260,
  GUESTFS_PROCEDURE__GUESTFS_PROC_LUKS_FORMAT_CIPHER = 261,
  GUESTFS_PROCEDURE__GUESTFS_PROC_LUKS_ADD_KEY = 262,
  GUESTFS_PROCEDURE__GUESTFS_PROC_LUKS_KILL_SLOT = 263,
  GUESTFS_PROCEDURE__GUESTFS_PROC_IS_LV = 264,
  GUESTFS_PROCEDURE__GUESTFS_PROC_FINDFS_UUID = 265,
  GUESTFS_PROCEDURE__GUESTFS_PROC_FINDFS_LABEL = 266,
  GUESTFS_PROCEDURE__GUESTFS_PROC_IS_CHARDEV = 267,
  GUESTFS_PROCEDURE__GUESTFS_PROC_IS_BLOCKDEV = 268,
  GUESTFS_PROCEDURE__GUESTFS_PROC_IS_FIFO = 269,
  GUESTFS_PROCEDURE__GUESTFS_PROC_IS_SYMLINK = 270,
  GUESTFS_PROCEDURE__GUESTFS_PROC_IS_SOCKET = 271,
  GUESTFS_PROCEDURE__GUESTFS_PROC_PART_TO_DEV = 272,
  GUESTFS_PROCEDURE__GUESTFS_PROC_UPLOAD_OFFSET = 273,
  GUESTFS_PROCEDURE__GUESTFS_PROC_DOWNLOAD_OFFSET = 274,
  GUESTFS_PROCEDURE__GUESTFS_PROC_PWRITE_DEVICE = 275,
  GUESTFS_PROCEDURE__GUESTFS_PROC_PREAD_DEVICE = 276,
  GUESTFS_PROCEDURE__GUESTFS_PROC_LVM_CANONICAL_LV_NAME = 277,
  GUESTFS_PROCEDURE__GUESTFS_PROC_MKFS = 278,
  GUESTFS_PROCEDURE__GUESTFS_PROC_GETXATTR = 279,
  GUESTFS_PROCEDURE__GUESTFS_PROC_LGETXATTR = 280,
  GUESTFS_PROCEDURE__GUESTFS_PROC_RESIZE2FSM = 281,
  GUESTFS_PROCEDURE__GUESTFS_PROC_INTERNAL_AUTOSYNC = 282,
  GUESTFS_PROCEDURE__GUESTFS_PROC_IS_ZERO = 283,
  GUESTFS_PROCEDURE__GUESTFS_PROC_IS_ZERO_DEVICE = 284,
  GUESTFS_PROCEDURE__GUESTFS_PROC_LIST9P = 285,
  GUESTFS_PROCEDURE__GUESTFS_PROC_MOUNT9P = 286,
  GUESTFS_PROCEDURE__GUESTFS_PROC_LIST_DM_DEVICES = 287,
  GUESTFS_PROCEDURE__GUESTFS_PROC_NTFSRESIZE = 288,
  GUESTFS_PROCEDURE__GUESTFS_PROC_BTRFS_FILESYSTEM_RESIZE = 289,
  GUESTFS_PROCEDURE__GUESTFS_PROC_INTERNAL_WRITE_APPEND = 290,
  GUESTFS_PROCEDURE__GUESTFS_PROC_COMPRESS_OUT = 291,
  GUESTFS_PROCEDURE__GUESTFS_PROC_COMPRESS_DEVICE_OUT = 292,
  GUESTFS_PROCEDURE__GUESTFS_PROC_PART_TO_PARTNUM = 293,
  GUESTFS_PROCEDURE__GUESTFS_PROC_COPY_DEVICE_TO_DEVICE = 294,
  GUESTFS_PROCEDURE__GUESTFS_PROC_COPY_DEVICE_TO_FILE = 295,
  GUESTFS_PROCEDURE__GUESTFS_PROC_COPY_FILE_TO_DEVICE = 296,
  GUESTFS_PROCEDURE__GUESTFS_PROC_COPY_FILE_TO_FILE = 297,
  GUESTFS_PROCEDURE__GUESTFS_PROC_TUNE2FS = 298,
  GUESTFS_PROCEDURE__GUESTFS_PROC_MD_CREATE = 299,
  GUESTFS_PROCEDURE__GUESTFS_PROC_LIST_MD_DEVICES = 300,
  GUESTFS_PROCEDURE__GUESTFS_PROC_MD_DETAIL = 301,
  GUESTFS_PROCEDURE__GUESTFS_PROC_MD_STOP = 302,
  GUESTFS_PROCEDURE__GUESTFS_PROC_BLKID = 303,
  GUESTFS_PROCEDURE__GUESTFS_PROC_E2FSCK = 304,
  GUESTFS_PROCEDURE__GUESTFS_PROC_LLZ = 305,
  GUESTFS_PROCEDURE__GUESTFS_PROC_WIPEFS = 306,
  GUESTFS_PROCEDURE__GUESTFS_PROC_NTFSFIX = 307,
  GUESTFS_PROCEDURE__GUESTFS_PROC_NTFSCLONE_OUT = 308,
  GUESTFS_PROCEDURE__GUESTFS_PROC_NTFSCLONE_IN = 309,
  GUESTFS_PROCEDURE__GUESTFS_PROC_SET_LABEL = 310,
  GUESTFS_PROCEDURE__GUESTFS_PROC_ZERO_FREE_SPACE = 311,
  GUESTFS_PROCEDURE__GUESTFS_PROC_LVCREATE_FREE = 312,
  GUESTFS_PROCEDURE__GUESTFS_PROC_ISOINFO_DEVICE = 313,
  GUESTFS_PROCEDURE__GUESTFS_PROC_ISOINFO = 314,
  GUESTFS_PROCEDURE__GUESTFS_PROC_VGMETA = 315,
  GUESTFS_PROCEDURE__GUESTFS_PROC_MD_STAT = 316,
  GUESTFS_PROCEDURE__GUESTFS_PROC_MKFS_BTRFS = 317,
  GUESTFS_PROCEDURE__GUESTFS_PROC_GET_E2ATTRS = 318,
  GUESTFS_PROCEDURE__GUESTFS_PROC_SET_E2ATTRS = 319,
  GUESTFS_PROCEDURE__GUESTFS_PROC_GET_E2GENERATION = 320,
  GUESTFS_PROCEDURE__GUESTFS_PROC_SET_E2GENERATION = 321,
  GUESTFS_PROCEDURE__GUESTFS_PROC_BTRFS_SUBVOLUME_SNAPSHOT = 322,
  GUESTFS_PROCEDURE__GUESTFS_PROC_BTRFS_SUBVOLUME_DELETE = 323,
  GUESTFS_PROCEDURE__GUESTFS_PROC_BTRFS_SUBVOLUME_CREATE = 324,
  GUESTFS_PROCEDURE__GUESTFS_PROC_BTRFS_SUBVOLUME_LIST = 325,
  GUESTFS_PROCEDURE__GUESTFS_PROC_BTRFS_SUBVOLUME_SET_DEFAULT = 326,
  GUESTFS_PROCEDURE__GUESTFS_PROC_BTRFS_FILESYSTEM_SYNC = 327,
  GUESTFS_PROCEDURE__GUESTFS_PROC_BTRFS_FILESYSTEM_BALANCE = 328,
  GUESTFS_PROCEDURE__GUESTFS_PROC_BTRFS_DEVICE_ADD = 329,
  GUESTFS_PROCEDURE__GUESTFS_PROC_BTRFS_DEVICE_DELETE = 330,
  GUESTFS_PROCEDURE__GUESTFS_PROC_BTRFS_SET_SEEDING = 331,
  GUESTFS_PROCEDURE__GUESTFS_PROC_BTRFS_FSCK = 332,
  GUESTFS_PROCEDURE__GUESTFS_PROC_FILESYSTEM_AVAILABLE = 333,
  GUESTFS_PROCEDURE__GUESTFS_PROC_FSTRIM = 334,
  GUESTFS_PROCEDURE__GUESTFS_PROC_DEVICE_INDEX = 335,
  GUESTFS_PROCEDURE__GUESTFS_PROC_NR_DEVICES = 336,
  GUESTFS_PROCEDURE__GUESTFS_PROC_XFS_INFO = 337,
  GUESTFS_PROCEDURE__GUESTFS_PROC_PVCHANGE_UUID = 338,
  GUESTFS_PROCEDURE__GUESTFS_PROC_PVCHANGE_UUID_ALL = 339,
  GUESTFS_PROCEDURE__GUESTFS_PROC_VGCHANGE_UUID = 340,
  GUESTFS_PROCEDURE__GUESTFS_PROC_VGCHANGE_UUID_ALL = 341,
  GUESTFS_PROCEDURE__GUESTFS_PROC_UTSNAME = 342,
  GUESTFS_PROCEDURE__GUESTFS_PROC_XFS_GROWFS = 343,
  GUESTFS_PROCEDURE__GUESTFS_PROC_RSYNC = 344,
  GUESTFS_PROCEDURE__GUESTFS_PROC_RSYNC_IN = 345,
  GUESTFS_PROCEDURE__GUESTFS_PROC_RSYNC_OUT = 346,
  GUESTFS_PROCEDURE__GUESTFS_PROC_LS0 = 347,
  GUESTFS_PROCEDURE__GUESTFS_PROC_FILL_DIR = 348,
  GUESTFS_PROCEDURE__GUESTFS_PROC_XFS_ADMIN = 349,
  GUESTFS_PROCEDURE__GUESTFS_PROC_HIVEX_OPEN = 350,
  GUESTFS_PROCEDURE__GUESTFS_PROC_HIVEX_CLOSE = 351,
  GUESTFS_PROCEDURE__GUESTFS_PROC_HIVEX_ROOT = 352,
  GUESTFS_PROCEDURE__GUESTFS_PROC_HIVEX_NODE_NAME = 353,
  GUESTFS_PROCEDURE__GUESTFS_PROC_HIVEX_NODE_CHILDREN = 354,
  GUESTFS_PROCEDURE__GUESTFS_PROC_HIVEX_NODE_GET_CHILD = 355,
  GUESTFS_PROCEDURE__GUESTFS_PROC_HIVEX_NODE_PARENT = 356,
  GUESTFS_PROCEDURE__GUESTFS_PROC_HIVEX_NODE_VALUES = 357,
  GUESTFS_PROCEDURE__GUESTFS_PROC_HIVEX_NODE_GET_VALUE = 358,
  GUESTFS_PROCEDURE__GUESTFS_PROC_HIVEX_VALUE_KEY = 359,
  GUESTFS_PROCEDURE__GUESTFS_PROC_HIVEX_VALUE_TYPE = 360,
  GUESTFS_PROCEDURE__GUESTFS_PROC_HIVEX_VALUE_VALUE = 361,
  GUESTFS_PROCEDURE__GUESTFS_PROC_HIVEX_COMMIT = 362,
  GUESTFS_PROCEDURE__GUESTFS_PROC_HIVEX_NODE_ADD_CHILD = 363,
  GUESTFS_PROCEDURE__GUESTFS_PROC_HIVEX_NODE_DELETE_CHILD = 364,
  GUESTFS_PROCEDURE__GUESTFS_PROC_HIVEX_NODE_SET_VALUE = 365,
  GUESTFS_PROCEDURE__GUESTFS_PROC_XFS_REPAIR = 366,
  GUESTFS_PROCEDURE__GUESTFS_PROC_RM_FF = 367,
  GUESTFS_PROCEDURE__GUESTFS_PROC_MKE2FS = 368,
  GUESTFS_PROCEDURE__GUESTFS_PROC_LIST_DISK_LABELS = 369,
  GUESTFS_PROCEDURE__GUESTFS_PROC_INTERNAL_HOT_ADD_DRIVE = 370,
  GUESTFS_PROCEDURE__GUESTFS_PROC_INTERNAL_HOT_REMOVE_DRIVE_PRECHECK = 371,
  GUESTFS_PROCEDURE__GUESTFS_PROC_INTERNAL_HOT_REMOVE_DRIVE = 372,
  GUESTFS_PROCEDURE__GUESTFS_PROC_MKTEMP = 373,
  GUESTFS_PROCEDURE__GUESTFS_PROC_MKLOST_AND_FOUND = 374,
  GUESTFS_PROCEDURE__GUESTFS_PROC_ACL_GET_FILE = 375,
  GUESTFS_PROCEDURE__GUESTFS_PROC_ACL_SET_FILE = 376,
  GUESTFS_PROCEDURE__GUESTFS_PROC_ACL_DELETE_DEF_FILE = 377,
  GUESTFS_PROCEDURE__GUESTFS_PROC_CAP_GET_FILE = 378,
  GUESTFS_PROCEDURE__GUESTFS_PROC_CAP_SET_FILE = 379,
  GUESTFS_PROCEDURE__GUESTFS_PROC_LIST_LDM_VOLUMES = 380,
  GUESTFS_PROCEDURE__GUESTFS_PROC_LIST_LDM_PARTITIONS = 381,
  GUESTFS_PROCEDURE__GUESTFS_PROC_LDMTOOL_CREATE_ALL = 382,
  GUESTFS_PROCEDURE__GUESTFS_PROC_LDMTOOL_REMOVE_ALL = 383,
  GUESTFS_PROCEDURE__GUESTFS_PROC_LDMTOOL_SCAN = 384,
  GUESTFS_PROCEDURE__GUESTFS_PROC_LDMTOOL_SCAN_DEVICES = 385,
  GUESTFS_PROCEDURE__GUESTFS_PROC_LDMTOOL_DISKGROUP_NAME = 386,
  GUESTFS_PROCEDURE__GUESTFS_PROC_LDMTOOL_DISKGROUP_VOLUMES = 387,
  GUESTFS_PROCEDURE__GUESTFS_PROC_LDMTOOL_DISKGROUP_DISKS = 388,
  GUESTFS_PROCEDURE__GUESTFS_PROC_LDMTOOL_VOLUME_TYPE = 389,
  GUESTFS_PROCEDURE__GUESTFS_PROC_LDMTOOL_VOLUME_HINT = 390,
  GUESTFS_PROCEDURE__GUESTFS_PROC_LDMTOOL_VOLUME_PARTITIONS = 391,
  GUESTFS_PROCEDURE__GUESTFS_PROC_PART_SET_GPT_TYPE = 392,
  GUESTFS_PROCEDURE__GUESTFS_PROC_PART_GET_GPT_TYPE = 393,
  GUESTFS_PROCEDURE__GUESTFS_PROC_RENAME = 394,
  GUESTFS_PROCEDURE__GUESTFS_PROC_IS_WHOLE_DEVICE = 395,
  GUESTFS_PROCEDURE__GUESTFS_PROC_INTERNAL_PARSE_MOUNTABLE = 396,
  GUESTFS_PROCEDURE__GUESTFS_PROC_INTERNAL_RHBZ914931 = 397,
  GUESTFS_PROCEDURE__GUESTFS_PROC_FEATURE_AVAILABLE = 398,
  GUESTFS_PROCEDURE__GUESTFS_PROC_SYSLINUX = 399,
  GUESTFS_PROCEDURE__GUESTFS_PROC_EXTLINUX = 400,
  GUESTFS_PROCEDURE__GUESTFS_PROC_CP_RR = 401,
  GUESTFS_PROCEDURE__GUESTFS_PROC_REMOUNT = 402,
  GUESTFS_PROCEDURE__GUESTFS_PROC_SET_UUID = 403,
  GUESTFS_PROCEDURE__GUESTFS_PROC_JOURNAL_OPEN = 404,
  GUESTFS_PROCEDURE__GUESTFS_PROC_JOURNAL_CLOSE = 405,
  GUESTFS_PROCEDURE__GUESTFS_PROC_JOURNAL_NEXT = 406,
  GUESTFS_PROCEDURE__GUESTFS_PROC_JOURNAL_SKIP = 407,
  GUESTFS_PROCEDURE__GUESTFS_PROC_INTERNAL_JOURNAL_GET = 408,
  GUESTFS_PROCEDURE__GUESTFS_PROC_JOURNAL_GET_DATA_THRESHOLD = 409,
  GUESTFS_PROCEDURE__GUESTFS_PROC_JOURNAL_SET_DATA_THRESHOLD = 410,
  GUESTFS_PROCEDURE__GUESTFS_PROC_AUG_SETM = 411,
  GUESTFS_PROCEDURE__GUESTFS_PROC_AUG_LABEL = 412,
  GUESTFS_PROCEDURE__GUESTFS_PROC_INTERNAL_UPLOAD = 413,
  GUESTFS_PROCEDURE__GUESTFS_PROC_INTERNAL_EXIT = 414,
  GUESTFS_PROCEDURE__GUESTFS_PROC_COPY_ATTRIBUTES = 415,
  GUESTFS_PROCEDURE__GUESTFS_PROC_PART_GET_NAME = 416,
  GUESTFS_PROCEDURE__GUESTFS_PROC_BLKDISCARD = 417,
  GUESTFS_PROCEDURE__GUESTFS_PROC_BLKDISCARDZEROES = 418,
  GUESTFS_PROCEDURE__GUESTFS_PROC_CPIO_OUT = 419,
  GUESTFS_PROCEDURE__GUESTFS_PROC_JOURNAL_GET_REALTIME_USEC = 420,
  GUESTFS_PROCEDURE__GUESTFS_PROC_STATNS = 421,
  GUESTFS_PROCEDURE__GUESTFS_PROC_LSTATNS = 422,
  GUESTFS_PROCEDURE__GUESTFS_PROC_INTERNAL_LSTATNSLIST = 423
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(GUESTFS_PROCEDURE)
} GuestfsProcedure;
typedef enum _GuestfsConst {
  GUESTFS_CONST__GUESTFS_PROGRAM = 536933877,
  GUESTFS_CONST__GUESTFS_PROTOCOL_VERSION = 4,
  GUESTFS_CONST__GUESTFS_MAX_CHUNK_SIZE = 8192,
  /*
   * These constants must be larger than any possible message length. 
   */
  GUESTFS_CONST__GUESTFS_LAUNCH_FLAG = 1979015157,
  GUESTFS_CONST__GUESTFS_CANCEL_FLAG = 2147479278,
  GUESTFS_CONST__GUESTFS_PROGRESS_FLAG = 2147439957,
  GUESTFS_CONST__GUESTFS_ERROR_LEN = 65536,
  GUESTFS_CONST__GUESTFS_MAX_PROC_NR = 423,
  GUESTFS_CONST__GUESTFS_MESSAGE_MAX = 4194304
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(GUESTFS_CONST)
} GuestfsConst;
typedef enum _GuestfsMessageDirection {
  /*
   * client -> daemon 
   */
  GUESTFS_MESSAGE_DIRECTION__GUESTFS_DIRECTION_CALL = 0,
  /*
   * daemon -> client 
   */
  GUESTFS_MESSAGE_DIRECTION__GUESTFS_DIRECTION_REPLY = 1
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(GUESTFS_MESSAGE_DIRECTION)
} GuestfsMessageDirection;
typedef enum _GuestfsMessageStatus {
  GUESTFS_MESSAGE_STATUS__GUESTFS_STATUS_OK = 0,
  GUESTFS_MESSAGE_STATUS__GUESTFS_STATUS_ERROR = 1
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(GUESTFS_MESSAGE_STATUS)
} GuestfsMessageStatus;

/* --- messages --- */

struct  _GuestfsIntIntBool
{
  ProtobufCMessage base;
  int32_t i;
  int32_t b;
};
#define GUESTFS_INT_INT_BOOL__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_int_int_bool__descriptor) \
    , 0, 0 }


struct  _GuestfsIntIntBoolList
{
  ProtobufCMessage base;
  size_t n_vals;
  GuestfsIntIntBool **vals;
};
#define GUESTFS_INT_INT_BOOL_LIST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_int_int_bool_list__descriptor) \
    , 0,NULL }


struct  _GuestfsIntPv
{
  ProtobufCMessage base;
  char *pv_name;
  ProtobufCBinaryData pv_uuid;
  char *pv_fmt;
  int64_t pv_size;
  int64_t dev_size;
  int64_t pv_free;
  int64_t pv_used;
  char *pv_attr;
  int64_t pv_pe_count;
  int64_t pv_pe_alloc_count;
  char *pv_tags;
  int64_t pe_start;
  int64_t pv_mda_count;
  int64_t pv_mda_free;
};
#define GUESTFS_INT_PV__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_int_pv__descriptor) \
    , NULL, {0,NULL}, NULL, 0, 0, 0, 0, NULL, 0, 0, NULL, 0, 0, 0 }


struct  _GuestfsIntPvList
{
  ProtobufCMessage base;
  size_t n_vals;
  GuestfsIntPv **vals;
};
#define GUESTFS_INT_PV_LIST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_int_pv_list__descriptor) \
    , 0,NULL }


struct  _GuestfsIntVg
{
  ProtobufCMessage base;
  char *vg_name;
  ProtobufCBinaryData vg_uuid;
  char *vg_fmt;
  char *vg_attr;
  int64_t vg_size;
  int64_t vg_free;
  char *vg_sysid;
  int64_t vg_extent_size;
  int64_t vg_extent_count;
  int64_t vg_free_count;
  int64_t max_lv;
  int64_t max_pv;
  int64_t pv_count;
  int64_t lv_count;
  int64_t snap_count;
  int64_t vg_seqno;
  char *vg_tags;
  int64_t vg_mda_count;
  int64_t vg_mda_free;
};
#define GUESTFS_INT_VG__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_int_vg__descriptor) \
    , NULL, {0,NULL}, NULL, NULL, 0, 0, NULL, 0, 0, 0, 0, 0, 0, 0, 0, 0, NULL, 0, 0 }


struct  _GuestfsIntVgList
{
  ProtobufCMessage base;
  size_t n_vals;
  GuestfsIntVg **vals;
};
#define GUESTFS_INT_VG_LIST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_int_vg_list__descriptor) \
    , 0,NULL }


struct  _GuestfsIntLv
{
  ProtobufCMessage base;
  char *lv_name;
  ProtobufCBinaryData lv_uuid;
  char *lv_attr;
  int64_t lv_major;
  int64_t lv_minor;
  int64_t lv_kernel_major;
  int64_t lv_kernel_minor;
  int64_t lv_size;
  int64_t seg_count;
  char *origin;
  float snap_percent;
  float copy_percent;
  char *move_pv;
  char *lv_tags;
  char *mirror_log;
  char *modules;
};
#define GUESTFS_INT_LV__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_int_lv__descriptor) \
    , NULL, {0,NULL}, NULL, 0, 0, 0, 0, 0, 0, NULL, 0, 0, NULL, NULL, NULL, NULL }


struct  _GuestfsIntLvList
{
  ProtobufCMessage base;
  size_t n_vals;
  GuestfsIntLv **vals;
};
#define GUESTFS_INT_LV_LIST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_int_lv_list__descriptor) \
    , 0,NULL }


struct  _GuestfsIntStat
{
  ProtobufCMessage base;
  int64_t dev;
  int64_t ino;
  int64_t mode;
  int64_t nlink;
  int64_t uid;
  int64_t gid;
  int64_t rdev;
  int64_t size;
  int64_t blksize;
  int64_t blocks;
  int64_t atime;
  int64_t mtime;
  int64_t ctime;
};
#define GUESTFS_INT_STAT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_int_stat__descriptor) \
    , 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }


struct  _GuestfsIntStatList
{
  ProtobufCMessage base;
  size_t n_vals;
  GuestfsIntStat **vals;
};
#define GUESTFS_INT_STAT_LIST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_int_stat_list__descriptor) \
    , 0,NULL }


struct  _GuestfsIntStatNS
{
  ProtobufCMessage base;
  int64_t st_dev;
  int64_t st_ino;
  int64_t st_mode;
  int64_t st_nlink;
  int64_t st_uid;
  int64_t st_gid;
  int64_t st_rdev;
  int64_t st_size;
  int64_t st_blksize;
  int64_t st_blocks;
  int64_t st_atime_sec;
  int64_t st_atime_nsec;
  int64_t st_mtime_sec;
  int64_t st_mtime_nsec;
  int64_t st_ctime_sec;
  int64_t st_ctime_nsec;
  int64_t st_spare1;
  int64_t st_spare2;
  int64_t st_spare3;
  int64_t st_spare4;
  int64_t st_spare5;
  int64_t st_spare6;
};
#define GUESTFS_INT_STAT_NS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_int_stat_ns__descriptor) \
    , 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }


struct  _GuestfsIntStatNSList
{
  ProtobufCMessage base;
  size_t n_vals;
  GuestfsIntStatNS **vals;
};
#define GUESTFS_INT_STAT_NSLIST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_int_stat_nslist__descriptor) \
    , 0,NULL }


struct  _GuestfsIntStatVFS
{
  ProtobufCMessage base;
  int64_t bsize;
  int64_t frsize;
  int64_t blocks;
  int64_t bfree;
  int64_t bavail;
  int64_t files;
  int64_t ffree;
  int64_t favail;
  int64_t fsid;
  int64_t flag;
  int64_t namemax;
};
#define GUESTFS_INT_STAT_VFS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_int_stat_vfs__descriptor) \
    , 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }


struct  _GuestfsIntStatVFSList
{
  ProtobufCMessage base;
  size_t n_vals;
  GuestfsIntStatVFS **vals;
};
#define GUESTFS_INT_STAT_VFSLIST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_int_stat_vfslist__descriptor) \
    , 0,NULL }


struct  _GuestfsIntDirent
{
  ProtobufCMessage base;
  int64_t ino;
  int32_t ftyp;
  char *name;
};
#define GUESTFS_INT_DIRENT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_int_dirent__descriptor) \
    , 0, 0, NULL }


struct  _GuestfsIntDirentList
{
  ProtobufCMessage base;
  size_t n_vals;
  GuestfsIntDirent **vals;
};
#define GUESTFS_INT_DIRENT_LIST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_int_dirent_list__descriptor) \
    , 0,NULL }


struct  _GuestfsIntVersion
{
  ProtobufCMessage base;
  int64_t major;
  int64_t minor;
  int64_t release;
  char *extra;
};
#define GUESTFS_INT_VERSION__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_int_version__descriptor) \
    , 0, 0, 0, NULL }


struct  _GuestfsIntVersionList
{
  ProtobufCMessage base;
  size_t n_vals;
  GuestfsIntVersion **vals;
};
#define GUESTFS_INT_VERSION_LIST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_int_version_list__descriptor) \
    , 0,NULL }


struct  _GuestfsIntXAttr
{
  ProtobufCMessage base;
  char *attrname;
  ProtobufCBinaryData attrval;
};
#define GUESTFS_INT_XATTR__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_int_xattr__descriptor) \
    , NULL, {0,NULL} }


struct  _GuestfsIntXAttrList
{
  ProtobufCMessage base;
  size_t n_vals;
  GuestfsIntXAttr **vals;
};
#define GUESTFS_INT_XATTR_LIST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_int_xattr_list__descriptor) \
    , 0,NULL }


struct  _GuestfsIntINotifyEvent
{
  ProtobufCMessage base;
  int64_t in_wd;
  uint32_t in_mask;
  uint32_t in_cookie;
  char *in_name;
};
#define GUESTFS_INT_INOTIFY_EVENT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_int_inotify_event__descriptor) \
    , 0, 0, 0, NULL }


struct  _GuestfsIntINotifyEventList
{
  ProtobufCMessage base;
  size_t n_vals;
  GuestfsIntINotifyEvent **vals;
};
#define GUESTFS_INT_INOTIFY_EVENT_LIST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_int_inotify_event_list__descriptor) \
    , 0,NULL }


struct  _GuestfsIntPartition
{
  ProtobufCMessage base;
  int32_t part_num;
  int64_t part_start;
  int64_t part_end;
  int64_t part_size;
};
#define GUESTFS_INT_PARTITION__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_int_partition__descriptor) \
    , 0, 0, 0, 0 }


struct  _GuestfsIntPartitionList
{
  ProtobufCMessage base;
  size_t n_vals;
  GuestfsIntPartition **vals;
};
#define GUESTFS_INT_PARTITION_LIST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_int_partition_list__descriptor) \
    , 0,NULL }


struct  _GuestfsIntApplication
{
  ProtobufCMessage base;
  char *app_name;
  char *app_display_name;
  int32_t app_epoch;
  char *app_version;
  char *app_release;
  char *app_install_path;
  char *app_trans_path;
  char *app_publisher;
  char *app_url;
  char *app_source_package;
  char *app_summary;
  char *app_description;
};
#define GUESTFS_INT_APPLICATION__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_int_application__descriptor) \
    , NULL, NULL, 0, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL }


struct  _GuestfsIntApplicationList
{
  ProtobufCMessage base;
  size_t n_vals;
  GuestfsIntApplication **vals;
};
#define GUESTFS_INT_APPLICATION_LIST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_int_application_list__descriptor) \
    , 0,NULL }


struct  _GuestfsIntApplication2
{
  ProtobufCMessage base;
  char *app2_name;
  char *app2_display_name;
  int32_t app2_epoch;
  char *app2_version;
  char *app2_release;
  char *app2_arch;
  char *app2_install_path;
  char *app2_trans_path;
  char *app2_publisher;
  char *app2_url;
  char *app2_source_package;
  char *app2_summary;
  char *app2_description;
  char *app2_spare1;
  char *app2_spare2;
  char *app2_spare3;
  char *app2_spare4;
};
#define GUESTFS_INT_APPLICATION2__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_int_application2__descriptor) \
    , NULL, NULL, 0, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL }


struct  _GuestfsIntApplication2List
{
  ProtobufCMessage base;
  size_t n_vals;
  GuestfsIntApplication2 **vals;
};
#define GUESTFS_INT_APPLICATION2_LIST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_int_application2_list__descriptor) \
    , 0,NULL }


struct  _GuestfsIntISOInfo
{
  ProtobufCMessage base;
  char *iso_system_id;
  char *iso_volume_id;
  uint32_t iso_volume_space_size;
  uint32_t iso_volume_set_size;
  uint32_t iso_volume_sequence_number;
  uint32_t iso_logical_block_size;
  char *iso_volume_set_id;
  char *iso_publisher_id;
  char *iso_data_preparer_id;
  char *iso_application_id;
  char *iso_copyright_file_id;
  char *iso_abstract_file_id;
  char *iso_bibliographic_file_id;
  int64_t iso_volume_creation_t;
  int64_t iso_volume_modification_t;
  int64_t iso_volume_expiration_t;
  int64_t iso_volume_effective_t;
};
#define GUESTFS_INT_ISOINFO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_int_isoinfo__descriptor) \
    , NULL, NULL, 0, 0, 0, 0, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 0, 0, 0, 0 }


struct  _GuestfsIntISOInfoList
{
  ProtobufCMessage base;
  size_t n_vals;
  GuestfsIntISOInfo **vals;
};
#define GUESTFS_INT_ISOINFO_LIST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_int_isoinfo_list__descriptor) \
    , 0,NULL }


struct  _GuestfsIntMDStat
{
  ProtobufCMessage base;
  char *mdstat_device;
  int32_t mdstat_index;
  char *mdstat_flags;
};
#define GUESTFS_INT_MDSTAT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_int_mdstat__descriptor) \
    , NULL, 0, NULL }


struct  _GuestfsIntMDStatList
{
  ProtobufCMessage base;
  size_t n_vals;
  GuestfsIntMDStat **vals;
};
#define GUESTFS_INT_MDSTAT_LIST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_int_mdstat_list__descriptor) \
    , 0,NULL }


struct  _GuestfsIntBTRFSSubvolume
{
  ProtobufCMessage base;
  uint64_t btrfssubvolume_id;
  uint64_t btrfssubvolume_top_level_id;
  char *btrfssubvolume_path;
};
#define GUESTFS_INT_BTRFSSUBVOLUME__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_int_btrfssubvolume__descriptor) \
    , 0, 0, NULL }


struct  _GuestfsIntBTRFSSubvolumeList
{
  ProtobufCMessage base;
  size_t n_vals;
  GuestfsIntBTRFSSubvolume **vals;
};
#define GUESTFS_INT_BTRFSSUBVOLUME_LIST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_int_btrfssubvolume_list__descriptor) \
    , 0,NULL }


struct  _GuestfsIntXFSInfo
{
  ProtobufCMessage base;
  char *xfs_mntpoint;
  uint32_t xfs_inodesize;
  uint32_t xfs_agcount;
  uint32_t xfs_agsize;
  uint32_t xfs_sectsize;
  uint32_t xfs_attr;
  uint32_t xfs_blocksize;
  uint64_t xfs_datablocks;
  uint32_t xfs_imaxpct;
  uint32_t xfs_sunit;
  uint32_t xfs_swidth;
  uint32_t xfs_dirversion;
  uint32_t xfs_dirblocksize;
  uint32_t xfs_cimode;
  char *xfs_logname;
  uint32_t xfs_logblocksize;
  uint32_t xfs_logblocks;
  uint32_t xfs_logversion;
  uint32_t xfs_logsectsize;
  uint32_t xfs_logsunit;
  uint32_t xfs_lazycount;
  char *xfs_rtname;
  uint32_t xfs_rtextsize;
  uint64_t xfs_rtblocks;
  uint64_t xfs_rtextents;
};
#define GUESTFS_INT_XFSINFO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_int_xfsinfo__descriptor) \
    , NULL, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, NULL, 0, 0, 0, 0, 0, 0, NULL, 0, 0, 0 }


struct  _GuestfsIntXFSInfoList
{
  ProtobufCMessage base;
  size_t n_vals;
  GuestfsIntXFSInfo **vals;
};
#define GUESTFS_INT_XFSINFO_LIST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_int_xfsinfo_list__descriptor) \
    , 0,NULL }


struct  _GuestfsIntUTSName
{
  ProtobufCMessage base;
  char *uts_sysname;
  char *uts_release;
  char *uts_version;
  char *uts_machine;
};
#define GUESTFS_INT_UTSNAME__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_int_utsname__descriptor) \
    , NULL, NULL, NULL, NULL }


struct  _GuestfsIntUTSNameList
{
  ProtobufCMessage base;
  size_t n_vals;
  GuestfsIntUTSName **vals;
};
#define GUESTFS_INT_UTSNAME_LIST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_int_utsname_list__descriptor) \
    , 0,NULL }


struct  _GuestfsIntHivexNode
{
  ProtobufCMessage base;
  int64_t hivex_node_h;
};
#define GUESTFS_INT_HIVEX_NODE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_int_hivex_node__descriptor) \
    , 0 }


struct  _GuestfsIntHivexNodeList
{
  ProtobufCMessage base;
  size_t n_vals;
  GuestfsIntHivexNode **vals;
};
#define GUESTFS_INT_HIVEX_NODE_LIST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_int_hivex_node_list__descriptor) \
    , 0,NULL }


struct  _GuestfsIntHivexValue
{
  ProtobufCMessage base;
  int64_t hivex_value_h;
};
#define GUESTFS_INT_HIVEX_VALUE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_int_hivex_value__descriptor) \
    , 0 }


struct  _GuestfsIntHivexValueList
{
  ProtobufCMessage base;
  size_t n_vals;
  GuestfsIntHivexValue **vals;
};
#define GUESTFS_INT_HIVEX_VALUE_LIST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_int_hivex_value_list__descriptor) \
    , 0,NULL }


struct  _GuestfsIntInternalMountable
{
  ProtobufCMessage base;
  int32_t im_type;
  char *im_device;
  char *im_volume;
};
#define GUESTFS_INT_INTERNAL_MOUNTABLE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_int_internal_mountable__descriptor) \
    , 0, NULL, NULL }


struct  _GuestfsIntInternalMountableList
{
  ProtobufCMessage base;
  size_t n_vals;
  GuestfsIntInternalMountable **vals;
};
#define GUESTFS_INT_INTERNAL_MOUNTABLE_LIST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_int_internal_mountable_list__descriptor) \
    , 0,NULL }


struct  _GuestfsMountArgs
{
  ProtobufCMessage base;
  char *mountable;
  char *mountpoint;
};
#define GUESTFS_MOUNT_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_mount_args__descriptor) \
    , NULL, NULL }


struct  _GuestfsTouchArgs
{
  ProtobufCMessage base;
  char *path;
};
#define GUESTFS_TOUCH_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_touch_args__descriptor) \
    , NULL }


struct  _GuestfsLlArgs
{
  ProtobufCMessage base;
  char *directory;
};
#define GUESTFS_LL_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_ll_args__descriptor) \
    , NULL }


struct  _GuestfsLlRet
{
  ProtobufCMessage base;
  char *listing;
};
#define GUESTFS_LL_RET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_ll_ret__descriptor) \
    , NULL }


struct  _GuestfsListDevicesRet
{
  ProtobufCMessage base;
  size_t n_devices;
  char **devices;
};
#define GUESTFS_LIST_DEVICES_RET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_list_devices_ret__descriptor) \
    , 0,NULL }


struct  _GuestfsListPartitionsRet
{
  ProtobufCMessage base;
  size_t n_partitions;
  char **partitions;
};
#define GUESTFS_LIST_PARTITIONS_RET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_list_partitions_ret__descriptor) \
    , 0,NULL }


struct  _GuestfsPvsRet
{
  ProtobufCMessage base;
  size_t n_physvols;
  char **physvols;
};
#define GUESTFS_PVS_RET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_pvs_ret__descriptor) \
    , 0,NULL }


struct  _GuestfsVgsRet
{
  ProtobufCMessage base;
  size_t n_volgroups;
  char **volgroups;
};
#define GUESTFS_VGS_RET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_vgs_ret__descriptor) \
    , 0,NULL }


struct  _GuestfsLvsRet
{
  ProtobufCMessage base;
  size_t n_logvols;
  char **logvols;
};
#define GUESTFS_LVS_RET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_lvs_ret__descriptor) \
    , 0,NULL }


struct  _GuestfsPvsFullRet
{
  ProtobufCMessage base;
  GuestfsIntPvList *physvols;
};
#define GUESTFS_PVS_FULL_RET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_pvs_full_ret__descriptor) \
    , NULL }


struct  _GuestfsVgsFullRet
{
  ProtobufCMessage base;
  GuestfsIntVgList *volgroups;
};
#define GUESTFS_VGS_FULL_RET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_vgs_full_ret__descriptor) \
    , NULL }


struct  _GuestfsLvsFullRet
{
  ProtobufCMessage base;
  GuestfsIntLvList *logvols;
};
#define GUESTFS_LVS_FULL_RET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_lvs_full_ret__descriptor) \
    , NULL }


struct  _GuestfsAugInitArgs
{
  ProtobufCMessage base;
  char *root;
  int32_t flags;
};
#define GUESTFS_AUG_INIT_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_aug_init_args__descriptor) \
    , NULL, 0 }


struct  _GuestfsAugDefvarArgs
{
  ProtobufCMessage base;
  char *name;
  char *expr;
};
#define GUESTFS_AUG_DEFVAR_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_aug_defvar_args__descriptor) \
    , NULL, NULL }


struct  _GuestfsAugDefvarRet
{
  ProtobufCMessage base;
  int32_t nrnodes;
};
#define GUESTFS_AUG_DEFVAR_RET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_aug_defvar_ret__descriptor) \
    , 0 }


struct  _GuestfsAugDefnodeArgs
{
  ProtobufCMessage base;
  char *name;
  char *expr;
  char *val;
};
#define GUESTFS_AUG_DEFNODE_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_aug_defnode_args__descriptor) \
    , NULL, NULL, NULL }


struct  _GuestfsAugDefnodeRet
{
  ProtobufCMessage base;
  GuestfsIntIntBool *nrnodescreated;
};
#define GUESTFS_AUG_DEFNODE_RET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_aug_defnode_ret__descriptor) \
    , NULL }


struct  _GuestfsAugGetArgs
{
  ProtobufCMessage base;
  char *augpath;
};
#define GUESTFS_AUG_GET_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_aug_get_args__descriptor) \
    , NULL }


struct  _GuestfsAugGetRet
{
  ProtobufCMessage base;
  char *val;
};
#define GUESTFS_AUG_GET_RET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_aug_get_ret__descriptor) \
    , NULL }


struct  _GuestfsAugSetArgs
{
  ProtobufCMessage base;
  char *augpath;
  char *val;
};
#define GUESTFS_AUG_SET_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_aug_set_args__descriptor) \
    , NULL, NULL }


struct  _GuestfsAugInsertArgs
{
  ProtobufCMessage base;
  char *augpath;
  char *label;
  protobuf_c_boolean before;
};
#define GUESTFS_AUG_INSERT_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_aug_insert_args__descriptor) \
    , NULL, NULL, 0 }


struct  _GuestfsAugRmArgs
{
  ProtobufCMessage base;
  char *augpath;
};
#define GUESTFS_AUG_RM_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_aug_rm_args__descriptor) \
    , NULL }


struct  _GuestfsAugRmRet
{
  ProtobufCMessage base;
  int32_t nrnodes;
};
#define GUESTFS_AUG_RM_RET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_aug_rm_ret__descriptor) \
    , 0 }


struct  _GuestfsAugMvArgs
{
  ProtobufCMessage base;
  char *src;
  char *dest;
};
#define GUESTFS_AUG_MV_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_aug_mv_args__descriptor) \
    , NULL, NULL }


struct  _GuestfsAugMatchArgs
{
  ProtobufCMessage base;
  char *augpath;
};
#define GUESTFS_AUG_MATCH_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_aug_match_args__descriptor) \
    , NULL }


struct  _GuestfsAugMatchRet
{
  ProtobufCMessage base;
  size_t n_matches;
  char **matches;
};
#define GUESTFS_AUG_MATCH_RET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_aug_match_ret__descriptor) \
    , 0,NULL }


struct  _GuestfsAugLsArgs
{
  ProtobufCMessage base;
  char *augpath;
};
#define GUESTFS_AUG_LS_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_aug_ls_args__descriptor) \
    , NULL }


struct  _GuestfsAugLsRet
{
  ProtobufCMessage base;
  size_t n_matches;
  char **matches;
};
#define GUESTFS_AUG_LS_RET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_aug_ls_ret__descriptor) \
    , 0,NULL }


struct  _GuestfsRmArgs
{
  ProtobufCMessage base;
  char *path;
};
#define GUESTFS_RM_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_rm_args__descriptor) \
    , NULL }


struct  _GuestfsRmdirArgs
{
  ProtobufCMessage base;
  char *path;
};
#define GUESTFS_RMDIR_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_rmdir_args__descriptor) \
    , NULL }


struct  _GuestfsRmRfArgs
{
  ProtobufCMessage base;
  char *path;
};
#define GUESTFS_RM_RF_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_rm_rf_args__descriptor) \
    , NULL }


struct  _GuestfsMkdirArgs
{
  ProtobufCMessage base;
  char *path;
};
#define GUESTFS_MKDIR_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_mkdir_args__descriptor) \
    , NULL }


struct  _GuestfsMkdirPpArgs
{
  ProtobufCMessage base;
  char *path;
};
#define GUESTFS_MKDIR_PP_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_mkdir_pp_args__descriptor) \
    , NULL }


struct  _GuestfsChmodArgs
{
  ProtobufCMessage base;
  int32_t mode;
  char *path;
};
#define GUESTFS_CHMOD_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_chmod_args__descriptor) \
    , 0, NULL }


struct  _GuestfsChownArgs
{
  ProtobufCMessage base;
  int32_t owner;
  int32_t group;
  char *path;
};
#define GUESTFS_CHOWN_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_chown_args__descriptor) \
    , 0, 0, NULL }


struct  _GuestfsExistsArgs
{
  ProtobufCMessage base;
  char *path;
};
#define GUESTFS_EXISTS_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_exists_args__descriptor) \
    , NULL }


struct  _GuestfsExistsRet
{
  ProtobufCMessage base;
  protobuf_c_boolean existsflag;
};
#define GUESTFS_EXISTS_RET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_exists_ret__descriptor) \
    , 0 }


struct  _GuestfsIsFileArgs
{
  ProtobufCMessage base;
  char *path;
  protobuf_c_boolean followsymlinks;
};
#define GUESTFS_IS_FILE_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_is_file_args__descriptor) \
    , NULL, 0 }


struct  _GuestfsIsFileRet
{
  ProtobufCMessage base;
  protobuf_c_boolean fileflag;
};
#define GUESTFS_IS_FILE_RET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_is_file_ret__descriptor) \
    , 0 }


struct  _GuestfsIsDirArgs
{
  ProtobufCMessage base;
  char *path;
  protobuf_c_boolean followsymlinks;
};
#define GUESTFS_IS_DIR_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_is_dir_args__descriptor) \
    , NULL, 0 }


struct  _GuestfsIsDirRet
{
  ProtobufCMessage base;
  protobuf_c_boolean dirflag;
};
#define GUESTFS_IS_DIR_RET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_is_dir_ret__descriptor) \
    , 0 }


struct  _GuestfsPvcreateArgs
{
  ProtobufCMessage base;
  char *device;
};
#define GUESTFS_PVCREATE_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_pvcreate_args__descriptor) \
    , NULL }


struct  _GuestfsVgcreateArgs
{
  ProtobufCMessage base;
  char *volgroup;
  size_t n_physvols;
  char **physvols;
};
#define GUESTFS_VGCREATE_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_vgcreate_args__descriptor) \
    , NULL, 0,NULL }


struct  _GuestfsLvcreateArgs
{
  ProtobufCMessage base;
  char *logvol;
  char *volgroup;
  int32_t mbytes;
};
#define GUESTFS_LVCREATE_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_lvcreate_args__descriptor) \
    , NULL, NULL, 0 }


struct  _GuestfsSfdiskArgs
{
  ProtobufCMessage base;
  char *device;
  int32_t cyls;
  int32_t heads;
  int32_t sectors;
  size_t n_lines;
  char **lines;
};
#define GUESTFS_SFDISK_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_sfdisk_args__descriptor) \
    , NULL, 0, 0, 0, 0,NULL }


struct  _GuestfsWriteFileArgs
{
  ProtobufCMessage base;
  char *path;
  char *content;
  int32_t size;
};
#define GUESTFS_WRITE_FILE_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_write_file_args__descriptor) \
    , NULL, NULL, 0 }


struct  _GuestfsUmountArgs
{
  ProtobufCMessage base;
  char *pathordevice;
  protobuf_c_boolean force;
  protobuf_c_boolean lazyunmount;
};
#define GUESTFS_UMOUNT_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_umount_args__descriptor) \
    , NULL, 0, 0 }


struct  _GuestfsMountsRet
{
  ProtobufCMessage base;
  size_t n_devices;
  char **devices;
};
#define GUESTFS_MOUNTS_RET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_mounts_ret__descriptor) \
    , 0,NULL }


struct  _GuestfsFileArgs
{
  ProtobufCMessage base;
  char *path;
};
#define GUESTFS_FILE_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_file_args__descriptor) \
    , NULL }


struct  _GuestfsFileRet
{
  ProtobufCMessage base;
  char *description;
};
#define GUESTFS_FILE_RET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_file_ret__descriptor) \
    , NULL }


struct  _GuestfsCommandArgs
{
  ProtobufCMessage base;
  size_t n_arguments;
  char **arguments;
};
#define GUESTFS_COMMAND_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_command_args__descriptor) \
    , 0,NULL }


struct  _GuestfsCommandRet
{
  ProtobufCMessage base;
  char *output;
};
#define GUESTFS_COMMAND_RET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_command_ret__descriptor) \
    , NULL }


struct  _GuestfsCommandLinesArgs
{
  ProtobufCMessage base;
  size_t n_arguments;
  char **arguments;
};
#define GUESTFS_COMMAND_LINES_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_command_lines_args__descriptor) \
    , 0,NULL }


struct  _GuestfsCommandLinesRet
{
  ProtobufCMessage base;
  size_t n_lines;
  char **lines;
};
#define GUESTFS_COMMAND_LINES_RET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_command_lines_ret__descriptor) \
    , 0,NULL }


struct  _GuestfsStatvfsArgs
{
  ProtobufCMessage base;
  char *path;
};
#define GUESTFS_STATVFS_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_statvfs_args__descriptor) \
    , NULL }


struct  _GuestfsStatvfsRet
{
  ProtobufCMessage base;
  GuestfsIntStatVFS *statbuf;
};
#define GUESTFS_STATVFS_RET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_statvfs_ret__descriptor) \
    , NULL }


struct  _GuestfsTune2fslArgs
{
  ProtobufCMessage base;
  char *device;
};
#define GUESTFS_TUNE2FSL_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_tune2fsl_args__descriptor) \
    , NULL }


struct  _GuestfsTune2fslRet
{
  ProtobufCMessage base;
  size_t n_superblock;
  char **superblock;
};
#define GUESTFS_TUNE2FSL_RET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_tune2fsl_ret__descriptor) \
    , 0,NULL }


struct  _GuestfsBlockdevSetroArgs
{
  ProtobufCMessage base;
  char *device;
};
#define GUESTFS_BLOCKDEV_SETRO_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_blockdev_setro_args__descriptor) \
    , NULL }


struct  _GuestfsBlockdevSetrwArgs
{
  ProtobufCMessage base;
  char *device;
};
#define GUESTFS_BLOCKDEV_SETRW_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_blockdev_setrw_args__descriptor) \
    , NULL }


struct  _GuestfsBlockdevGetroArgs
{
  ProtobufCMessage base;
  char *device;
};
#define GUESTFS_BLOCKDEV_GETRO_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_blockdev_getro_args__descriptor) \
    , NULL }


struct  _GuestfsBlockdevGetroRet
{
  ProtobufCMessage base;
  protobuf_c_boolean ro;
};
#define GUESTFS_BLOCKDEV_GETRO_RET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_blockdev_getro_ret__descriptor) \
    , 0 }


struct  _GuestfsBlockdevGetssArgs
{
  ProtobufCMessage base;
  char *device;
};
#define GUESTFS_BLOCKDEV_GETSS_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_blockdev_getss_args__descriptor) \
    , NULL }


struct  _GuestfsBlockdevGetssRet
{
  ProtobufCMessage base;
  int32_t sectorsize;
};
#define GUESTFS_BLOCKDEV_GETSS_RET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_blockdev_getss_ret__descriptor) \
    , 0 }


struct  _GuestfsBlockdevGetbszArgs
{
  ProtobufCMessage base;
  char *device;
};
#define GUESTFS_BLOCKDEV_GETBSZ_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_blockdev_getbsz_args__descriptor) \
    , NULL }


struct  _GuestfsBlockdevGetbszRet
{
  ProtobufCMessage base;
  int32_t blocksize;
};
#define GUESTFS_BLOCKDEV_GETBSZ_RET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_blockdev_getbsz_ret__descriptor) \
    , 0 }


struct  _GuestfsBlockdevSetbszArgs
{
  ProtobufCMessage base;
  char *device;
  int32_t blocksize;
};
#define GUESTFS_BLOCKDEV_SETBSZ_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_blockdev_setbsz_args__descriptor) \
    , NULL, 0 }


struct  _GuestfsBlockdevGetszArgs
{
  ProtobufCMessage base;
  char *device;
};
#define GUESTFS_BLOCKDEV_GETSZ_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_blockdev_getsz_args__descriptor) \
    , NULL }


struct  _GuestfsBlockdevGetszRet
{
  ProtobufCMessage base;
  int64_t sizeinsectors;
};
#define GUESTFS_BLOCKDEV_GETSZ_RET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_blockdev_getsz_ret__descriptor) \
    , 0 }


struct  _GuestfsBlockdevGetsize64Args
{
  ProtobufCMessage base;
  char *device;
};
#define GUESTFS_BLOCKDEV_GETSIZE64_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_blockdev_getsize64_args__descriptor) \
    , NULL }


struct  _GuestfsBlockdevGetsize64Ret
{
  ProtobufCMessage base;
  int64_t sizeinbytes;
};
#define GUESTFS_BLOCKDEV_GETSIZE64_RET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_blockdev_getsize64_ret__descriptor) \
    , 0 }


struct  _GuestfsBlockdevFlushbufsArgs
{
  ProtobufCMessage base;
  char *device;
};
#define GUESTFS_BLOCKDEV_FLUSHBUFS_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_blockdev_flushbufs_args__descriptor) \
    , NULL }


struct  _GuestfsBlockdevRereadptArgs
{
  ProtobufCMessage base;
  char *device;
};
#define GUESTFS_BLOCKDEV_REREADPT_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_blockdev_rereadpt_args__descriptor) \
    , NULL }


struct  _GuestfsUploadArgs
{
  ProtobufCMessage base;
  char *remotefilename;
};
#define GUESTFS_UPLOAD_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_upload_args__descriptor) \
    , NULL }


struct  _GuestfsDownloadArgs
{
  ProtobufCMessage base;
  char *remotefilename;
};
#define GUESTFS_DOWNLOAD_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_download_args__descriptor) \
    , NULL }


struct  _GuestfsChecksumArgs
{
  ProtobufCMessage base;
  char *csumtype;
  char *path;
};
#define GUESTFS_CHECKSUM_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_checksum_args__descriptor) \
    , NULL, NULL }


struct  _GuestfsChecksumRet
{
  ProtobufCMessage base;
  char *checksum;
};
#define GUESTFS_CHECKSUM_RET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_checksum_ret__descriptor) \
    , NULL }


struct  _GuestfsTarInArgs
{
  ProtobufCMessage base;
  char *directory;
  char *compress;
};
#define GUESTFS_TAR_IN_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_tar_in_args__descriptor) \
    , NULL, NULL }


struct  _GuestfsTarOutArgs
{
  ProtobufCMessage base;
  char *directory;
  char *compress;
  protobuf_c_boolean numericowner;
  size_t n_excludes;
  char **excludes;
};
#define GUESTFS_TAR_OUT_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_tar_out_args__descriptor) \
    , NULL, NULL, 0, 0,NULL }


struct  _GuestfsTgzInArgs
{
  ProtobufCMessage base;
  char *directory;
};
#define GUESTFS_TGZ_IN_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_tgz_in_args__descriptor) \
    , NULL }


struct  _GuestfsTgzOutArgs
{
  ProtobufCMessage base;
  char *directory;
};
#define GUESTFS_TGZ_OUT_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_tgz_out_args__descriptor) \
    , NULL }


struct  _GuestfsMountRoArgs
{
  ProtobufCMessage base;
  char *mountable;
  char *mountpoint;
};
#define GUESTFS_MOUNT_RO_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_mount_ro_args__descriptor) \
    , NULL, NULL }


struct  _GuestfsMountOptionsArgs
{
  ProtobufCMessage base;
  char *options;
  char *mountable;
  char *mountpoint;
};
#define GUESTFS_MOUNT_OPTIONS_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_mount_options_args__descriptor) \
    , NULL, NULL, NULL }


struct  _GuestfsMountVfsArgs
{
  ProtobufCMessage base;
  char *options;
  char *vfstype;
  char *mountable;
  char *mountpoint;
};
#define GUESTFS_MOUNT_VFS_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_mount_vfs_args__descriptor) \
    , NULL, NULL, NULL, NULL }


struct  _GuestfsDebugArgs
{
  ProtobufCMessage base;
  char *subcmd;
  size_t n_extraargs;
  char **extraargs;
};
#define GUESTFS_DEBUG_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_debug_args__descriptor) \
    , NULL, 0,NULL }


struct  _GuestfsDebugRet
{
  ProtobufCMessage base;
  char *result;
};
#define GUESTFS_DEBUG_RET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_debug_ret__descriptor) \
    , NULL }


struct  _GuestfsLvremoveArgs
{
  ProtobufCMessage base;
  char *device;
};
#define GUESTFS_LVREMOVE_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_lvremove_args__descriptor) \
    , NULL }


struct  _GuestfsVgremoveArgs
{
  ProtobufCMessage base;
  char *vgname;
};
#define GUESTFS_VGREMOVE_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_vgremove_args__descriptor) \
    , NULL }


struct  _GuestfsPvremoveArgs
{
  ProtobufCMessage base;
  char *device;
};
#define GUESTFS_PVREMOVE_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_pvremove_args__descriptor) \
    , NULL }


struct  _GuestfsSetE2labelArgs
{
  ProtobufCMessage base;
  char *device;
  char *label;
};
#define GUESTFS_SET_E2LABEL_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_set_e2label_args__descriptor) \
    , NULL, NULL }


struct  _GuestfsGetE2labelArgs
{
  ProtobufCMessage base;
  char *device;
};
#define GUESTFS_GET_E2LABEL_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_get_e2label_args__descriptor) \
    , NULL }


struct  _GuestfsGetE2labelRet
{
  ProtobufCMessage base;
  char *label;
};
#define GUESTFS_GET_E2LABEL_RET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_get_e2label_ret__descriptor) \
    , NULL }


struct  _GuestfsSetE2uuidArgs
{
  ProtobufCMessage base;
  char *device;
  char *uuid;
};
#define GUESTFS_SET_E2UUID_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_set_e2uuid_args__descriptor) \
    , NULL, NULL }


struct  _GuestfsGetE2uuidArgs
{
  ProtobufCMessage base;
  char *device;
};
#define GUESTFS_GET_E2UUID_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_get_e2uuid_args__descriptor) \
    , NULL }


struct  _GuestfsGetE2uuidRet
{
  ProtobufCMessage base;
  char *uuid;
};
#define GUESTFS_GET_E2UUID_RET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_get_e2uuid_ret__descriptor) \
    , NULL }


struct  _GuestfsFsckArgs
{
  ProtobufCMessage base;
  char *fstype;
  char *device;
};
#define GUESTFS_FSCK_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_fsck_args__descriptor) \
    , NULL, NULL }


struct  _GuestfsFsckRet
{
  ProtobufCMessage base;
  int32_t status;
};
#define GUESTFS_FSCK_RET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_fsck_ret__descriptor) \
    , 0 }


struct  _GuestfsZeroArgs
{
  ProtobufCMessage base;
  char *device;
};
#define GUESTFS_ZERO_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_zero_args__descriptor) \
    , NULL }


struct  _GuestfsGrubInstallArgs
{
  ProtobufCMessage base;
  char *root;
  char *device;
};
#define GUESTFS_GRUB_INSTALL_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_grub_install_args__descriptor) \
    , NULL, NULL }


struct  _GuestfsCpArgs
{
  ProtobufCMessage base;
  char *src;
  char *dest;
};
#define GUESTFS_CP_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_cp_args__descriptor) \
    , NULL, NULL }


struct  _GuestfsCpAaArgs
{
  ProtobufCMessage base;
  char *src;
  char *dest;
};
#define GUESTFS_CP_AA_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_cp_aa_args__descriptor) \
    , NULL, NULL }


struct  _GuestfsMvArgs
{
  ProtobufCMessage base;
  char *src;
  char *dest;
};
#define GUESTFS_MV_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_mv_args__descriptor) \
    , NULL, NULL }


struct  _GuestfsDropCachesArgs
{
  ProtobufCMessage base;
  int32_t whattodrop;
};
#define GUESTFS_DROP_CACHES_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_drop_caches_args__descriptor) \
    , 0 }


struct  _GuestfsDmesgRet
{
  ProtobufCMessage base;
  char *kmsgs;
};
#define GUESTFS_DMESG_RET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_dmesg_ret__descriptor) \
    , NULL }


struct  _GuestfsEqualArgs
{
  ProtobufCMessage base;
  char *file1;
  char *file2;
};
#define GUESTFS_EQUAL_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_equal_args__descriptor) \
    , NULL, NULL }


struct  _GuestfsEqualRet
{
  ProtobufCMessage base;
  protobuf_c_boolean equality;
};
#define GUESTFS_EQUAL_RET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_equal_ret__descriptor) \
    , 0 }


struct  _GuestfsStringsArgs
{
  ProtobufCMessage base;
  char *path;
};
#define GUESTFS_STRINGS_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_strings_args__descriptor) \
    , NULL }


struct  _GuestfsStringsRet
{
  ProtobufCMessage base;
  size_t n_stringsout;
  char **stringsout;
};
#define GUESTFS_STRINGS_RET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_strings_ret__descriptor) \
    , 0,NULL }


struct  _GuestfsStringsEeArgs
{
  ProtobufCMessage base;
  char *encoding;
  char *path;
};
#define GUESTFS_STRINGS_EE_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_strings_ee_args__descriptor) \
    , NULL, NULL }


struct  _GuestfsStringsEeRet
{
  ProtobufCMessage base;
  size_t n_stringsout;
  char **stringsout;
};
#define GUESTFS_STRINGS_EE_RET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_strings_ee_ret__descriptor) \
    , 0,NULL }


struct  _GuestfsHexdumpArgs
{
  ProtobufCMessage base;
  char *path;
};
#define GUESTFS_HEXDUMP_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_hexdump_args__descriptor) \
    , NULL }


struct  _GuestfsHexdumpRet
{
  ProtobufCMessage base;
  char *dump;
};
#define GUESTFS_HEXDUMP_RET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_hexdump_ret__descriptor) \
    , NULL }


struct  _GuestfsZerofreeArgs
{
  ProtobufCMessage base;
  char *device;
};
#define GUESTFS_ZEROFREE_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_zerofree_args__descriptor) \
    , NULL }


struct  _GuestfsPvresizeArgs
{
  ProtobufCMessage base;
  char *device;
};
#define GUESTFS_PVRESIZE_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_pvresize_args__descriptor) \
    , NULL }


struct  _GuestfsSfdiskNnArgs
{
  ProtobufCMessage base;
  char *device;
  int32_t partnum;
  int32_t cyls;
  int32_t heads;
  int32_t sectors;
  char *line;
};
#define GUESTFS_SFDISK_NN_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_sfdisk_nn_args__descriptor) \
    , NULL, 0, 0, 0, 0, NULL }


struct  _GuestfsSfdisklArgs
{
  ProtobufCMessage base;
  char *device;
};
#define GUESTFS_SFDISKL_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_sfdiskl_args__descriptor) \
    , NULL }


struct  _GuestfsSfdisklRet
{
  ProtobufCMessage base;
  char *partitions;
};
#define GUESTFS_SFDISKL_RET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_sfdiskl_ret__descriptor) \
    , NULL }


struct  _GuestfsSfdiskKernelGeometryArgs
{
  ProtobufCMessage base;
  char *device;
};
#define GUESTFS_SFDISK_KERNEL_GEOMETRY_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_sfdisk_kernel_geometry_args__descriptor) \
    , NULL }


struct  _GuestfsSfdiskKernelGeometryRet
{
  ProtobufCMessage base;
  char *partitions;
};
#define GUESTFS_SFDISK_KERNEL_GEOMETRY_RET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_sfdisk_kernel_geometry_ret__descriptor) \
    , NULL }


struct  _GuestfsSfdiskDiskGeometryArgs
{
  ProtobufCMessage base;
  char *device;
};
#define GUESTFS_SFDISK_DISK_GEOMETRY_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_sfdisk_disk_geometry_args__descriptor) \
    , NULL }


struct  _GuestfsSfdiskDiskGeometryRet
{
  ProtobufCMessage base;
  char *partitions;
};
#define GUESTFS_SFDISK_DISK_GEOMETRY_RET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_sfdisk_disk_geometry_ret__descriptor) \
    , NULL }


struct  _GuestfsVgActivateAllArgs
{
  ProtobufCMessage base;
  protobuf_c_boolean activate;
};
#define GUESTFS_VG_ACTIVATE_ALL_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_vg_activate_all_args__descriptor) \
    , 0 }


struct  _GuestfsVgActivateArgs
{
  ProtobufCMessage base;
  protobuf_c_boolean activate;
  size_t n_volgroups;
  char **volgroups;
};
#define GUESTFS_VG_ACTIVATE_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_vg_activate_args__descriptor) \
    , 0, 0,NULL }


struct  _GuestfsLvresizeArgs
{
  ProtobufCMessage base;
  char *device;
  int32_t mbytes;
};
#define GUESTFS_LVRESIZE_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_lvresize_args__descriptor) \
    , NULL, 0 }


struct  _GuestfsResize2fsArgs
{
  ProtobufCMessage base;
  char *device;
};
#define GUESTFS_RESIZE2FS_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_resize2fs_args__descriptor) \
    , NULL }


struct  _GuestfsE2fsckFfArgs
{
  ProtobufCMessage base;
  char *device;
};
#define GUESTFS_E2FSCK_FF_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_e2fsck_ff_args__descriptor) \
    , NULL }


struct  _GuestfsSleepArgs
{
  ProtobufCMessage base;
  int32_t secs;
};
#define GUESTFS_SLEEP_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_sleep_args__descriptor) \
    , 0 }


struct  _GuestfsNtfs3gprobeArgs
{
  ProtobufCMessage base;
  protobuf_c_boolean rw;
  char *device;
};
#define GUESTFS_NTFS3GPROBE_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_ntfs3gprobe_args__descriptor) \
    , 0, NULL }


struct  _GuestfsNtfs3gprobeRet
{
  ProtobufCMessage base;
  int32_t status;
};
#define GUESTFS_NTFS3GPROBE_RET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_ntfs3gprobe_ret__descriptor) \
    , 0 }


struct  _GuestfsShArgs
{
  ProtobufCMessage base;
  char *command;
};
#define GUESTFS_SH_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_sh_args__descriptor) \
    , NULL }


struct  _GuestfsShRet
{
  ProtobufCMessage base;
  char *output;
};
#define GUESTFS_SH_RET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_sh_ret__descriptor) \
    , NULL }


struct  _GuestfsShLinesArgs
{
  ProtobufCMessage base;
  char *command;
};
#define GUESTFS_SH_LINES_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_sh_lines_args__descriptor) \
    , NULL }


struct  _GuestfsShLinesRet
{
  ProtobufCMessage base;
  size_t n_lines;
  char **lines;
};
#define GUESTFS_SH_LINES_RET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_sh_lines_ret__descriptor) \
    , 0,NULL }


struct  _GuestfsGlobExpandArgs
{
  ProtobufCMessage base;
  char *pattern;
};
#define GUESTFS_GLOB_EXPAND_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_glob_expand_args__descriptor) \
    , NULL }


struct  _GuestfsGlobExpandRet
{
  ProtobufCMessage base;
  size_t n_paths;
  char **paths;
};
#define GUESTFS_GLOB_EXPAND_RET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_glob_expand_ret__descriptor) \
    , 0,NULL }


struct  _GuestfsScrubDeviceArgs
{
  ProtobufCMessage base;
  char *device;
};
#define GUESTFS_SCRUB_DEVICE_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_scrub_device_args__descriptor) \
    , NULL }


struct  _GuestfsScrubFileArgs
{
  ProtobufCMessage base;
  char *file;
};
#define GUESTFS_SCRUB_FILE_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_scrub_file_args__descriptor) \
    , NULL }


struct  _GuestfsScrubFreespaceArgs
{
  ProtobufCMessage base;
  char *dir;
};
#define GUESTFS_SCRUB_FREESPACE_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_scrub_freespace_args__descriptor) \
    , NULL }


struct  _GuestfsMkdtempArgs
{
  ProtobufCMessage base;
  char *tmpl;
};
#define GUESTFS_MKDTEMP_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_mkdtemp_args__descriptor) \
    , NULL }


struct  _GuestfsMkdtempRet
{
  ProtobufCMessage base;
  char *dir;
};
#define GUESTFS_MKDTEMP_RET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_mkdtemp_ret__descriptor) \
    , NULL }


struct  _GuestfsWclArgs
{
  ProtobufCMessage base;
  char *path;
};
#define GUESTFS_WCL_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_wcl_args__descriptor) \
    , NULL }


struct  _GuestfsWclRet
{
  ProtobufCMessage base;
  int32_t lines;
};
#define GUESTFS_WCL_RET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_wcl_ret__descriptor) \
    , 0 }


struct  _GuestfsWcwArgs
{
  ProtobufCMessage base;
  char *path;
};
#define GUESTFS_WCW_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_wcw_args__descriptor) \
    , NULL }


struct  _GuestfsWcwRet
{
  ProtobufCMessage base;
  int32_t words;
};
#define GUESTFS_WCW_RET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_wcw_ret__descriptor) \
    , 0 }


struct  _GuestfsWccArgs
{
  ProtobufCMessage base;
  char *path;
};
#define GUESTFS_WCC_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_wcc_args__descriptor) \
    , NULL }


struct  _GuestfsWccRet
{
  ProtobufCMessage base;
  int32_t chars;
};
#define GUESTFS_WCC_RET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_wcc_ret__descriptor) \
    , 0 }


struct  _GuestfsHeadArgs
{
  ProtobufCMessage base;
  char *path;
};
#define GUESTFS_HEAD_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_head_args__descriptor) \
    , NULL }


struct  _GuestfsHeadRet
{
  ProtobufCMessage base;
  size_t n_lines;
  char **lines;
};
#define GUESTFS_HEAD_RET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_head_ret__descriptor) \
    , 0,NULL }


struct  _GuestfsHeadNnArgs
{
  ProtobufCMessage base;
  int32_t nrlines;
  char *path;
};
#define GUESTFS_HEAD_NN_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_head_nn_args__descriptor) \
    , 0, NULL }


struct  _GuestfsHeadNnRet
{
  ProtobufCMessage base;
  size_t n_lines;
  char **lines;
};
#define GUESTFS_HEAD_NN_RET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_head_nn_ret__descriptor) \
    , 0,NULL }


struct  _GuestfsTailArgs
{
  ProtobufCMessage base;
  char *path;
};
#define GUESTFS_TAIL_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_tail_args__descriptor) \
    , NULL }


struct  _GuestfsTailRet
{
  ProtobufCMessage base;
  size_t n_lines;
  char **lines;
};
#define GUESTFS_TAIL_RET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_tail_ret__descriptor) \
    , 0,NULL }


struct  _GuestfsTailNnArgs
{
  ProtobufCMessage base;
  int32_t nrlines;
  char *path;
};
#define GUESTFS_TAIL_NN_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_tail_nn_args__descriptor) \
    , 0, NULL }


struct  _GuestfsTailNnRet
{
  ProtobufCMessage base;
  size_t n_lines;
  char **lines;
};
#define GUESTFS_TAIL_NN_RET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_tail_nn_ret__descriptor) \
    , 0,NULL }


struct  _GuestfsDfRet
{
  ProtobufCMessage base;
  char *output;
};
#define GUESTFS_DF_RET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_df_ret__descriptor) \
    , NULL }


struct  _GuestfsDfhRet
{
  ProtobufCMessage base;
  char *output;
};
#define GUESTFS_DFH_RET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_dfh_ret__descriptor) \
    , NULL }


struct  _GuestfsDuArgs
{
  ProtobufCMessage base;
  char *path;
};
#define GUESTFS_DU_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_du_args__descriptor) \
    , NULL }


struct  _GuestfsDuRet
{
  ProtobufCMessage base;
  int64_t sizekb;
};
#define GUESTFS_DU_RET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_du_ret__descriptor) \
    , 0 }


struct  _GuestfsInitrdListArgs
{
  ProtobufCMessage base;
  char *path;
};
#define GUESTFS_INITRD_LIST_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_initrd_list_args__descriptor) \
    , NULL }


struct  _GuestfsInitrdListRet
{
  ProtobufCMessage base;
  size_t n_filenames;
  char **filenames;
};
#define GUESTFS_INITRD_LIST_RET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_initrd_list_ret__descriptor) \
    , 0,NULL }


struct  _GuestfsMountLoopArgs
{
  ProtobufCMessage base;
  char *file;
  char *mountpoint;
};
#define GUESTFS_MOUNT_LOOP_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_mount_loop_args__descriptor) \
    , NULL, NULL }


struct  _GuestfsMkswapArgs
{
  ProtobufCMessage base;
  char *device;
  char *label;
  char *uuid;
};
#define GUESTFS_MKSWAP_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_mkswap_args__descriptor) \
    , NULL, NULL, NULL }


struct  _GuestfsMkswapLlArgs
{
  ProtobufCMessage base;
  char *label;
  char *device;
};
#define GUESTFS_MKSWAP_LL_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_mkswap_ll_args__descriptor) \
    , NULL, NULL }


struct  _GuestfsMkswapUuArgs
{
  ProtobufCMessage base;
  char *uuid;
  char *device;
};
#define GUESTFS_MKSWAP_UU_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_mkswap_uu_args__descriptor) \
    , NULL, NULL }


struct  _GuestfsMknodArgs
{
  ProtobufCMessage base;
  int32_t mode;
  int32_t devmajor;
  int32_t devminor;
  char *path;
};
#define GUESTFS_MKNOD_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_mknod_args__descriptor) \
    , 0, 0, 0, NULL }


struct  _GuestfsMkfifoArgs
{
  ProtobufCMessage base;
  int32_t mode;
  char *path;
};
#define GUESTFS_MKFIFO_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_mkfifo_args__descriptor) \
    , 0, NULL }


struct  _GuestfsMknodBbArgs
{
  ProtobufCMessage base;
  int32_t mode;
  int32_t devmajor;
  int32_t devminor;
  char *path;
};
#define GUESTFS_MKNOD_BB_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_mknod_bb_args__descriptor) \
    , 0, 0, 0, NULL }


struct  _GuestfsMknodCcArgs
{
  ProtobufCMessage base;
  int32_t mode;
  int32_t devmajor;
  int32_t devminor;
  char *path;
};
#define GUESTFS_MKNOD_CC_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_mknod_cc_args__descriptor) \
    , 0, 0, 0, NULL }


struct  _GuestfsUmaskArgs
{
  ProtobufCMessage base;
  int32_t mask;
};
#define GUESTFS_UMASK_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_umask_args__descriptor) \
    , 0 }


struct  _GuestfsUmaskRet
{
  ProtobufCMessage base;
  int32_t oldmask;
};
#define GUESTFS_UMASK_RET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_umask_ret__descriptor) \
    , 0 }


struct  _GuestfsReaddirArgs
{
  ProtobufCMessage base;
  char *dir;
};
#define GUESTFS_READDIR_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_readdir_args__descriptor) \
    , NULL }


struct  _GuestfsReaddirRet
{
  ProtobufCMessage base;
  GuestfsIntDirentList *entries;
};
#define GUESTFS_READDIR_RET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_readdir_ret__descriptor) \
    , NULL }


struct  _GuestfsSfdiskmArgs
{
  ProtobufCMessage base;
  char *device;
  size_t n_lines;
  char **lines;
};
#define GUESTFS_SFDISKM_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_sfdiskm_args__descriptor) \
    , NULL, 0,NULL }


struct  _GuestfsZfileArgs
{
  ProtobufCMessage base;
  char *meth;
  char *path;
};
#define GUESTFS_ZFILE_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_zfile_args__descriptor) \
    , NULL, NULL }


struct  _GuestfsZfileRet
{
  ProtobufCMessage base;
  char *description;
};
#define GUESTFS_ZFILE_RET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_zfile_ret__descriptor) \
    , NULL }


struct  _GuestfsGetxattrsArgs
{
  ProtobufCMessage base;
  char *path;
};
#define GUESTFS_GETXATTRS_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_getxattrs_args__descriptor) \
    , NULL }


struct  _GuestfsGetxattrsRet
{
  ProtobufCMessage base;
  GuestfsIntXAttrList *xattrs;
};
#define GUESTFS_GETXATTRS_RET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_getxattrs_ret__descriptor) \
    , NULL }


struct  _GuestfsLgetxattrsArgs
{
  ProtobufCMessage base;
  char *path;
};
#define GUESTFS_LGETXATTRS_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_lgetxattrs_args__descriptor) \
    , NULL }


struct  _GuestfsLgetxattrsRet
{
  ProtobufCMessage base;
  GuestfsIntXAttrList *xattrs;
};
#define GUESTFS_LGETXATTRS_RET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_lgetxattrs_ret__descriptor) \
    , NULL }


struct  _GuestfsSetxattrArgs
{
  ProtobufCMessage base;
  char *xattr;
  char *val;
  int32_t vallen;
  char *path;
};
#define GUESTFS_SETXATTR_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_setxattr_args__descriptor) \
    , NULL, NULL, 0, NULL }


struct  _GuestfsLsetxattrArgs
{
  ProtobufCMessage base;
  char *xattr;
  char *val;
  int32_t vallen;
  char *path;
};
#define GUESTFS_LSETXATTR_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_lsetxattr_args__descriptor) \
    , NULL, NULL, 0, NULL }


struct  _GuestfsRemovexattrArgs
{
  ProtobufCMessage base;
  char *xattr;
  char *path;
};
#define GUESTFS_REMOVEXATTR_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_removexattr_args__descriptor) \
    , NULL, NULL }


struct  _GuestfsLremovexattrArgs
{
  ProtobufCMessage base;
  char *xattr;
  char *path;
};
#define GUESTFS_LREMOVEXATTR_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_lremovexattr_args__descriptor) \
    , NULL, NULL }


struct  _GuestfsMountpointsRet
{
  ProtobufCMessage base;
  size_t n_mps;
  char **mps;
};
#define GUESTFS_MOUNTPOINTS_RET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_mountpoints_ret__descriptor) \
    , 0,NULL }


struct  _GuestfsMkmountpointArgs
{
  ProtobufCMessage base;
  char *exemptpath;
};
#define GUESTFS_MKMOUNTPOINT_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_mkmountpoint_args__descriptor) \
    , NULL }


struct  _GuestfsRmmountpointArgs
{
  ProtobufCMessage base;
  char *exemptpath;
};
#define GUESTFS_RMMOUNTPOINT_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_rmmountpoint_args__descriptor) \
    , NULL }


struct  _GuestfsGrepArgs
{
  ProtobufCMessage base;
  char *regex;
  char *path;
  protobuf_c_boolean extended;
  protobuf_c_boolean fixed;
  protobuf_c_boolean insensitive;
  protobuf_c_boolean compressed;
};
#define GUESTFS_GREP_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_grep_args__descriptor) \
    , NULL, NULL, 0, 0, 0, 0 }


struct  _GuestfsGrepRet
{
  ProtobufCMessage base;
  size_t n_lines;
  char **lines;
};
#define GUESTFS_GREP_RET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_grep_ret__descriptor) \
    , 0,NULL }


struct  _GuestfsEgrepArgs
{
  ProtobufCMessage base;
  char *regex;
  char *path;
};
#define GUESTFS_EGREP_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_egrep_args__descriptor) \
    , NULL, NULL }


struct  _GuestfsEgrepRet
{
  ProtobufCMessage base;
  size_t n_lines;
  char **lines;
};
#define GUESTFS_EGREP_RET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_egrep_ret__descriptor) \
    , 0,NULL }


struct  _GuestfsFgrepArgs
{
  ProtobufCMessage base;
  char *pattern;
  char *path;
};
#define GUESTFS_FGREP_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_fgrep_args__descriptor) \
    , NULL, NULL }


struct  _GuestfsFgrepRet
{
  ProtobufCMessage base;
  size_t n_lines;
  char **lines;
};
#define GUESTFS_FGREP_RET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_fgrep_ret__descriptor) \
    , 0,NULL }


struct  _GuestfsGrepiArgs
{
  ProtobufCMessage base;
  char *regex;
  char *path;
};
#define GUESTFS_GREPI_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_grepi_args__descriptor) \
    , NULL, NULL }


struct  _GuestfsGrepiRet
{
  ProtobufCMessage base;
  size_t n_lines;
  char **lines;
};
#define GUESTFS_GREPI_RET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_grepi_ret__descriptor) \
    , 0,NULL }


struct  _GuestfsEgrepiArgs
{
  ProtobufCMessage base;
  char *regex;
  char *path;
};
#define GUESTFS_EGREPI_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_egrepi_args__descriptor) \
    , NULL, NULL }


struct  _GuestfsEgrepiRet
{
  ProtobufCMessage base;
  size_t n_lines;
  char **lines;
};
#define GUESTFS_EGREPI_RET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_egrepi_ret__descriptor) \
    , 0,NULL }


struct  _GuestfsFgrepiArgs
{
  ProtobufCMessage base;
  char *pattern;
  char *path;
};
#define GUESTFS_FGREPI_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_fgrepi_args__descriptor) \
    , NULL, NULL }


struct  _GuestfsFgrepiRet
{
  ProtobufCMessage base;
  size_t n_lines;
  char **lines;
};
#define GUESTFS_FGREPI_RET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_fgrepi_ret__descriptor) \
    , 0,NULL }


struct  _GuestfsZgrepArgs
{
  ProtobufCMessage base;
  char *regex;
  char *path;
};
#define GUESTFS_ZGREP_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_zgrep_args__descriptor) \
    , NULL, NULL }


struct  _GuestfsZgrepRet
{
  ProtobufCMessage base;
  size_t n_lines;
  char **lines;
};
#define GUESTFS_ZGREP_RET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_zgrep_ret__descriptor) \
    , 0,NULL }


struct  _GuestfsZegrepArgs
{
  ProtobufCMessage base;
  char *regex;
  char *path;
};
#define GUESTFS_ZEGREP_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_zegrep_args__descriptor) \
    , NULL, NULL }


struct  _GuestfsZegrepRet
{
  ProtobufCMessage base;
  size_t n_lines;
  char **lines;
};
#define GUESTFS_ZEGREP_RET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_zegrep_ret__descriptor) \
    , 0,NULL }


struct  _GuestfsZfgrepArgs
{
  ProtobufCMessage base;
  char *pattern;
  char *path;
};
#define GUESTFS_ZFGREP_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_zfgrep_args__descriptor) \
    , NULL, NULL }


struct  _GuestfsZfgrepRet
{
  ProtobufCMessage base;
  size_t n_lines;
  char **lines;
};
#define GUESTFS_ZFGREP_RET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_zfgrep_ret__descriptor) \
    , 0,NULL }


struct  _GuestfsZgrepiArgs
{
  ProtobufCMessage base;
  char *regex;
  char *path;
};
#define GUESTFS_ZGREPI_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_zgrepi_args__descriptor) \
    , NULL, NULL }


struct  _GuestfsZgrepiRet
{
  ProtobufCMessage base;
  size_t n_lines;
  char **lines;
};
#define GUESTFS_ZGREPI_RET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_zgrepi_ret__descriptor) \
    , 0,NULL }


struct  _GuestfsZegrepiArgs
{
  ProtobufCMessage base;
  char *regex;
  char *path;
};
#define GUESTFS_ZEGREPI_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_zegrepi_args__descriptor) \
    , NULL, NULL }


struct  _GuestfsZegrepiRet
{
  ProtobufCMessage base;
  size_t n_lines;
  char **lines;
};
#define GUESTFS_ZEGREPI_RET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_zegrepi_ret__descriptor) \
    , 0,NULL }


struct  _GuestfsZfgrepiArgs
{
  ProtobufCMessage base;
  char *pattern;
  char *path;
};
#define GUESTFS_ZFGREPI_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_zfgrepi_args__descriptor) \
    , NULL, NULL }


struct  _GuestfsZfgrepiRet
{
  ProtobufCMessage base;
  size_t n_lines;
  char **lines;
};
#define GUESTFS_ZFGREPI_RET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_zfgrepi_ret__descriptor) \
    , 0,NULL }


struct  _GuestfsRealpathArgs
{
  ProtobufCMessage base;
  char *path;
};
#define GUESTFS_REALPATH_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_realpath_args__descriptor) \
    , NULL }


struct  _GuestfsRealpathRet
{
  ProtobufCMessage base;
  char *rpath;
};
#define GUESTFS_REALPATH_RET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_realpath_ret__descriptor) \
    , NULL }


struct  _GuestfsLnArgs
{
  ProtobufCMessage base;
  char *target;
  char *linkname;
};
#define GUESTFS_LN_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_ln_args__descriptor) \
    , NULL, NULL }


struct  _GuestfsLnfArgs
{
  ProtobufCMessage base;
  char *target;
  char *linkname;
};
#define GUESTFS_LNF_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_lnf_args__descriptor) \
    , NULL, NULL }


struct  _GuestfsLnsArgs
{
  ProtobufCMessage base;
  char *target;
  char *linkname;
};
#define GUESTFS_LNS_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_lns_args__descriptor) \
    , NULL, NULL }


struct  _GuestfsLnSfArgs
{
  ProtobufCMessage base;
  char *target;
  char *linkname;
};
#define GUESTFS_LN_SF_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_ln_sf_args__descriptor) \
    , NULL, NULL }


struct  _GuestfsReadlinkArgs
{
  ProtobufCMessage base;
  char *path;
};
#define GUESTFS_READLINK_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_readlink_args__descriptor) \
    , NULL }


struct  _GuestfsReadlinkRet
{
  ProtobufCMessage base;
  char *link;
};
#define GUESTFS_READLINK_RET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_readlink_ret__descriptor) \
    , NULL }


struct  _GuestfsFallocateArgs
{
  ProtobufCMessage base;
  char *path;
  int32_t len;
};
#define GUESTFS_FALLOCATE_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_fallocate_args__descriptor) \
    , NULL, 0 }


struct  _GuestfsSwaponDeviceArgs
{
  ProtobufCMessage base;
  char *device;
};
#define GUESTFS_SWAPON_DEVICE_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_swapon_device_args__descriptor) \
    , NULL }


struct  _GuestfsSwapoffDeviceArgs
{
  ProtobufCMessage base;
  char *device;
};
#define GUESTFS_SWAPOFF_DEVICE_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_swapoff_device_args__descriptor) \
    , NULL }


struct  _GuestfsSwaponFileArgs
{
  ProtobufCMessage base;
  char *file;
};
#define GUESTFS_SWAPON_FILE_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_swapon_file_args__descriptor) \
    , NULL }


struct  _GuestfsSwapoffFileArgs
{
  ProtobufCMessage base;
  char *file;
};
#define GUESTFS_SWAPOFF_FILE_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_swapoff_file_args__descriptor) \
    , NULL }


struct  _GuestfsSwaponLabelArgs
{
  ProtobufCMessage base;
  char *label;
};
#define GUESTFS_SWAPON_LABEL_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_swapon_label_args__descriptor) \
    , NULL }


struct  _GuestfsSwapoffLabelArgs
{
  ProtobufCMessage base;
  char *label;
};
#define GUESTFS_SWAPOFF_LABEL_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_swapoff_label_args__descriptor) \
    , NULL }


struct  _GuestfsSwaponUuidArgs
{
  ProtobufCMessage base;
  char *uuid;
};
#define GUESTFS_SWAPON_UUID_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_swapon_uuid_args__descriptor) \
    , NULL }


struct  _GuestfsSwapoffUuidArgs
{
  ProtobufCMessage base;
  char *uuid;
};
#define GUESTFS_SWAPOFF_UUID_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_swapoff_uuid_args__descriptor) \
    , NULL }


struct  _GuestfsMkswapFileArgs
{
  ProtobufCMessage base;
  char *path;
};
#define GUESTFS_MKSWAP_FILE_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_mkswap_file_args__descriptor) \
    , NULL }


struct  _GuestfsInotifyInitArgs
{
  ProtobufCMessage base;
  int32_t maxevents;
};
#define GUESTFS_INOTIFY_INIT_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_inotify_init_args__descriptor) \
    , 0 }


struct  _GuestfsInotifyAddWatchArgs
{
  ProtobufCMessage base;
  char *path;
  int32_t mask;
};
#define GUESTFS_INOTIFY_ADD_WATCH_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_inotify_add_watch_args__descriptor) \
    , NULL, 0 }


struct  _GuestfsInotifyAddWatchRet
{
  ProtobufCMessage base;
  int64_t wd;
};
#define GUESTFS_INOTIFY_ADD_WATCH_RET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_inotify_add_watch_ret__descriptor) \
    , 0 }


struct  _GuestfsInotifyRmWatchArgs
{
  ProtobufCMessage base;
  int32_t wd;
};
#define GUESTFS_INOTIFY_RM_WATCH_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_inotify_rm_watch_args__descriptor) \
    , 0 }


struct  _GuestfsInotifyReadRet
{
  ProtobufCMessage base;
  GuestfsIntINotifyEventList *events;
};
#define GUESTFS_INOTIFY_READ_RET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_inotify_read_ret__descriptor) \
    , NULL }


struct  _GuestfsInotifyFilesRet
{
  ProtobufCMessage base;
  size_t n_paths;
  char **paths;
};
#define GUESTFS_INOTIFY_FILES_RET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_inotify_files_ret__descriptor) \
    , 0,NULL }


struct  _GuestfsSetconArgs
{
  ProtobufCMessage base;
  char *context;
};
#define GUESTFS_SETCON_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_setcon_args__descriptor) \
    , NULL }


struct  _GuestfsGetconRet
{
  ProtobufCMessage base;
  char *context;
};
#define GUESTFS_GETCON_RET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_getcon_ret__descriptor) \
    , NULL }


struct  _GuestfsMkfsBbArgs
{
  ProtobufCMessage base;
  char *fstype;
  int32_t blocksize;
  char *device;
};
#define GUESTFS_MKFS_BB_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_mkfs_bb_args__descriptor) \
    , NULL, 0, NULL }


struct  _GuestfsMke2journalArgs
{
  ProtobufCMessage base;
  int32_t blocksize;
  char *device;
};
#define GUESTFS_MKE2JOURNAL_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_mke2journal_args__descriptor) \
    , 0, NULL }


struct  _GuestfsMke2journalLlArgs
{
  ProtobufCMessage base;
  int32_t blocksize;
  char *label;
  char *device;
};
#define GUESTFS_MKE2JOURNAL_LL_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_mke2journal_ll_args__descriptor) \
    , 0, NULL, NULL }


struct  _GuestfsMke2journalUuArgs
{
  ProtobufCMessage base;
  int32_t blocksize;
  char *uuid;
  char *device;
};
#define GUESTFS_MKE2JOURNAL_UU_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_mke2journal_uu_args__descriptor) \
    , 0, NULL, NULL }


struct  _GuestfsMke2fsJjArgs
{
  ProtobufCMessage base;
  char *fstype;
  int32_t blocksize;
  char *device;
  char *journal;
};
#define GUESTFS_MKE2FS_JJ_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_mke2fs_jj_args__descriptor) \
    , NULL, 0, NULL, NULL }


struct  _GuestfsMke2fsJlArgs
{
  ProtobufCMessage base;
  char *fstype;
  int32_t blocksize;
  char *device;
  char *label;
};
#define GUESTFS_MKE2FS_JL_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_mke2fs_jl_args__descriptor) \
    , NULL, 0, NULL, NULL }


struct  _GuestfsMke2fsJuArgs
{
  ProtobufCMessage base;
  char *fstype;
  int32_t blocksize;
  char *device;
  char *uuid;
};
#define GUESTFS_MKE2FS_JU_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_mke2fs_ju_args__descriptor) \
    , NULL, 0, NULL, NULL }


struct  _GuestfsModprobeArgs
{
  ProtobufCMessage base;
  char *modulename;
};
#define GUESTFS_MODPROBE_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_modprobe_args__descriptor) \
    , NULL }


struct  _GuestfsEchoDaemonArgs
{
  ProtobufCMessage base;
  size_t n_words;
  char **words;
};
#define GUESTFS_ECHO_DAEMON_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_echo_daemon_args__descriptor) \
    , 0,NULL }


struct  _GuestfsEchoDaemonRet
{
  ProtobufCMessage base;
  char *output;
};
#define GUESTFS_ECHO_DAEMON_RET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_echo_daemon_ret__descriptor) \
    , NULL }


struct  _GuestfsFind0Args
{
  ProtobufCMessage base;
  char *directory;
};
#define GUESTFS_FIND0_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_find0_args__descriptor) \
    , NULL }


struct  _GuestfsCaseSensitivePathArgs
{
  ProtobufCMessage base;
  char *path;
};
#define GUESTFS_CASE_SENSITIVE_PATH_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_case_sensitive_path_args__descriptor) \
    , NULL }


struct  _GuestfsCaseSensitivePathRet
{
  ProtobufCMessage base;
  char *rpath;
};
#define GUESTFS_CASE_SENSITIVE_PATH_RET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_case_sensitive_path_ret__descriptor) \
    , NULL }


struct  _GuestfsVfsTypeArgs
{
  ProtobufCMessage base;
  char *mountable;
};
#define GUESTFS_VFS_TYPE_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_vfs_type_args__descriptor) \
    , NULL }


struct  _GuestfsVfsTypeRet
{
  ProtobufCMessage base;
  char *fstype;
};
#define GUESTFS_VFS_TYPE_RET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_vfs_type_ret__descriptor) \
    , NULL }


struct  _GuestfsTruncateArgs
{
  ProtobufCMessage base;
  char *path;
};
#define GUESTFS_TRUNCATE_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_truncate_args__descriptor) \
    , NULL }


struct  _GuestfsTruncateSizeArgs
{
  ProtobufCMessage base;
  char *path;
  int64_t size;
};
#define GUESTFS_TRUNCATE_SIZE_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_truncate_size_args__descriptor) \
    , NULL, 0 }


struct  _GuestfsUtimensArgs
{
  ProtobufCMessage base;
  char *path;
  int64_t atsecs;
  int64_t atnsecs;
  int64_t mtsecs;
  int64_t mtnsecs;
};
#define GUESTFS_UTIMENS_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_utimens_args__descriptor) \
    , NULL, 0, 0, 0, 0 }


struct  _GuestfsMkdirModeArgs
{
  ProtobufCMessage base;
  char *path;
  int32_t mode;
};
#define GUESTFS_MKDIR_MODE_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_mkdir_mode_args__descriptor) \
    , NULL, 0 }


struct  _GuestfsLchownArgs
{
  ProtobufCMessage base;
  int32_t owner;
  int32_t group;
  char *path;
};
#define GUESTFS_LCHOWN_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_lchown_args__descriptor) \
    , 0, 0, NULL }


struct  _GuestfsInternalLxattrlistArgs
{
  ProtobufCMessage base;
  char *path;
  size_t n_names;
  char **names;
};
#define GUESTFS_INTERNAL_LXATTRLIST_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_internal_lxattrlist_args__descriptor) \
    , NULL, 0,NULL }


struct  _GuestfsInternalLxattrlistRet
{
  ProtobufCMessage base;
  GuestfsIntXAttrList *xattrs;
};
#define GUESTFS_INTERNAL_LXATTRLIST_RET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_internal_lxattrlist_ret__descriptor) \
    , NULL }


struct  _GuestfsInternalReadlinklistArgs
{
  ProtobufCMessage base;
  char *path;
  size_t n_names;
  char **names;
};
#define GUESTFS_INTERNAL_READLINKLIST_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_internal_readlinklist_args__descriptor) \
    , NULL, 0,NULL }


struct  _GuestfsInternalReadlinklistRet
{
  ProtobufCMessage base;
  size_t n_links;
  char **links;
};
#define GUESTFS_INTERNAL_READLINKLIST_RET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_internal_readlinklist_ret__descriptor) \
    , 0,NULL }


struct  _GuestfsPreadArgs
{
  ProtobufCMessage base;
  char *path;
  int32_t count;
  int64_t offset;
};
#define GUESTFS_PREAD_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_pread_args__descriptor) \
    , NULL, 0, 0 }


struct  _GuestfsPreadRet
{
  ProtobufCMessage base;
  ProtobufCBinaryData content;
};
#define GUESTFS_PREAD_RET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_pread_ret__descriptor) \
    , {0,NULL} }


struct  _GuestfsPartInitArgs
{
  ProtobufCMessage base;
  char *device;
  char *parttype;
};
#define GUESTFS_PART_INIT_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_part_init_args__descriptor) \
    , NULL, NULL }


struct  _GuestfsPartAddArgs
{
  ProtobufCMessage base;
  char *device;
  char *prlogex;
  int64_t startsect;
  int64_t endsect;
};
#define GUESTFS_PART_ADD_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_part_add_args__descriptor) \
    , NULL, NULL, 0, 0 }


struct  _GuestfsPartDiskArgs
{
  ProtobufCMessage base;
  char *device;
  char *parttype;
};
#define GUESTFS_PART_DISK_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_part_disk_args__descriptor) \
    , NULL, NULL }


struct  _GuestfsPartSetBootableArgs
{
  ProtobufCMessage base;
  char *device;
  int32_t partnum;
  protobuf_c_boolean bootable;
};
#define GUESTFS_PART_SET_BOOTABLE_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_part_set_bootable_args__descriptor) \
    , NULL, 0, 0 }


struct  _GuestfsPartSetNameArgs
{
  ProtobufCMessage base;
  char *device;
  int32_t partnum;
  char *name;
};
#define GUESTFS_PART_SET_NAME_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_part_set_name_args__descriptor) \
    , NULL, 0, NULL }


struct  _GuestfsPartListArgs
{
  ProtobufCMessage base;
  char *device;
};
#define GUESTFS_PART_LIST_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_part_list_args__descriptor) \
    , NULL }


struct  _GuestfsPartListRet
{
  ProtobufCMessage base;
  GuestfsIntPartitionList *partitions;
};
#define GUESTFS_PART_LIST_RET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_part_list_ret__descriptor) \
    , NULL }


struct  _GuestfsPartGetParttypeArgs
{
  ProtobufCMessage base;
  char *device;
};
#define GUESTFS_PART_GET_PARTTYPE_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_part_get_parttype_args__descriptor) \
    , NULL }


struct  _GuestfsPartGetParttypeRet
{
  ProtobufCMessage base;
  char *parttype;
};
#define GUESTFS_PART_GET_PARTTYPE_RET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_part_get_parttype_ret__descriptor) \
    , NULL }


struct  _GuestfsFillArgs
{
  ProtobufCMessage base;
  int32_t c;
  int32_t len;
  char *path;
};
#define GUESTFS_FILL_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_fill_args__descriptor) \
    , 0, 0, NULL }


struct  _GuestfsAvailableArgs
{
  ProtobufCMessage base;
  size_t n_groups;
  char **groups;
};
#define GUESTFS_AVAILABLE_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_available_args__descriptor) \
    , 0,NULL }


struct  _GuestfsDdArgs
{
  ProtobufCMessage base;
  char *src;
  char *dest;
};
#define GUESTFS_DD_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_dd_args__descriptor) \
    , NULL, NULL }


struct  _GuestfsFilesizeArgs
{
  ProtobufCMessage base;
  char *file;
};
#define GUESTFS_FILESIZE_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_filesize_args__descriptor) \
    , NULL }


struct  _GuestfsFilesizeRet
{
  ProtobufCMessage base;
  int64_t size;
};
#define GUESTFS_FILESIZE_RET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_filesize_ret__descriptor) \
    , 0 }


struct  _GuestfsLvrenameArgs
{
  ProtobufCMessage base;
  char *logvol;
  char *newlogvol;
};
#define GUESTFS_LVRENAME_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_lvrename_args__descriptor) \
    , NULL, NULL }


struct  _GuestfsVgrenameArgs
{
  ProtobufCMessage base;
  char *volgroup;
  char *newvolgroup;
};
#define GUESTFS_VGRENAME_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_vgrename_args__descriptor) \
    , NULL, NULL }


struct  _GuestfsInitrdCatArgs
{
  ProtobufCMessage base;
  char *initrdpath;
  char *filename;
};
#define GUESTFS_INITRD_CAT_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_initrd_cat_args__descriptor) \
    , NULL, NULL }


struct  _GuestfsInitrdCatRet
{
  ProtobufCMessage base;
  ProtobufCBinaryData content;
};
#define GUESTFS_INITRD_CAT_RET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_initrd_cat_ret__descriptor) \
    , {0,NULL} }


struct  _GuestfsPvuuidArgs
{
  ProtobufCMessage base;
  char *device;
};
#define GUESTFS_PVUUID_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_pvuuid_args__descriptor) \
    , NULL }


struct  _GuestfsPvuuidRet
{
  ProtobufCMessage base;
  char *uuid;
};
#define GUESTFS_PVUUID_RET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_pvuuid_ret__descriptor) \
    , NULL }


struct  _GuestfsVguuidArgs
{
  ProtobufCMessage base;
  char *vgname;
};
#define GUESTFS_VGUUID_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_vguuid_args__descriptor) \
    , NULL }


struct  _GuestfsVguuidRet
{
  ProtobufCMessage base;
  char *uuid;
};
#define GUESTFS_VGUUID_RET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_vguuid_ret__descriptor) \
    , NULL }


struct  _GuestfsLvuuidArgs
{
  ProtobufCMessage base;
  char *device;
};
#define GUESTFS_LVUUID_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_lvuuid_args__descriptor) \
    , NULL }


struct  _GuestfsLvuuidRet
{
  ProtobufCMessage base;
  char *uuid;
};
#define GUESTFS_LVUUID_RET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_lvuuid_ret__descriptor) \
    , NULL }


struct  _GuestfsVgpvuuidsArgs
{
  ProtobufCMessage base;
  char *vgname;
};
#define GUESTFS_VGPVUUIDS_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_vgpvuuids_args__descriptor) \
    , NULL }


struct  _GuestfsVgpvuuidsRet
{
  ProtobufCMessage base;
  size_t n_uuids;
  char **uuids;
};
#define GUESTFS_VGPVUUIDS_RET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_vgpvuuids_ret__descriptor) \
    , 0,NULL }


struct  _GuestfsVglvuuidsArgs
{
  ProtobufCMessage base;
  char *vgname;
};
#define GUESTFS_VGLVUUIDS_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_vglvuuids_args__descriptor) \
    , NULL }


struct  _GuestfsVglvuuidsRet
{
  ProtobufCMessage base;
  size_t n_uuids;
  char **uuids;
};
#define GUESTFS_VGLVUUIDS_RET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_vglvuuids_ret__descriptor) \
    , 0,NULL }


struct  _GuestfsCopySizeArgs
{
  ProtobufCMessage base;
  char *src;
  char *dest;
  int64_t size;
};
#define GUESTFS_COPY_SIZE_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_copy_size_args__descriptor) \
    , NULL, NULL, 0 }


struct  _GuestfsZeroDeviceArgs
{
  ProtobufCMessage base;
  char *device;
};
#define GUESTFS_ZERO_DEVICE_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_zero_device_args__descriptor) \
    , NULL }


struct  _GuestfsTxzInArgs
{
  ProtobufCMessage base;
  char *directory;
};
#define GUESTFS_TXZ_IN_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_txz_in_args__descriptor) \
    , NULL }


struct  _GuestfsTxzOutArgs
{
  ProtobufCMessage base;
  char *directory;
};
#define GUESTFS_TXZ_OUT_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_txz_out_args__descriptor) \
    , NULL }


struct  _GuestfsPartDelArgs
{
  ProtobufCMessage base;
  char *device;
  int32_t partnum;
};
#define GUESTFS_PART_DEL_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_part_del_args__descriptor) \
    , NULL, 0 }


struct  _GuestfsPartGetBootableArgs
{
  ProtobufCMessage base;
  char *device;
  int32_t partnum;
};
#define GUESTFS_PART_GET_BOOTABLE_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_part_get_bootable_args__descriptor) \
    , NULL, 0 }


struct  _GuestfsPartGetBootableRet
{
  ProtobufCMessage base;
  protobuf_c_boolean bootable;
};
#define GUESTFS_PART_GET_BOOTABLE_RET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_part_get_bootable_ret__descriptor) \
    , 0 }


struct  _GuestfsPartGetMbrIdArgs
{
  ProtobufCMessage base;
  char *device;
  int32_t partnum;
};
#define GUESTFS_PART_GET_MBR_ID_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_part_get_mbr_id_args__descriptor) \
    , NULL, 0 }


struct  _GuestfsPartGetMbrIdRet
{
  ProtobufCMessage base;
  int32_t idbyte;
};
#define GUESTFS_PART_GET_MBR_ID_RET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_part_get_mbr_id_ret__descriptor) \
    , 0 }


struct  _GuestfsPartSetMbrIdArgs
{
  ProtobufCMessage base;
  char *device;
  int32_t partnum;
  int32_t idbyte;
};
#define GUESTFS_PART_SET_MBR_ID_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_part_set_mbr_id_args__descriptor) \
    , NULL, 0, 0 }


struct  _GuestfsChecksumDeviceArgs
{
  ProtobufCMessage base;
  char *csumtype;
  char *device;
};
#define GUESTFS_CHECKSUM_DEVICE_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_checksum_device_args__descriptor) \
    , NULL, NULL }


struct  _GuestfsChecksumDeviceRet
{
  ProtobufCMessage base;
  char *checksum;
};
#define GUESTFS_CHECKSUM_DEVICE_RET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_checksum_device_ret__descriptor) \
    , NULL }


struct  _GuestfsLvresizeFreeArgs
{
  ProtobufCMessage base;
  char *lv;
  int32_t percent;
};
#define GUESTFS_LVRESIZE_FREE_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_lvresize_free_args__descriptor) \
    , NULL, 0 }


struct  _GuestfsAugClearArgs
{
  ProtobufCMessage base;
  char *augpath;
};
#define GUESTFS_AUG_CLEAR_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_aug_clear_args__descriptor) \
    , NULL }


struct  _GuestfsGetUmaskRet
{
  ProtobufCMessage base;
  int32_t mask;
};
#define GUESTFS_GET_UMASK_RET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_get_umask_ret__descriptor) \
    , 0 }


struct  _GuestfsDebugUploadArgs
{
  ProtobufCMessage base;
  char *tmpname;
  int32_t mode;
};
#define GUESTFS_DEBUG_UPLOAD_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_debug_upload_args__descriptor) \
    , NULL, 0 }


struct  _GuestfsBase64InArgs
{
  ProtobufCMessage base;
  char *filename;
};
#define GUESTFS_BASE64_IN_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_base64_in_args__descriptor) \
    , NULL }


struct  _GuestfsBase64OutArgs
{
  ProtobufCMessage base;
  char *filename;
};
#define GUESTFS_BASE64_OUT_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_base64_out_args__descriptor) \
    , NULL }


struct  _GuestfsChecksumsOutArgs
{
  ProtobufCMessage base;
  char *csumtype;
  char *directory;
};
#define GUESTFS_CHECKSUMS_OUT_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_checksums_out_args__descriptor) \
    , NULL, NULL }


struct  _GuestfsFillPatternArgs
{
  ProtobufCMessage base;
  char *pattern;
  int32_t len;
  char *path;
};
#define GUESTFS_FILL_PATTERN_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_fill_pattern_args__descriptor) \
    , NULL, 0, NULL }


struct  _GuestfsInternalWriteArgs
{
  ProtobufCMessage base;
  char *path;
  ProtobufCBinaryData content;
};
#define GUESTFS_INTERNAL_WRITE_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_internal_write_args__descriptor) \
    , NULL, {0,NULL} }


struct  _GuestfsPwriteArgs
{
  ProtobufCMessage base;
  char *path;
  ProtobufCBinaryData content;
  int64_t offset;
};
#define GUESTFS_PWRITE_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_pwrite_args__descriptor) \
    , NULL, {0,NULL}, 0 }


struct  _GuestfsPwriteRet
{
  ProtobufCMessage base;
  int32_t nbytes;
};
#define GUESTFS_PWRITE_RET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_pwrite_ret__descriptor) \
    , 0 }


struct  _GuestfsResize2fsSizeArgs
{
  ProtobufCMessage base;
  char *device;
  int64_t size;
};
#define GUESTFS_RESIZE2FS_SIZE_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_resize2fs_size_args__descriptor) \
    , NULL, 0 }


struct  _GuestfsPvresizeSizeArgs
{
  ProtobufCMessage base;
  char *device;
  int64_t size;
};
#define GUESTFS_PVRESIZE_SIZE_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_pvresize_size_args__descriptor) \
    , NULL, 0 }


struct  _GuestfsNtfsresizeSizeArgs
{
  ProtobufCMessage base;
  char *device;
  int64_t size;
};
#define GUESTFS_NTFSRESIZE_SIZE_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_ntfsresize_size_args__descriptor) \
    , NULL, 0 }


struct  _GuestfsAvailableAllGroupsRet
{
  ProtobufCMessage base;
  size_t n_groups;
  char **groups;
};
#define GUESTFS_AVAILABLE_ALL_GROUPS_RET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_available_all_groups_ret__descriptor) \
    , 0,NULL }


struct  _GuestfsFallocate64Args
{
  ProtobufCMessage base;
  char *path;
  int64_t len;
};
#define GUESTFS_FALLOCATE64_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_fallocate64_args__descriptor) \
    , NULL, 0 }


struct  _GuestfsVfsLabelArgs
{
  ProtobufCMessage base;
  char *mountable;
};
#define GUESTFS_VFS_LABEL_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_vfs_label_args__descriptor) \
    , NULL }


struct  _GuestfsVfsLabelRet
{
  ProtobufCMessage base;
  char *label;
};
#define GUESTFS_VFS_LABEL_RET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_vfs_label_ret__descriptor) \
    , NULL }


struct  _GuestfsVfsUuidArgs
{
  ProtobufCMessage base;
  char *mountable;
};
#define GUESTFS_VFS_UUID_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_vfs_uuid_args__descriptor) \
    , NULL }


struct  _GuestfsVfsUuidRet
{
  ProtobufCMessage base;
  char *uuid;
};
#define GUESTFS_VFS_UUID_RET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_vfs_uuid_ret__descriptor) \
    , NULL }


struct  _GuestfsLvmSetFilterArgs
{
  ProtobufCMessage base;
  size_t n_devices;
  char **devices;
};
#define GUESTFS_LVM_SET_FILTER_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_lvm_set_filter_args__descriptor) \
    , 0,NULL }


struct  _GuestfsLuksOpenArgs
{
  ProtobufCMessage base;
  char *device;
  char *key;
  char *mapname;
};
#define GUESTFS_LUKS_OPEN_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_luks_open_args__descriptor) \
    , NULL, NULL, NULL }


struct  _GuestfsLuksOpenRoArgs
{
  ProtobufCMessage base;
  char *device;
  char *key;
  char *mapname;
};
#define GUESTFS_LUKS_OPEN_RO_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_luks_open_ro_args__descriptor) \
    , NULL, NULL, NULL }


struct  _GuestfsLuksCloseArgs
{
  ProtobufCMessage base;
  char *device;
};
#define GUESTFS_LUKS_CLOSE_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_luks_close_args__descriptor) \
    , NULL }


struct  _GuestfsLuksFormatArgs
{
  ProtobufCMessage base;
  char *device;
  char *key;
  int32_t keyslot;
};
#define GUESTFS_LUKS_FORMAT_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_luks_format_args__descriptor) \
    , NULL, NULL, 0 }


struct  _GuestfsLuksFormatCipherArgs
{
  ProtobufCMessage base;
  char *device;
  char *key;
  int32_t keyslot;
  char *cipher;
};
#define GUESTFS_LUKS_FORMAT_CIPHER_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_luks_format_cipher_args__descriptor) \
    , NULL, NULL, 0, NULL }


struct  _GuestfsLuksAddKeyArgs
{
  ProtobufCMessage base;
  char *device;
  char *key;
  char *newkey;
  int32_t keyslot;
};
#define GUESTFS_LUKS_ADD_KEY_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_luks_add_key_args__descriptor) \
    , NULL, NULL, NULL, 0 }


struct  _GuestfsLuksKillSlotArgs
{
  ProtobufCMessage base;
  char *device;
  char *key;
  int32_t keyslot;
};
#define GUESTFS_LUKS_KILL_SLOT_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_luks_kill_slot_args__descriptor) \
    , NULL, NULL, 0 }


struct  _GuestfsIsLvArgs
{
  ProtobufCMessage base;
  char *device;
};
#define GUESTFS_IS_LV_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_is_lv_args__descriptor) \
    , NULL }


struct  _GuestfsIsLvRet
{
  ProtobufCMessage base;
  protobuf_c_boolean lvflag;
};
#define GUESTFS_IS_LV_RET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_is_lv_ret__descriptor) \
    , 0 }


struct  _GuestfsFindfsUuidArgs
{
  ProtobufCMessage base;
  char *uuid;
};
#define GUESTFS_FINDFS_UUID_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_findfs_uuid_args__descriptor) \
    , NULL }


struct  _GuestfsFindfsUuidRet
{
  ProtobufCMessage base;
  char *device;
};
#define GUESTFS_FINDFS_UUID_RET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_findfs_uuid_ret__descriptor) \
    , NULL }


struct  _GuestfsFindfsLabelArgs
{
  ProtobufCMessage base;
  char *label;
};
#define GUESTFS_FINDFS_LABEL_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_findfs_label_args__descriptor) \
    , NULL }


struct  _GuestfsFindfsLabelRet
{
  ProtobufCMessage base;
  char *device;
};
#define GUESTFS_FINDFS_LABEL_RET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_findfs_label_ret__descriptor) \
    , NULL }


struct  _GuestfsIsChardevArgs
{
  ProtobufCMessage base;
  char *path;
  protobuf_c_boolean followsymlinks;
};
#define GUESTFS_IS_CHARDEV_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_is_chardev_args__descriptor) \
    , NULL, 0 }


struct  _GuestfsIsChardevRet
{
  ProtobufCMessage base;
  protobuf_c_boolean flag;
};
#define GUESTFS_IS_CHARDEV_RET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_is_chardev_ret__descriptor) \
    , 0 }


struct  _GuestfsIsBlockdevArgs
{
  ProtobufCMessage base;
  char *path;
  protobuf_c_boolean followsymlinks;
};
#define GUESTFS_IS_BLOCKDEV_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_is_blockdev_args__descriptor) \
    , NULL, 0 }


struct  _GuestfsIsBlockdevRet
{
  ProtobufCMessage base;
  protobuf_c_boolean flag;
};
#define GUESTFS_IS_BLOCKDEV_RET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_is_blockdev_ret__descriptor) \
    , 0 }


struct  _GuestfsIsFifoArgs
{
  ProtobufCMessage base;
  char *path;
  protobuf_c_boolean followsymlinks;
};
#define GUESTFS_IS_FIFO_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_is_fifo_args__descriptor) \
    , NULL, 0 }


struct  _GuestfsIsFifoRet
{
  ProtobufCMessage base;
  protobuf_c_boolean flag;
};
#define GUESTFS_IS_FIFO_RET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_is_fifo_ret__descriptor) \
    , 0 }


struct  _GuestfsIsSymlinkArgs
{
  ProtobufCMessage base;
  char *path;
};
#define GUESTFS_IS_SYMLINK_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_is_symlink_args__descriptor) \
    , NULL }


struct  _GuestfsIsSymlinkRet
{
  ProtobufCMessage base;
  protobuf_c_boolean flag;
};
#define GUESTFS_IS_SYMLINK_RET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_is_symlink_ret__descriptor) \
    , 0 }


struct  _GuestfsIsSocketArgs
{
  ProtobufCMessage base;
  char *path;
  protobuf_c_boolean followsymlinks;
};
#define GUESTFS_IS_SOCKET_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_is_socket_args__descriptor) \
    , NULL, 0 }


struct  _GuestfsIsSocketRet
{
  ProtobufCMessage base;
  protobuf_c_boolean flag;
};
#define GUESTFS_IS_SOCKET_RET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_is_socket_ret__descriptor) \
    , 0 }


struct  _GuestfsPartToDevArgs
{
  ProtobufCMessage base;
  char *partition;
};
#define GUESTFS_PART_TO_DEV_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_part_to_dev_args__descriptor) \
    , NULL }


struct  _GuestfsPartToDevRet
{
  ProtobufCMessage base;
  char *device;
};
#define GUESTFS_PART_TO_DEV_RET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_part_to_dev_ret__descriptor) \
    , NULL }


struct  _GuestfsUploadOffsetArgs
{
  ProtobufCMessage base;
  char *remotefilename;
  int64_t offset;
};
#define GUESTFS_UPLOAD_OFFSET_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_upload_offset_args__descriptor) \
    , NULL, 0 }


struct  _GuestfsDownloadOffsetArgs
{
  ProtobufCMessage base;
  char *remotefilename;
  int64_t offset;
  int64_t size;
};
#define GUESTFS_DOWNLOAD_OFFSET_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_download_offset_args__descriptor) \
    , NULL, 0, 0 }


struct  _GuestfsPwriteDeviceArgs
{
  ProtobufCMessage base;
  char *device;
  ProtobufCBinaryData content;
  int64_t offset;
};
#define GUESTFS_PWRITE_DEVICE_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_pwrite_device_args__descriptor) \
    , NULL, {0,NULL}, 0 }


struct  _GuestfsPwriteDeviceRet
{
  ProtobufCMessage base;
  int32_t nbytes;
};
#define GUESTFS_PWRITE_DEVICE_RET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_pwrite_device_ret__descriptor) \
    , 0 }


struct  _GuestfsPreadDeviceArgs
{
  ProtobufCMessage base;
  char *device;
  int32_t count;
  int64_t offset;
};
#define GUESTFS_PREAD_DEVICE_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_pread_device_args__descriptor) \
    , NULL, 0, 0 }


struct  _GuestfsPreadDeviceRet
{
  ProtobufCMessage base;
  ProtobufCBinaryData content;
};
#define GUESTFS_PREAD_DEVICE_RET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_pread_device_ret__descriptor) \
    , {0,NULL} }


struct  _GuestfsLvmCanonicalLvNameArgs
{
  ProtobufCMessage base;
  char *lvname;
};
#define GUESTFS_LVM_CANONICAL_LV_NAME_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_lvm_canonical_lv_name_args__descriptor) \
    , NULL }


struct  _GuestfsLvmCanonicalLvNameRet
{
  ProtobufCMessage base;
  char *lv;
};
#define GUESTFS_LVM_CANONICAL_LV_NAME_RET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_lvm_canonical_lv_name_ret__descriptor) \
    , NULL }


struct  _GuestfsMkfsArgs
{
  ProtobufCMessage base;
  char *fstype;
  char *device;
  int32_t blocksize;
  char *features;
  int32_t inode;
  int32_t sectorsize;
};
#define GUESTFS_MKFS_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_mkfs_args__descriptor) \
    , NULL, NULL, 0, NULL, 0, 0 }


struct  _GuestfsGetxattrArgs
{
  ProtobufCMessage base;
  char *path;
  char *name;
};
#define GUESTFS_GETXATTR_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_getxattr_args__descriptor) \
    , NULL, NULL }


struct  _GuestfsGetxattrRet
{
  ProtobufCMessage base;
  ProtobufCBinaryData xattr;
};
#define GUESTFS_GETXATTR_RET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_getxattr_ret__descriptor) \
    , {0,NULL} }


struct  _GuestfsLgetxattrArgs
{
  ProtobufCMessage base;
  char *path;
  char *name;
};
#define GUESTFS_LGETXATTR_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_lgetxattr_args__descriptor) \
    , NULL, NULL }


struct  _GuestfsLgetxattrRet
{
  ProtobufCMessage base;
  ProtobufCBinaryData xattr;
};
#define GUESTFS_LGETXATTR_RET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_lgetxattr_ret__descriptor) \
    , {0,NULL} }


struct  _GuestfsResize2fsmArgs
{
  ProtobufCMessage base;
  char *device;
};
#define GUESTFS_RESIZE2FSM_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_resize2fsm_args__descriptor) \
    , NULL }


struct  _GuestfsIsZeroArgs
{
  ProtobufCMessage base;
  char *path;
};
#define GUESTFS_IS_ZERO_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_is_zero_args__descriptor) \
    , NULL }


struct  _GuestfsIsZeroRet
{
  ProtobufCMessage base;
  protobuf_c_boolean zeroflag;
};
#define GUESTFS_IS_ZERO_RET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_is_zero_ret__descriptor) \
    , 0 }


struct  _GuestfsIsZeroDeviceArgs
{
  ProtobufCMessage base;
  char *device;
};
#define GUESTFS_IS_ZERO_DEVICE_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_is_zero_device_args__descriptor) \
    , NULL }


struct  _GuestfsIsZeroDeviceRet
{
  ProtobufCMessage base;
  protobuf_c_boolean zeroflag;
};
#define GUESTFS_IS_ZERO_DEVICE_RET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_is_zero_device_ret__descriptor) \
    , 0 }


struct  _GuestfsList9pRet
{
  ProtobufCMessage base;
  size_t n_mounttags;
  char **mounttags;
};
#define GUESTFS_LIST9P_RET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_list9p_ret__descriptor) \
    , 0,NULL }


struct  _GuestfsMount9pArgs
{
  ProtobufCMessage base;
  char *mounttag;
  char *mountpoint;
  char *options;
};
#define GUESTFS_MOUNT9P_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_mount9p_args__descriptor) \
    , NULL, NULL, NULL }


struct  _GuestfsListDmDevicesRet
{
  ProtobufCMessage base;
  size_t n_devices;
  char **devices;
};
#define GUESTFS_LIST_DM_DEVICES_RET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_list_dm_devices_ret__descriptor) \
    , 0,NULL }


struct  _GuestfsNTFSResizeArgs
{
  ProtobufCMessage base;
  char *device;
  int64_t size;
  protobuf_c_boolean force;
};
#define GUESTFS_NTFSRESIZE_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_ntfsresize_args__descriptor) \
    , NULL, 0, 0 }


struct  _GuestfsBtrfsFilesystemResizeArgs
{
  ProtobufCMessage base;
  char *mountpoint;
  int64_t size;
};
#define GUESTFS_BTRFS_FILESYSTEM_RESIZE_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_btrfs_filesystem_resize_args__descriptor) \
    , NULL, 0 }


struct  _GuestfsInternalWriteAppendArgs
{
  ProtobufCMessage base;
  char *path;
  ProtobufCBinaryData content;
};
#define GUESTFS_INTERNAL_WRITE_APPEND_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_internal_write_append_args__descriptor) \
    , NULL, {0,NULL} }


struct  _GuestfsCompressOutArgs
{
  ProtobufCMessage base;
  char *ctype;
  char *file;
  int32_t level;
};
#define GUESTFS_COMPRESS_OUT_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_compress_out_args__descriptor) \
    , NULL, NULL, 0 }


struct  _GuestfsCompressDeviceOutArgs
{
  ProtobufCMessage base;
  char *ctype;
  char *device;
  int32_t level;
};
#define GUESTFS_COMPRESS_DEVICE_OUT_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_compress_device_out_args__descriptor) \
    , NULL, NULL, 0 }


struct  _GuestfsPartToPartnumArgs
{
  ProtobufCMessage base;
  char *partition;
};
#define GUESTFS_PART_TO_PARTNUM_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_part_to_partnum_args__descriptor) \
    , NULL }


struct  _GuestfsPartToPartnumRet
{
  ProtobufCMessage base;
  int32_t partnum;
};
#define GUESTFS_PART_TO_PARTNUM_RET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_part_to_partnum_ret__descriptor) \
    , 0 }


struct  _GuestfsCopyDeviceToDeviceArgs
{
  ProtobufCMessage base;
  char *src;
  char *dest;
  int64_t srcoffset;
  int64_t destoffset;
  int64_t size;
  protobuf_c_boolean sparse;
};
#define GUESTFS_COPY_DEVICE_TO_DEVICE_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_copy_device_to_device_args__descriptor) \
    , NULL, NULL, 0, 0, 0, 0 }


struct  _GuestfsCopyDeviceToFileArgs
{
  ProtobufCMessage base;
  char *src;
  char *dest;
  int64_t srcoffset;
  int64_t destoffset;
  int64_t size;
  protobuf_c_boolean sparse;
};
#define GUESTFS_COPY_DEVICE_TO_FILE_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_copy_device_to_file_args__descriptor) \
    , NULL, NULL, 0, 0, 0, 0 }


struct  _GuestfsCopyFileToDeviceArgs
{
  ProtobufCMessage base;
  char *src;
  char *dest;
  int64_t srcoffset;
  int64_t destoffset;
  int64_t size;
  protobuf_c_boolean sparse;
};
#define GUESTFS_COPY_FILE_TO_DEVICE_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_copy_file_to_device_args__descriptor) \
    , NULL, NULL, 0, 0, 0, 0 }


struct  _GuestfsCopyFileToFileArgs
{
  ProtobufCMessage base;
  char *src;
  char *dest;
  int64_t srcoffset;
  int64_t destoffset;
  int64_t size;
  protobuf_c_boolean sparse;
};
#define GUESTFS_COPY_FILE_TO_FILE_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_copy_file_to_file_args__descriptor) \
    , NULL, NULL, 0, 0, 0, 0 }


struct  _GuestfsTune2fsArgs
{
  ProtobufCMessage base;
  char *device;
  protobuf_c_boolean force;
  int32_t maxmountcount;
  int32_t mountcount;
  char *errorbehavior;
  int64_t group;
  int32_t intervalbetweenchecks;
  int32_t reservedblockspercentage;
  char *lastmounteddirectory;
  int64_t reservedblockscount;
  int64_t user;
};
#define GUESTFS_TUNE2FS_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_tune2fs_args__descriptor) \
    , NULL, 0, 0, 0, NULL, 0, 0, 0, NULL, 0, 0 }


struct  _GuestfsMdCreateArgs
{
  ProtobufCMessage base;
  char *name;
  size_t n_devices;
  char **devices;
  int64_t missingbitmap;
  int32_t nrdevices;
  int32_t spare;
  int64_t chunk;
  char *level;
};
#define GUESTFS_MD_CREATE_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_md_create_args__descriptor) \
    , NULL, 0,NULL, 0, 0, 0, 0, NULL }


struct  _GuestfsListMdDevicesRet
{
  ProtobufCMessage base;
  size_t n_devices;
  char **devices;
};
#define GUESTFS_LIST_MD_DEVICES_RET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_list_md_devices_ret__descriptor) \
    , 0,NULL }


struct  _GuestfsMdDetailArgs
{
  ProtobufCMessage base;
  char *md;
};
#define GUESTFS_MD_DETAIL_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_md_detail_args__descriptor) \
    , NULL }


struct  _GuestfsMdDetailRet
{
  ProtobufCMessage base;
  size_t n_info;
  char **info;
};
#define GUESTFS_MD_DETAIL_RET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_md_detail_ret__descriptor) \
    , 0,NULL }


struct  _GuestfsMdStopArgs
{
  ProtobufCMessage base;
  char *md;
};
#define GUESTFS_MD_STOP_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_md_stop_args__descriptor) \
    , NULL }


struct  _GuestfsBlkidArgs
{
  ProtobufCMessage base;
  char *device;
};
#define GUESTFS_BLKID_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_blkid_args__descriptor) \
    , NULL }


struct  _GuestfsBlkidRet
{
  ProtobufCMessage base;
  size_t n_info;
  char **info;
};
#define GUESTFS_BLKID_RET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_blkid_ret__descriptor) \
    , 0,NULL }


struct  _GuestfsE2fsckArgs
{
  ProtobufCMessage base;
  char *device;
  protobuf_c_boolean correct;
  protobuf_c_boolean forceall;
};
#define GUESTFS_E2FSCK_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_e2fsck_args__descriptor) \
    , NULL, 0, 0 }


struct  _GuestfsLlzArgs
{
  ProtobufCMessage base;
  char *directory;
};
#define GUESTFS_LLZ_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_llz_args__descriptor) \
    , NULL }


struct  _GuestfsLlzRet
{
  ProtobufCMessage base;
  char *listing;
};
#define GUESTFS_LLZ_RET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_llz_ret__descriptor) \
    , NULL }


struct  _GuestfsWipefsArgs
{
  ProtobufCMessage base;
  char *device;
};
#define GUESTFS_WIPEFS_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_wipefs_args__descriptor) \
    , NULL }


struct  _GuestfsNtfsfixArgs
{
  ProtobufCMessage base;
  char *device;
  protobuf_c_boolean clearbadsectors;
};
#define GUESTFS_NTFSFIX_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_ntfsfix_args__descriptor) \
    , NULL, 0 }


struct  _GuestfsNtfscloneOutArgs
{
  ProtobufCMessage base;
  char *device;
  protobuf_c_boolean metadataonly;
  protobuf_c_boolean rescue;
  protobuf_c_boolean ignorefscheck;
  protobuf_c_boolean preservetimestamps;
  protobuf_c_boolean force;
};
#define GUESTFS_NTFSCLONE_OUT_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_ntfsclone_out_args__descriptor) \
    , NULL, 0, 0, 0, 0, 0 }


struct  _GuestfsNtfscloneInArgs
{
  ProtobufCMessage base;
  char *device;
};
#define GUESTFS_NTFSCLONE_IN_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_ntfsclone_in_args__descriptor) \
    , NULL }


struct  _GuestfsSetLabelArgs
{
  ProtobufCMessage base;
  char *mountable;
  char *label;
};
#define GUESTFS_SET_LABEL_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_set_label_args__descriptor) \
    , NULL, NULL }


struct  _GuestfsZeroFreeSpaceArgs
{
  ProtobufCMessage base;
  char *directory;
};
#define GUESTFS_ZERO_FREE_SPACE_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_zero_free_space_args__descriptor) \
    , NULL }


struct  _GuestfsLvcreateFreeArgs
{
  ProtobufCMessage base;
  char *logvol;
  char *volgroup;
  int32_t percent;
};
#define GUESTFS_LVCREATE_FREE_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_lvcreate_free_args__descriptor) \
    , NULL, NULL, 0 }


struct  _GuestfsIsoinfoDeviceArgs
{
  ProtobufCMessage base;
  char *device;
};
#define GUESTFS_ISOINFO_DEVICE_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_isoinfo_device_args__descriptor) \
    , NULL }


struct  _GuestfsIsoinfoDeviceRet
{
  ProtobufCMessage base;
  GuestfsIntISOInfo *isodata;
};
#define GUESTFS_ISOINFO_DEVICE_RET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_isoinfo_device_ret__descriptor) \
    , NULL }


struct  _GuestfsIsoinfoArgs
{
  ProtobufCMessage base;
  char *isofile;
};
#define GUESTFS_ISOINFO_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_isoinfo_args__descriptor) \
    , NULL }


struct  _GuestfsIsoinfoRet
{
  ProtobufCMessage base;
  GuestfsIntISOInfo *isodata;
};
#define GUESTFS_ISOINFO_RET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_isoinfo_ret__descriptor) \
    , NULL }


struct  _GuestfsVgmetaArgs
{
  ProtobufCMessage base;
  char *vgname;
};
#define GUESTFS_VGMETA_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_vgmeta_args__descriptor) \
    , NULL }


struct  _GuestfsVgmetaRet
{
  ProtobufCMessage base;
  ProtobufCBinaryData metadata;
};
#define GUESTFS_VGMETA_RET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_vgmeta_ret__descriptor) \
    , {0,NULL} }


struct  _GuestfsMdStatArgs
{
  ProtobufCMessage base;
  char *md;
};
#define GUESTFS_MD_STAT_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_md_stat_args__descriptor) \
    , NULL }


struct  _GuestfsMdStatRet
{
  ProtobufCMessage base;
  GuestfsIntMDStatList *devices;
};
#define GUESTFS_MD_STAT_RET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_md_stat_ret__descriptor) \
    , NULL }


struct  _GuestfsMkfsBtrfsArgs
{
  ProtobufCMessage base;
  size_t n_devices;
  char **devices;
  int64_t allocstart;
  int64_t bytecount;
  char *datatype;
  int32_t leafsize;
  char *label;
  char *metadata;
  int32_t nodesize;
  int32_t sectorsize;
};
#define GUESTFS_MKFS_BTRFS_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_mkfs_btrfs_args__descriptor) \
    , 0,NULL, 0, 0, NULL, 0, NULL, NULL, 0, 0 }


struct  _GuestfsGetE2attrsArgs
{
  ProtobufCMessage base;
  char *file;
};
#define GUESTFS_GET_E2ATTRS_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_get_e2attrs_args__descriptor) \
    , NULL }


struct  _GuestfsGetE2attrsRet
{
  ProtobufCMessage base;
  char *attrs;
};
#define GUESTFS_GET_E2ATTRS_RET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_get_e2attrs_ret__descriptor) \
    , NULL }


struct  _GuestfsSetE2attrsArgs
{
  ProtobufCMessage base;
  char *file;
  char *attrs;
  protobuf_c_boolean clear;
};
#define GUESTFS_SET_E2ATTRS_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_set_e2attrs_args__descriptor) \
    , NULL, NULL, 0 }


struct  _GuestfsGetE2generationArgs
{
  ProtobufCMessage base;
  char *file;
};
#define GUESTFS_GET_E2GENERATION_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_get_e2generation_args__descriptor) \
    , NULL }


struct  _GuestfsGetE2generationRet
{
  ProtobufCMessage base;
  int64_t generation;
};
#define GUESTFS_GET_E2GENERATION_RET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_get_e2generation_ret__descriptor) \
    , 0 }


struct  _GuestfsSetE2generationArgs
{
  ProtobufCMessage base;
  char *file;
  int64_t generation;
};
#define GUESTFS_SET_E2GENERATION_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_set_e2generation_args__descriptor) \
    , NULL, 0 }


struct  _GuestfsBtrfsSubvolumeSnapshotArgs
{
  ProtobufCMessage base;
  char *source;
  char *dest;
};
#define GUESTFS_BTRFS_SUBVOLUME_SNAPSHOT_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_btrfs_subvolume_snapshot_args__descriptor) \
    , NULL, NULL }


struct  _GuestfsBtrfsSubvolumeDeleteArgs
{
  ProtobufCMessage base;
  char *subvolume;
};
#define GUESTFS_BTRFS_SUBVOLUME_DELETE_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_btrfs_subvolume_delete_args__descriptor) \
    , NULL }


struct  _GuestfsBtrfsSubvolumeCreateArgs
{
  ProtobufCMessage base;
  char *dest;
};
#define GUESTFS_BTRFS_SUBVOLUME_CREATE_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_btrfs_subvolume_create_args__descriptor) \
    , NULL }


struct  _GuestfsBtrfsSubvolumeListArgs
{
  ProtobufCMessage base;
  char *fs;
};
#define GUESTFS_BTRFS_SUBVOLUME_LIST_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_btrfs_subvolume_list_args__descriptor) \
    , NULL }


struct  _GuestfsBtrfsSubvolumeListRet
{
  ProtobufCMessage base;
  GuestfsIntBTRFSSubvolumeList *subvolumes;
};
#define GUESTFS_BTRFS_SUBVOLUME_LIST_RET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_btrfs_subvolume_list_ret__descriptor) \
    , NULL }


struct  _GuestfsBtrfsSubvolumeSetDefaultArgs
{
  ProtobufCMessage base;
  int64_t id;
  char *fs;
};
#define GUESTFS_BTRFS_SUBVOLUME_SET_DEFAULT_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_btrfs_subvolume_set_default_args__descriptor) \
    , 0, NULL }


struct  _GuestfsBtrfsFilesystemSyncArgs
{
  ProtobufCMessage base;
  char *fs;
};
#define GUESTFS_BTRFS_FILESYSTEM_SYNC_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_btrfs_filesystem_sync_args__descriptor) \
    , NULL }


struct  _GuestfsBtrfsFilesystemBalanceArgs
{
  ProtobufCMessage base;
  char *fs;
};
#define GUESTFS_BTRFS_FILESYSTEM_BALANCE_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_btrfs_filesystem_balance_args__descriptor) \
    , NULL }


struct  _GuestfsBtrfsDeviceAddArgs
{
  ProtobufCMessage base;
  size_t n_devices;
  char **devices;
  char *fs;
};
#define GUESTFS_BTRFS_DEVICE_ADD_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_btrfs_device_add_args__descriptor) \
    , 0,NULL, NULL }


struct  _GuestfsBtrfsDeviceDeleteArgs
{
  ProtobufCMessage base;
  size_t n_devices;
  char **devices;
  char *fs;
};
#define GUESTFS_BTRFS_DEVICE_DELETE_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_btrfs_device_delete_args__descriptor) \
    , 0,NULL, NULL }


struct  _GuestfsBtrfsSetSeedingArgs
{
  ProtobufCMessage base;
  char *device;
  protobuf_c_boolean seeding;
};
#define GUESTFS_BTRFS_SET_SEEDING_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_btrfs_set_seeding_args__descriptor) \
    , NULL, 0 }


struct  _GuestfsBtrfsFsckArgs
{
  ProtobufCMessage base;
  char *device;
  int64_t superblock;
  protobuf_c_boolean repair;
};
#define GUESTFS_BTRFS_FSCK_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_btrfs_fsck_args__descriptor) \
    , NULL, 0, 0 }


struct  _GuestfsFilesystemAvailableArgs
{
  ProtobufCMessage base;
  char *filesystem;
};
#define GUESTFS_FILESYSTEM_AVAILABLE_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_filesystem_available_args__descriptor) \
    , NULL }


struct  _GuestfsFilesystemAvailableRet
{
  ProtobufCMessage base;
  protobuf_c_boolean fsavail;
};
#define GUESTFS_FILESYSTEM_AVAILABLE_RET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_filesystem_available_ret__descriptor) \
    , 0 }


struct  _GuestfsFstrimArgs
{
  ProtobufCMessage base;
  char *mountpoint;
  int64_t offset;
  int64_t length;
  int64_t minimumfreeextent;
};
#define GUESTFS_FSTRIM_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_fstrim_args__descriptor) \
    , NULL, 0, 0, 0 }


struct  _GuestfsDeviceIndexArgs
{
  ProtobufCMessage base;
  char *device;
};
#define GUESTFS_DEVICE_INDEX_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_device_index_args__descriptor) \
    , NULL }


struct  _GuestfsDeviceIndexRet
{
  ProtobufCMessage base;
  int32_t index;
};
#define GUESTFS_DEVICE_INDEX_RET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_device_index_ret__descriptor) \
    , 0 }


struct  _GuestfsNrDevicesRet
{
  ProtobufCMessage base;
  int32_t nrdisks;
};
#define GUESTFS_NR_DEVICES_RET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_nr_devices_ret__descriptor) \
    , 0 }


struct  _GuestfsXfsInfoArgs
{
  ProtobufCMessage base;
  char *pathordevice;
};
#define GUESTFS_XFS_INFO_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_xfs_info_args__descriptor) \
    , NULL }


struct  _GuestfsXfsInfoRet
{
  ProtobufCMessage base;
  GuestfsIntXFSInfo *info;
};
#define GUESTFS_XFS_INFO_RET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_xfs_info_ret__descriptor) \
    , NULL }


struct  _GuestfsPvchangeUuidArgs
{
  ProtobufCMessage base;
  char *device;
};
#define GUESTFS_PVCHANGE_UUID_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_pvchange_uuid_args__descriptor) \
    , NULL }


struct  _GuestfsVgchangeUuidArgs
{
  ProtobufCMessage base;
  char *vg;
};
#define GUESTFS_VGCHANGE_UUID_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_vgchange_uuid_args__descriptor) \
    , NULL }


struct  _GuestfsUtsnameRet
{
  ProtobufCMessage base;
  GuestfsIntUTSName *uts;
};
#define GUESTFS_UTSNAME_RET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_utsname_ret__descriptor) \
    , NULL }


struct  _GuestfsXfsGrowfsArgs
{
  ProtobufCMessage base;
  char *path;
  protobuf_c_boolean datasec;
  protobuf_c_boolean logsec;
  protobuf_c_boolean rtsec;
  int64_t datasize;
  int64_t logsize;
  int64_t rtsize;
  int64_t rtextsize;
  int32_t maxpct;
};
#define GUESTFS_XFS_GROWFS_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_xfs_growfs_args__descriptor) \
    , NULL, 0, 0, 0, 0, 0, 0, 0, 0 }


struct  _GuestfsRsyncArgs
{
  ProtobufCMessage base;
  char *src;
  char *dest;
  protobuf_c_boolean archive;
  protobuf_c_boolean deletedest;
};
#define GUESTFS_RSYNC_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_rsync_args__descriptor) \
    , NULL, NULL, 0, 0 }


struct  _GuestfsRsyncInArgs
{
  ProtobufCMessage base;
  char *remote;
  char *dest;
  protobuf_c_boolean archive;
  protobuf_c_boolean deletedest;
};
#define GUESTFS_RSYNC_IN_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_rsync_in_args__descriptor) \
    , NULL, NULL, 0, 0 }


struct  _GuestfsRsyncOutArgs
{
  ProtobufCMessage base;
  char *src;
  char *remote;
  protobuf_c_boolean archive;
  protobuf_c_boolean deletedest;
};
#define GUESTFS_RSYNC_OUT_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_rsync_out_args__descriptor) \
    , NULL, NULL, 0, 0 }


struct  _GuestfsLs0Args
{
  ProtobufCMessage base;
  char *dir;
};
#define GUESTFS_LS0_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_ls0_args__descriptor) \
    , NULL }


struct  _GuestfsFillDirArgs
{
  ProtobufCMessage base;
  char *dir;
  int32_t nr;
};
#define GUESTFS_FILL_DIR_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_fill_dir_args__descriptor) \
    , NULL, 0 }


struct  _GuestfsXfsAdminArgs
{
  ProtobufCMessage base;
  char *device;
  protobuf_c_boolean extunwritten;
  protobuf_c_boolean imgfile;
  protobuf_c_boolean v2log;
  protobuf_c_boolean projid32bit;
  protobuf_c_boolean lazycounter;
  char *label;
  char *uuid;
};
#define GUESTFS_XFS_ADMIN_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_xfs_admin_args__descriptor) \
    , NULL, 0, 0, 0, 0, 0, NULL, NULL }


struct  _GuestfsHivexOpenArgs
{
  ProtobufCMessage base;
  char *filename;
  protobuf_c_boolean verbose;
  protobuf_c_boolean debug;
  protobuf_c_boolean write;
};
#define GUESTFS_HIVEX_OPEN_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_hivex_open_args__descriptor) \
    , NULL, 0, 0, 0 }


struct  _GuestfsHivexRootRet
{
  ProtobufCMessage base;
  int64_t nodeh;
};
#define GUESTFS_HIVEX_ROOT_RET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_hivex_root_ret__descriptor) \
    , 0 }


struct  _GuestfsHivexNodeNameArgs
{
  ProtobufCMessage base;
  int64_t nodeh;
};
#define GUESTFS_HIVEX_NODE_NAME_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_hivex_node_name_args__descriptor) \
    , 0 }


struct  _GuestfsHivexNodeNameRet
{
  ProtobufCMessage base;
  char *name;
};
#define GUESTFS_HIVEX_NODE_NAME_RET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_hivex_node_name_ret__descriptor) \
    , NULL }


struct  _GuestfsHivexNodeChildrenArgs
{
  ProtobufCMessage base;
  int64_t nodeh;
};
#define GUESTFS_HIVEX_NODE_CHILDREN_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_hivex_node_children_args__descriptor) \
    , 0 }


struct  _GuestfsHivexNodeChildrenRet
{
  ProtobufCMessage base;
  GuestfsIntHivexNodeList *nodehs;
};
#define GUESTFS_HIVEX_NODE_CHILDREN_RET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_hivex_node_children_ret__descriptor) \
    , NULL }


struct  _GuestfsHivexNodeGetChildArgs
{
  ProtobufCMessage base;
  int64_t nodeh;
  char *name;
};
#define GUESTFS_HIVEX_NODE_GET_CHILD_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_hivex_node_get_child_args__descriptor) \
    , 0, NULL }


struct  _GuestfsHivexNodeGetChildRet
{
  ProtobufCMessage base;
  int64_t child;
};
#define GUESTFS_HIVEX_NODE_GET_CHILD_RET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_hivex_node_get_child_ret__descriptor) \
    , 0 }


struct  _GuestfsHivexNodeParentArgs
{
  ProtobufCMessage base;
  int64_t nodeh;
};
#define GUESTFS_HIVEX_NODE_PARENT_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_hivex_node_parent_args__descriptor) \
    , 0 }


struct  _GuestfsHivexNodeParentRet
{
  ProtobufCMessage base;
  int64_t parent;
};
#define GUESTFS_HIVEX_NODE_PARENT_RET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_hivex_node_parent_ret__descriptor) \
    , 0 }


struct  _GuestfsHivexNodeValuesArgs
{
  ProtobufCMessage base;
  int64_t nodeh;
};
#define GUESTFS_HIVEX_NODE_VALUES_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_hivex_node_values_args__descriptor) \
    , 0 }


struct  _GuestfsHivexNodeValuesRet
{
  ProtobufCMessage base;
  GuestfsIntHivexValueList *valuehs;
};
#define GUESTFS_HIVEX_NODE_VALUES_RET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_hivex_node_values_ret__descriptor) \
    , NULL }


struct  _GuestfsHivexNodeGetValueArgs
{
  ProtobufCMessage base;
  int64_t nodeh;
  char *key;
};
#define GUESTFS_HIVEX_NODE_GET_VALUE_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_hivex_node_get_value_args__descriptor) \
    , 0, NULL }


struct  _GuestfsHivexNodeGetValueRet
{
  ProtobufCMessage base;
  int64_t valueh;
};
#define GUESTFS_HIVEX_NODE_GET_VALUE_RET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_hivex_node_get_value_ret__descriptor) \
    , 0 }


struct  _GuestfsHivexValueKeyArgs
{
  ProtobufCMessage base;
  int64_t valueh;
};
#define GUESTFS_HIVEX_VALUE_KEY_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_hivex_value_key_args__descriptor) \
    , 0 }


struct  _GuestfsHivexValueKeyRet
{
  ProtobufCMessage base;
  char *key;
};
#define GUESTFS_HIVEX_VALUE_KEY_RET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_hivex_value_key_ret__descriptor) \
    , NULL }


struct  _GuestfsHivexValueTypeArgs
{
  ProtobufCMessage base;
  int64_t valueh;
};
#define GUESTFS_HIVEX_VALUE_TYPE_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_hivex_value_type_args__descriptor) \
    , 0 }


struct  _GuestfsHivexValueTypeRet
{
  ProtobufCMessage base;
  int64_t datatype;
};
#define GUESTFS_HIVEX_VALUE_TYPE_RET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_hivex_value_type_ret__descriptor) \
    , 0 }


struct  _GuestfsHivexValueValueArgs
{
  ProtobufCMessage base;
  int64_t valueh;
};
#define GUESTFS_HIVEX_VALUE_VALUE_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_hivex_value_value_args__descriptor) \
    , 0 }


struct  _GuestfsHivexValueValueRet
{
  ProtobufCMessage base;
  ProtobufCBinaryData databuf;
};
#define GUESTFS_HIVEX_VALUE_VALUE_RET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_hivex_value_value_ret__descriptor) \
    , {0,NULL} }


struct  _GuestfsHivexCommitArgs
{
  ProtobufCMessage base;
  char *filename;
};
#define GUESTFS_HIVEX_COMMIT_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_hivex_commit_args__descriptor) \
    , NULL }


struct  _GuestfsHivexNodeAddChildArgs
{
  ProtobufCMessage base;
  int64_t parent;
  char *name;
};
#define GUESTFS_HIVEX_NODE_ADD_CHILD_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_hivex_node_add_child_args__descriptor) \
    , 0, NULL }


struct  _GuestfsHivexNodeAddChildRet
{
  ProtobufCMessage base;
  int64_t nodeh;
};
#define GUESTFS_HIVEX_NODE_ADD_CHILD_RET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_hivex_node_add_child_ret__descriptor) \
    , 0 }


struct  _GuestfsHivexNodeDeleteChildArgs
{
  ProtobufCMessage base;
  int64_t nodeh;
};
#define GUESTFS_HIVEX_NODE_DELETE_CHILD_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_hivex_node_delete_child_args__descriptor) \
    , 0 }


struct  _GuestfsHivexNodeSetValueArgs
{
  ProtobufCMessage base;
  int64_t nodeh;
  char *key;
  int64_t t;
  ProtobufCBinaryData val;
};
#define GUESTFS_HIVEX_NODE_SET_VALUE_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_hivex_node_set_value_args__descriptor) \
    , 0, NULL, 0, {0,NULL} }


struct  _GuestfsXfsRepairArgs
{
  ProtobufCMessage base;
  char *device;
  protobuf_c_boolean forcelogzero;
  protobuf_c_boolean nomodify;
  protobuf_c_boolean noprefetch;
  protobuf_c_boolean forcegeometry;
  int64_t maxmem;
  int64_t ihashsize;
  int64_t bhashsize;
  int64_t agstride;
  char *logdev;
  char *rtdev;
};
#define GUESTFS_XFS_REPAIR_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_xfs_repair_args__descriptor) \
    , NULL, 0, 0, 0, 0, 0, 0, 0, 0, NULL, NULL }


struct  _GuestfsXfsRepairRet
{
  ProtobufCMessage base;
  int32_t status;
};
#define GUESTFS_XFS_REPAIR_RET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_xfs_repair_ret__descriptor) \
    , 0 }


struct  _GuestfsRmFfArgs
{
  ProtobufCMessage base;
  char *path;
};
#define GUESTFS_RM_FF_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_rm_ff_args__descriptor) \
    , NULL }


struct  _GuestfsMke2fsArgs
{
  ProtobufCMessage base;
  char *device;
  int64_t blockscount;
  int64_t blocksize;
  int64_t fragsize;
  int64_t blockspergroup;
  int64_t numberofgroups;
  int64_t bytesperinode;
  int64_t inodesize;
  int64_t journalsize;
  int64_t numberofinodes;
  int64_t stridesize;
  int64_t stripewidth;
  int64_t maxonlineresize;
  int32_t reservedblockspercentage;
  int32_t mmpupdateinterval;
  char *journaldevice;
  char *label;
  char *lastmounteddir;
  char *creatoros;
  char *fstype;
  char *usagetype;
  char *uuid;
  protobuf_c_boolean forcecreate;
  protobuf_c_boolean writesbandgrouponly;
  protobuf_c_boolean lazyitableinit;
  protobuf_c_boolean lazyjournalinit;
  protobuf_c_boolean testfs;
  protobuf_c_boolean discard;
  protobuf_c_boolean quotatype;
  protobuf_c_boolean extent;
  protobuf_c_boolean filetype;
  protobuf_c_boolean flexbg;
  protobuf_c_boolean hasjournal;
  protobuf_c_boolean journaldev;
  protobuf_c_boolean largefile;
  protobuf_c_boolean quota;
  protobuf_c_boolean resizeinode;
  protobuf_c_boolean sparsesuper;
  protobuf_c_boolean uninitbg;
};
#define GUESTFS_MKE2FS_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_mke2fs_args__descriptor) \
    , NULL, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }


struct  _GuestfsListDiskLabelsRet
{
  ProtobufCMessage base;
  size_t n_labels;
  char **labels;
};
#define GUESTFS_LIST_DISK_LABELS_RET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_list_disk_labels_ret__descriptor) \
    , 0,NULL }


struct  _GuestfsInternalHotAddDriveArgs
{
  ProtobufCMessage base;
  char *label;
};
#define GUESTFS_INTERNAL_HOT_ADD_DRIVE_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_internal_hot_add_drive_args__descriptor) \
    , NULL }


struct  _GuestfsInternalHotRemoveDrivePrecheckArgs
{
  ProtobufCMessage base;
  char *label;
};
#define GUESTFS_INTERNAL_HOT_REMOVE_DRIVE_PRECHECK_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_internal_hot_remove_drive_precheck_args__descriptor) \
    , NULL }


struct  _GuestfsInternalHotRemoveDriveArgs
{
  ProtobufCMessage base;
  char *label;
};
#define GUESTFS_INTERNAL_HOT_REMOVE_DRIVE_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_internal_hot_remove_drive_args__descriptor) \
    , NULL }


struct  _GuestfsMktempArgs
{
  ProtobufCMessage base;
  char *tmpl;
  char *suffix;
};
#define GUESTFS_MKTEMP_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_mktemp_args__descriptor) \
    , NULL, NULL }


struct  _GuestfsMktempRet
{
  ProtobufCMessage base;
  char *path;
};
#define GUESTFS_MKTEMP_RET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_mktemp_ret__descriptor) \
    , NULL }


struct  _GuestfsMklostAndFoundArgs
{
  ProtobufCMessage base;
  char *mountpoint;
};
#define GUESTFS_MKLOST_AND_FOUND_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_mklost_and_found_args__descriptor) \
    , NULL }


struct  _GuestfsAclGetFileArgs
{
  ProtobufCMessage base;
  char *path;
  char *acltype;
};
#define GUESTFS_ACL_GET_FILE_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_acl_get_file_args__descriptor) \
    , NULL, NULL }


struct  _GuestfsAclGetFileRet
{
  ProtobufCMessage base;
  char *acl;
};
#define GUESTFS_ACL_GET_FILE_RET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_acl_get_file_ret__descriptor) \
    , NULL }


struct  _GuestfsAclSetFileArgs
{
  ProtobufCMessage base;
  char *path;
  char *acltype;
  char *acl;
};
#define GUESTFS_ACL_SET_FILE_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_acl_set_file_args__descriptor) \
    , NULL, NULL, NULL }


struct  _GuestfsAclDeleteDefFileArgs
{
  ProtobufCMessage base;
  char *dir;
};
#define GUESTFS_ACL_DELETE_DEF_FILE_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_acl_delete_def_file_args__descriptor) \
    , NULL }


struct  _GuestfsCapGetFileArgs
{
  ProtobufCMessage base;
  char *path;
};
#define GUESTFS_CAP_GET_FILE_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_cap_get_file_args__descriptor) \
    , NULL }


struct  _GuestfsCapGetFileRet
{
  ProtobufCMessage base;
  char *cap;
};
#define GUESTFS_CAP_GET_FILE_RET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_cap_get_file_ret__descriptor) \
    , NULL }


struct  _GuestfsCapSetFileArgs
{
  ProtobufCMessage base;
  char *path;
  char *cap;
};
#define GUESTFS_CAP_SET_FILE_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_cap_set_file_args__descriptor) \
    , NULL, NULL }


struct  _GuestfsListLdmVolumesRet
{
  ProtobufCMessage base;
  size_t n_devices;
  char **devices;
};
#define GUESTFS_LIST_LDM_VOLUMES_RET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_list_ldm_volumes_ret__descriptor) \
    , 0,NULL }


struct  _GuestfsListLdmPartitionsRet
{
  ProtobufCMessage base;
  size_t n_devices;
  char **devices;
};
#define GUESTFS_LIST_LDM_PARTITIONS_RET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_list_ldm_partitions_ret__descriptor) \
    , 0,NULL }


struct  _GuestfsLdmtoolScanRet
{
  ProtobufCMessage base;
  size_t n_guids;
  char **guids;
};
#define GUESTFS_LDMTOOL_SCAN_RET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_ldmtool_scan_ret__descriptor) \
    , 0,NULL }


struct  _GuestfsLdmtoolScanDevicesArgs
{
  ProtobufCMessage base;
  size_t n_devices;
  char **devices;
};
#define GUESTFS_LDMTOOL_SCAN_DEVICES_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_ldmtool_scan_devices_args__descriptor) \
    , 0,NULL }


struct  _GuestfsLdmtoolScanDevicesRet
{
  ProtobufCMessage base;
  size_t n_guids;
  char **guids;
};
#define GUESTFS_LDMTOOL_SCAN_DEVICES_RET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_ldmtool_scan_devices_ret__descriptor) \
    , 0,NULL }


struct  _GuestfsLdmtoolDiskgroupNameArgs
{
  ProtobufCMessage base;
  char *diskgroup;
};
#define GUESTFS_LDMTOOL_DISKGROUP_NAME_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_ldmtool_diskgroup_name_args__descriptor) \
    , NULL }


struct  _GuestfsLdmtoolDiskgroupNameRet
{
  ProtobufCMessage base;
  char *name;
};
#define GUESTFS_LDMTOOL_DISKGROUP_NAME_RET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_ldmtool_diskgroup_name_ret__descriptor) \
    , NULL }


struct  _GuestfsLdmtoolDiskgroupVolumesArgs
{
  ProtobufCMessage base;
  char *diskgroup;
};
#define GUESTFS_LDMTOOL_DISKGROUP_VOLUMES_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_ldmtool_diskgroup_volumes_args__descriptor) \
    , NULL }


struct  _GuestfsLdmtoolDiskgroupVolumesRet
{
  ProtobufCMessage base;
  size_t n_volumes;
  char **volumes;
};
#define GUESTFS_LDMTOOL_DISKGROUP_VOLUMES_RET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_ldmtool_diskgroup_volumes_ret__descriptor) \
    , 0,NULL }


struct  _GuestfsLdmtoolDiskgroupDisksArgs
{
  ProtobufCMessage base;
  char *diskgroup;
};
#define GUESTFS_LDMTOOL_DISKGROUP_DISKS_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_ldmtool_diskgroup_disks_args__descriptor) \
    , NULL }


struct  _GuestfsLdmtoolDiskgroupDisksRet
{
  ProtobufCMessage base;
  size_t n_disks;
  char **disks;
};
#define GUESTFS_LDMTOOL_DISKGROUP_DISKS_RET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_ldmtool_diskgroup_disks_ret__descriptor) \
    , 0,NULL }


struct  _GuestfsLdmtoolVolumeTypeArgs
{
  ProtobufCMessage base;
  char *diskgroup;
  char *volume;
};
#define GUESTFS_LDMTOOL_VOLUME_TYPE_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_ldmtool_volume_type_args__descriptor) \
    , NULL, NULL }


struct  _GuestfsLdmtoolVolumeTypeRet
{
  ProtobufCMessage base;
  char *voltype;
};
#define GUESTFS_LDMTOOL_VOLUME_TYPE_RET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_ldmtool_volume_type_ret__descriptor) \
    , NULL }


struct  _GuestfsLdmtoolVolumeHintArgs
{
  ProtobufCMessage base;
  char *diskgroup;
  char *volume;
};
#define GUESTFS_LDMTOOL_VOLUME_HINT_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_ldmtool_volume_hint_args__descriptor) \
    , NULL, NULL }


struct  _GuestfsLdmtoolVolumeHintRet
{
  ProtobufCMessage base;
  char *hint;
};
#define GUESTFS_LDMTOOL_VOLUME_HINT_RET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_ldmtool_volume_hint_ret__descriptor) \
    , NULL }


struct  _GuestfsLdmtoolVolumePartitionsArgs
{
  ProtobufCMessage base;
  char *diskgroup;
  char *volume;
};
#define GUESTFS_LDMTOOL_VOLUME_PARTITIONS_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_ldmtool_volume_partitions_args__descriptor) \
    , NULL, NULL }


struct  _GuestfsLdmtoolVolumePartitionsRet
{
  ProtobufCMessage base;
  size_t n_partitions;
  char **partitions;
};
#define GUESTFS_LDMTOOL_VOLUME_PARTITIONS_RET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_ldmtool_volume_partitions_ret__descriptor) \
    , 0,NULL }


struct  _GuestfsPartSetGptTypeArgs
{
  ProtobufCMessage base;
  char *device;
  int32_t partnum;
  char *guid;
};
#define GUESTFS_PART_SET_GPT_TYPE_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_part_set_gpt_type_args__descriptor) \
    , NULL, 0, NULL }


struct  _GuestfsPartGetGptTypeArgs
{
  ProtobufCMessage base;
  char *device;
  int32_t partnum;
};
#define GUESTFS_PART_GET_GPT_TYPE_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_part_get_gpt_type_args__descriptor) \
    , NULL, 0 }


struct  _GuestfsPartGetGptTypeRet
{
  ProtobufCMessage base;
  char *guid;
};
#define GUESTFS_PART_GET_GPT_TYPE_RET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_part_get_gpt_type_ret__descriptor) \
    , NULL }


struct  _GuestfsRenameArgs
{
  ProtobufCMessage base;
  char *oldpath;
  char *newpath;
};
#define GUESTFS_RENAME_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_rename_args__descriptor) \
    , NULL, NULL }


struct  _GuestfsIsWholeDeviceArgs
{
  ProtobufCMessage base;
  char *device;
};
#define GUESTFS_IS_WHOLE_DEVICE_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_is_whole_device_args__descriptor) \
    , NULL }


struct  _GuestfsIsWholeDeviceRet
{
  ProtobufCMessage base;
  protobuf_c_boolean flag;
};
#define GUESTFS_IS_WHOLE_DEVICE_RET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_is_whole_device_ret__descriptor) \
    , 0 }


struct  _GuestfsInternalParseMountableArgs
{
  ProtobufCMessage base;
  char *mountable;
};
#define GUESTFS_INTERNAL_PARSE_MOUNTABLE_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_internal_parse_mountable_args__descriptor) \
    , NULL }


struct  _GuestfsInternalParseMountableRet
{
  ProtobufCMessage base;
  GuestfsIntInternalMountable *mountable;
};
#define GUESTFS_INTERNAL_PARSE_MOUNTABLE_RET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_internal_parse_mountable_ret__descriptor) \
    , NULL }


struct  _GuestfsInternalRhbz914931Args
{
  ProtobufCMessage base;
  int32_t count;
};
#define GUESTFS_INTERNAL_RHBZ914931_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_internal_rhbz914931_args__descriptor) \
    , 0 }


struct  _GuestfsFeatureAvailableArgs
{
  ProtobufCMessage base;
  size_t n_groups;
  char **groups;
};
#define GUESTFS_FEATURE_AVAILABLE_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_feature_available_args__descriptor) \
    , 0,NULL }


struct  _GuestfsFeatureAvailableRet
{
  ProtobufCMessage base;
  protobuf_c_boolean isavailable;
};
#define GUESTFS_FEATURE_AVAILABLE_RET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_feature_available_ret__descriptor) \
    , 0 }


struct  _GuestfsSyslinuxArgs
{
  ProtobufCMessage base;
  char *device;
  char *directory;
};
#define GUESTFS_SYSLINUX_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_syslinux_args__descriptor) \
    , NULL, NULL }


struct  _GuestfsExtlinuxArgs
{
  ProtobufCMessage base;
  char *directory;
};
#define GUESTFS_EXTLINUX_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_extlinux_args__descriptor) \
    , NULL }


struct  _GuestfsCpRrArgs
{
  ProtobufCMessage base;
  char *src;
  char *dest;
};
#define GUESTFS_CP_RR_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_cp_rr_args__descriptor) \
    , NULL, NULL }


struct  _GuestfsRemountArgs
{
  ProtobufCMessage base;
  char *mountpoint;
  protobuf_c_boolean rw;
};
#define GUESTFS_REMOUNT_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_remount_args__descriptor) \
    , NULL, 0 }


struct  _GuestfsSetUuidArgs
{
  ProtobufCMessage base;
  char *device;
  char *uuid;
};
#define GUESTFS_SET_UUID_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_set_uuid_args__descriptor) \
    , NULL, NULL }


struct  _GuestfsJournalOpenArgs
{
  ProtobufCMessage base;
  char *directory;
};
#define GUESTFS_JOURNAL_OPEN_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_journal_open_args__descriptor) \
    , NULL }


struct  _GuestfsJournalNextRet
{
  ProtobufCMessage base;
  protobuf_c_boolean more;
};
#define GUESTFS_JOURNAL_NEXT_RET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_journal_next_ret__descriptor) \
    , 0 }


struct  _GuestfsJournalSkipArgs
{
  ProtobufCMessage base;
  int64_t skip;
};
#define GUESTFS_JOURNAL_SKIP_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_journal_skip_args__descriptor) \
    , 0 }


struct  _GuestfsJournalSkipRet
{
  ProtobufCMessage base;
  int64_t rskip;
};
#define GUESTFS_JOURNAL_SKIP_RET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_journal_skip_ret__descriptor) \
    , 0 }


struct  _GuestfsJournalGetDataThresholdRet
{
  ProtobufCMessage base;
  int64_t threshold;
};
#define GUESTFS_JOURNAL_GET_DATA_THRESHOLD_RET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_journal_get_data_threshold_ret__descriptor) \
    , 0 }


struct  _GuestfsJournalSetDataThresholdArgs
{
  ProtobufCMessage base;
  int64_t threshold;
};
#define GUESTFS_JOURNAL_SET_DATA_THRESHOLD_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_journal_set_data_threshold_args__descriptor) \
    , 0 }


struct  _GuestfsAugSetmArgs
{
  ProtobufCMessage base;
  char *basee;
  char *sub;
  char *val;
};
#define GUESTFS_AUG_SETM_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_aug_setm_args__descriptor) \
    , NULL, NULL, NULL }


struct  _GuestfsAugSetmRet
{
  ProtobufCMessage base;
  int32_t nodes;
};
#define GUESTFS_AUG_SETM_RET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_aug_setm_ret__descriptor) \
    , 0 }


struct  _GuestfsAugLabelArgs
{
  ProtobufCMessage base;
  char *augpath;
};
#define GUESTFS_AUG_LABEL_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_aug_label_args__descriptor) \
    , NULL }


struct  _GuestfsAugLabelRet
{
  ProtobufCMessage base;
  char *label;
};
#define GUESTFS_AUG_LABEL_RET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_aug_label_ret__descriptor) \
    , NULL }


struct  _GuestfsInternalUploadArgs
{
  ProtobufCMessage base;
  char *tmpname;
  int32_t mode;
};
#define GUESTFS_INTERNAL_UPLOAD_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_internal_upload_args__descriptor) \
    , NULL, 0 }


struct  _GuestfsCopyAttributesArgs
{
  ProtobufCMessage base;
  char *src;
  char *dest;
  protobuf_c_boolean all;
  protobuf_c_boolean mode;
  protobuf_c_boolean xattributes;
  protobuf_c_boolean ownership;
};
#define GUESTFS_COPY_ATTRIBUTES_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_copy_attributes_args__descriptor) \
    , NULL, NULL, 0, 0, 0, 0 }


struct  _GuestfsPartGetNameArgs
{
  ProtobufCMessage base;
  char *device;
  int32_t partnum;
};
#define GUESTFS_PART_GET_NAME_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_part_get_name_args__descriptor) \
    , NULL, 0 }


struct  _GuestfsPartGetNameRet
{
  ProtobufCMessage base;
  char *name;
};
#define GUESTFS_PART_GET_NAME_RET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_part_get_name_ret__descriptor) \
    , NULL }


struct  _GuestfsBlkdiscardArgs
{
  ProtobufCMessage base;
  char *device;
};
#define GUESTFS_BLKDISCARD_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_blkdiscard_args__descriptor) \
    , NULL }


struct  _GuestfsBlkdiscardzeroesArgs
{
  ProtobufCMessage base;
  char *device;
};
#define GUESTFS_BLKDISCARDZEROES_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_blkdiscardzeroes_args__descriptor) \
    , NULL }


struct  _GuestfsBlkdiscardzeroesRet
{
  ProtobufCMessage base;
  protobuf_c_boolean zeroes;
};
#define GUESTFS_BLKDISCARDZEROES_RET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_blkdiscardzeroes_ret__descriptor) \
    , 0 }


struct  _GuestfsCpioOutArgs
{
  ProtobufCMessage base;
  char *directory;
  char *format;
};
#define GUESTFS_CPIO_OUT_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_cpio_out_args__descriptor) \
    , NULL, NULL }


struct  _GuestfsJournalGetRealtimeUsecRet
{
  ProtobufCMessage base;
  int64_t usec;
};
#define GUESTFS_JOURNAL_GET_REALTIME_USEC_RET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_journal_get_realtime_usec_ret__descriptor) \
    , 0 }


struct  _GuestfsStatnsArgs
{
  ProtobufCMessage base;
  char *path;
};
#define GUESTFS_STATNS_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_statns_args__descriptor) \
    , NULL }


struct  _GuestfsStatnsRet
{
  ProtobufCMessage base;
  GuestfsIntStatNS *statbuf;
};
#define GUESTFS_STATNS_RET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_statns_ret__descriptor) \
    , NULL }


struct  _GuestfsLstatnsArgs
{
  ProtobufCMessage base;
  char *path;
};
#define GUESTFS_LSTATNS_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_lstatns_args__descriptor) \
    , NULL }


struct  _GuestfsLstatnsRet
{
  ProtobufCMessage base;
  GuestfsIntStatNS *statbuf;
};
#define GUESTFS_LSTATNS_RET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_lstatns_ret__descriptor) \
    , NULL }


struct  _GuestfsInternalLstatnslistArgs
{
  ProtobufCMessage base;
  char *path;
  size_t n_names;
  char **names;
};
#define GUESTFS_INTERNAL_LSTATNSLIST_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_internal_lstatnslist_args__descriptor) \
    , NULL, 0,NULL }


struct  _GuestfsInternalLstatnslistRet
{
  ProtobufCMessage base;
  GuestfsIntStatNSList *statbufs;
};
#define GUESTFS_INTERNAL_LSTATNSLIST_RET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_internal_lstatnslist_ret__descriptor) \
    , NULL }


struct  _GuestfsMessageError
{
  ProtobufCMessage base;
  /*
   * errno eg. "EINVAL", empty string
   *if errno not available 
   */
  char *errno_string;
  char *error_message;
};
#define GUESTFS_MESSAGE_ERROR__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_message_error__descriptor) \
    , NULL, NULL }


struct  _GuestfsMessageHeader
{
  ProtobufCMessage base;
  /*
   * GUESTFS_PROGRAM 
   */
  uint32_t prog;
  /*
   * GUESTFS_PROTOCOL_VERSION 
   */
  uint32_t vers;
  /*
   * GUESTFS_PROC_x 
   */
  int32_t proc;
  int32_t direction;
  /*
   * message serial number 
   */
  uint32_t serial;
  /*
   * upload hint for progress bar 
   */
  uint64_t progress_hint;
  /*
   * bitmask for optional args 
   */
  uint64_t optargs_bitmask;
  int32_t status;
};
#define GUESTFS_MESSAGE_HEADER__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_message_header__descriptor) \
    , 0, 0, 0, 0, 0, 0, 0, 0 }


struct  _GuestfsChunk
{
  ProtobufCMessage base;
  /*
   * if non-zero, transfer is cancelled 
   */
  int32_t cancel;
  /*
   * data size is 0 bytes if the transfer has finished successfully 
   */
  ProtobufCBinaryData data;
};
#define GUESTFS_CHUNK__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_chunk__descriptor) \
    , 0, {0,NULL} }


/*
 * Progress notifications.  Daemon self-limits these messages to
 * at most one per second.  The daemon can send these messages
 * at any time, and the caller should discard unexpected messages.
 * 'position' and 'total' have undefined units; however they may
 * have meaning for some calls.
 * Notes:
 * (1) guestfs___recv_from_daemon assumes the XDR-encoded
 * structure is 24 bytes long.
 * (2) daemon/proto.c:async_safe_send_pulse assumes the progress
 * message is laid out precisely in this way.  So if you change
 * this then you'd better change that function as well.
 */
struct  _GuestfsProgress
{
  ProtobufCMessage base;
  /*
   * @0:  GUESTFS_PROC_x 
   */
  int32_t proc;
  /*
   * @4:  message serial number 
   */
  uint32_t serial;
  /*
   * @8:  0 <= position <= total 
   */
  uint64_t position;
  /*
   * @16: total size of operation 
   */
  uint64_t total;
};
#define GUESTFS_PROGRESS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_progress__descriptor) \
    , 0, 0, 0, 0 }


struct  _GuestfsFlagMessage
{
  ProtobufCMessage base;
  uint32_t val;
};
#define GUESTFS_FLAG_MESSAGE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&guestfs_flag_message__descriptor) \
    , 0 }


/* GuestfsIntIntBool methods */
void   guestfs_int_int_bool__init
                     (GuestfsIntIntBool         *message);
size_t guestfs_int_int_bool__get_packed_size
                     (const GuestfsIntIntBool   *message);
size_t guestfs_int_int_bool__pack
                     (const GuestfsIntIntBool   *message,
                      uint8_t             *out);
size_t guestfs_int_int_bool__pack_to_buffer
                     (const GuestfsIntIntBool   *message,
                      ProtobufCBuffer     *buffer);
GuestfsIntIntBool *
       guestfs_int_int_bool__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_int_int_bool__free_unpacked
                     (GuestfsIntIntBool *message,
                      ProtobufCAllocator *allocator);
/* GuestfsIntIntBoolList methods */
void   guestfs_int_int_bool_list__init
                     (GuestfsIntIntBoolList         *message);
size_t guestfs_int_int_bool_list__get_packed_size
                     (const GuestfsIntIntBoolList   *message);
size_t guestfs_int_int_bool_list__pack
                     (const GuestfsIntIntBoolList   *message,
                      uint8_t             *out);
size_t guestfs_int_int_bool_list__pack_to_buffer
                     (const GuestfsIntIntBoolList   *message,
                      ProtobufCBuffer     *buffer);
GuestfsIntIntBoolList *
       guestfs_int_int_bool_list__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_int_int_bool_list__free_unpacked
                     (GuestfsIntIntBoolList *message,
                      ProtobufCAllocator *allocator);
/* GuestfsIntPv methods */
void   guestfs_int_pv__init
                     (GuestfsIntPv         *message);
size_t guestfs_int_pv__get_packed_size
                     (const GuestfsIntPv   *message);
size_t guestfs_int_pv__pack
                     (const GuestfsIntPv   *message,
                      uint8_t             *out);
size_t guestfs_int_pv__pack_to_buffer
                     (const GuestfsIntPv   *message,
                      ProtobufCBuffer     *buffer);
GuestfsIntPv *
       guestfs_int_pv__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_int_pv__free_unpacked
                     (GuestfsIntPv *message,
                      ProtobufCAllocator *allocator);
/* GuestfsIntPvList methods */
void   guestfs_int_pv_list__init
                     (GuestfsIntPvList         *message);
size_t guestfs_int_pv_list__get_packed_size
                     (const GuestfsIntPvList   *message);
size_t guestfs_int_pv_list__pack
                     (const GuestfsIntPvList   *message,
                      uint8_t             *out);
size_t guestfs_int_pv_list__pack_to_buffer
                     (const GuestfsIntPvList   *message,
                      ProtobufCBuffer     *buffer);
GuestfsIntPvList *
       guestfs_int_pv_list__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_int_pv_list__free_unpacked
                     (GuestfsIntPvList *message,
                      ProtobufCAllocator *allocator);
/* GuestfsIntVg methods */
void   guestfs_int_vg__init
                     (GuestfsIntVg         *message);
size_t guestfs_int_vg__get_packed_size
                     (const GuestfsIntVg   *message);
size_t guestfs_int_vg__pack
                     (const GuestfsIntVg   *message,
                      uint8_t             *out);
size_t guestfs_int_vg__pack_to_buffer
                     (const GuestfsIntVg   *message,
                      ProtobufCBuffer     *buffer);
GuestfsIntVg *
       guestfs_int_vg__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_int_vg__free_unpacked
                     (GuestfsIntVg *message,
                      ProtobufCAllocator *allocator);
/* GuestfsIntVgList methods */
void   guestfs_int_vg_list__init
                     (GuestfsIntVgList         *message);
size_t guestfs_int_vg_list__get_packed_size
                     (const GuestfsIntVgList   *message);
size_t guestfs_int_vg_list__pack
                     (const GuestfsIntVgList   *message,
                      uint8_t             *out);
size_t guestfs_int_vg_list__pack_to_buffer
                     (const GuestfsIntVgList   *message,
                      ProtobufCBuffer     *buffer);
GuestfsIntVgList *
       guestfs_int_vg_list__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_int_vg_list__free_unpacked
                     (GuestfsIntVgList *message,
                      ProtobufCAllocator *allocator);
/* GuestfsIntLv methods */
void   guestfs_int_lv__init
                     (GuestfsIntLv         *message);
size_t guestfs_int_lv__get_packed_size
                     (const GuestfsIntLv   *message);
size_t guestfs_int_lv__pack
                     (const GuestfsIntLv   *message,
                      uint8_t             *out);
size_t guestfs_int_lv__pack_to_buffer
                     (const GuestfsIntLv   *message,
                      ProtobufCBuffer     *buffer);
GuestfsIntLv *
       guestfs_int_lv__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_int_lv__free_unpacked
                     (GuestfsIntLv *message,
                      ProtobufCAllocator *allocator);
/* GuestfsIntLvList methods */
void   guestfs_int_lv_list__init
                     (GuestfsIntLvList         *message);
size_t guestfs_int_lv_list__get_packed_size
                     (const GuestfsIntLvList   *message);
size_t guestfs_int_lv_list__pack
                     (const GuestfsIntLvList   *message,
                      uint8_t             *out);
size_t guestfs_int_lv_list__pack_to_buffer
                     (const GuestfsIntLvList   *message,
                      ProtobufCBuffer     *buffer);
GuestfsIntLvList *
       guestfs_int_lv_list__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_int_lv_list__free_unpacked
                     (GuestfsIntLvList *message,
                      ProtobufCAllocator *allocator);
/* GuestfsIntStat methods */
void   guestfs_int_stat__init
                     (GuestfsIntStat         *message);
size_t guestfs_int_stat__get_packed_size
                     (const GuestfsIntStat   *message);
size_t guestfs_int_stat__pack
                     (const GuestfsIntStat   *message,
                      uint8_t             *out);
size_t guestfs_int_stat__pack_to_buffer
                     (const GuestfsIntStat   *message,
                      ProtobufCBuffer     *buffer);
GuestfsIntStat *
       guestfs_int_stat__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_int_stat__free_unpacked
                     (GuestfsIntStat *message,
                      ProtobufCAllocator *allocator);
/* GuestfsIntStatList methods */
void   guestfs_int_stat_list__init
                     (GuestfsIntStatList         *message);
size_t guestfs_int_stat_list__get_packed_size
                     (const GuestfsIntStatList   *message);
size_t guestfs_int_stat_list__pack
                     (const GuestfsIntStatList   *message,
                      uint8_t             *out);
size_t guestfs_int_stat_list__pack_to_buffer
                     (const GuestfsIntStatList   *message,
                      ProtobufCBuffer     *buffer);
GuestfsIntStatList *
       guestfs_int_stat_list__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_int_stat_list__free_unpacked
                     (GuestfsIntStatList *message,
                      ProtobufCAllocator *allocator);
/* GuestfsIntStatNS methods */
void   guestfs_int_stat_ns__init
                     (GuestfsIntStatNS         *message);
size_t guestfs_int_stat_ns__get_packed_size
                     (const GuestfsIntStatNS   *message);
size_t guestfs_int_stat_ns__pack
                     (const GuestfsIntStatNS   *message,
                      uint8_t             *out);
size_t guestfs_int_stat_ns__pack_to_buffer
                     (const GuestfsIntStatNS   *message,
                      ProtobufCBuffer     *buffer);
GuestfsIntStatNS *
       guestfs_int_stat_ns__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_int_stat_ns__free_unpacked
                     (GuestfsIntStatNS *message,
                      ProtobufCAllocator *allocator);
/* GuestfsIntStatNSList methods */
void   guestfs_int_stat_nslist__init
                     (GuestfsIntStatNSList         *message);
size_t guestfs_int_stat_nslist__get_packed_size
                     (const GuestfsIntStatNSList   *message);
size_t guestfs_int_stat_nslist__pack
                     (const GuestfsIntStatNSList   *message,
                      uint8_t             *out);
size_t guestfs_int_stat_nslist__pack_to_buffer
                     (const GuestfsIntStatNSList   *message,
                      ProtobufCBuffer     *buffer);
GuestfsIntStatNSList *
       guestfs_int_stat_nslist__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_int_stat_nslist__free_unpacked
                     (GuestfsIntStatNSList *message,
                      ProtobufCAllocator *allocator);
/* GuestfsIntStatVFS methods */
void   guestfs_int_stat_vfs__init
                     (GuestfsIntStatVFS         *message);
size_t guestfs_int_stat_vfs__get_packed_size
                     (const GuestfsIntStatVFS   *message);
size_t guestfs_int_stat_vfs__pack
                     (const GuestfsIntStatVFS   *message,
                      uint8_t             *out);
size_t guestfs_int_stat_vfs__pack_to_buffer
                     (const GuestfsIntStatVFS   *message,
                      ProtobufCBuffer     *buffer);
GuestfsIntStatVFS *
       guestfs_int_stat_vfs__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_int_stat_vfs__free_unpacked
                     (GuestfsIntStatVFS *message,
                      ProtobufCAllocator *allocator);
/* GuestfsIntStatVFSList methods */
void   guestfs_int_stat_vfslist__init
                     (GuestfsIntStatVFSList         *message);
size_t guestfs_int_stat_vfslist__get_packed_size
                     (const GuestfsIntStatVFSList   *message);
size_t guestfs_int_stat_vfslist__pack
                     (const GuestfsIntStatVFSList   *message,
                      uint8_t             *out);
size_t guestfs_int_stat_vfslist__pack_to_buffer
                     (const GuestfsIntStatVFSList   *message,
                      ProtobufCBuffer     *buffer);
GuestfsIntStatVFSList *
       guestfs_int_stat_vfslist__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_int_stat_vfslist__free_unpacked
                     (GuestfsIntStatVFSList *message,
                      ProtobufCAllocator *allocator);
/* GuestfsIntDirent methods */
void   guestfs_int_dirent__init
                     (GuestfsIntDirent         *message);
size_t guestfs_int_dirent__get_packed_size
                     (const GuestfsIntDirent   *message);
size_t guestfs_int_dirent__pack
                     (const GuestfsIntDirent   *message,
                      uint8_t             *out);
size_t guestfs_int_dirent__pack_to_buffer
                     (const GuestfsIntDirent   *message,
                      ProtobufCBuffer     *buffer);
GuestfsIntDirent *
       guestfs_int_dirent__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_int_dirent__free_unpacked
                     (GuestfsIntDirent *message,
                      ProtobufCAllocator *allocator);
/* GuestfsIntDirentList methods */
void   guestfs_int_dirent_list__init
                     (GuestfsIntDirentList         *message);
size_t guestfs_int_dirent_list__get_packed_size
                     (const GuestfsIntDirentList   *message);
size_t guestfs_int_dirent_list__pack
                     (const GuestfsIntDirentList   *message,
                      uint8_t             *out);
size_t guestfs_int_dirent_list__pack_to_buffer
                     (const GuestfsIntDirentList   *message,
                      ProtobufCBuffer     *buffer);
GuestfsIntDirentList *
       guestfs_int_dirent_list__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_int_dirent_list__free_unpacked
                     (GuestfsIntDirentList *message,
                      ProtobufCAllocator *allocator);
/* GuestfsIntVersion methods */
void   guestfs_int_version__init
                     (GuestfsIntVersion         *message);
size_t guestfs_int_version__get_packed_size
                     (const GuestfsIntVersion   *message);
size_t guestfs_int_version__pack
                     (const GuestfsIntVersion   *message,
                      uint8_t             *out);
size_t guestfs_int_version__pack_to_buffer
                     (const GuestfsIntVersion   *message,
                      ProtobufCBuffer     *buffer);
GuestfsIntVersion *
       guestfs_int_version__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_int_version__free_unpacked
                     (GuestfsIntVersion *message,
                      ProtobufCAllocator *allocator);
/* GuestfsIntVersionList methods */
void   guestfs_int_version_list__init
                     (GuestfsIntVersionList         *message);
size_t guestfs_int_version_list__get_packed_size
                     (const GuestfsIntVersionList   *message);
size_t guestfs_int_version_list__pack
                     (const GuestfsIntVersionList   *message,
                      uint8_t             *out);
size_t guestfs_int_version_list__pack_to_buffer
                     (const GuestfsIntVersionList   *message,
                      ProtobufCBuffer     *buffer);
GuestfsIntVersionList *
       guestfs_int_version_list__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_int_version_list__free_unpacked
                     (GuestfsIntVersionList *message,
                      ProtobufCAllocator *allocator);
/* GuestfsIntXAttr methods */
void   guestfs_int_xattr__init
                     (GuestfsIntXAttr         *message);
size_t guestfs_int_xattr__get_packed_size
                     (const GuestfsIntXAttr   *message);
size_t guestfs_int_xattr__pack
                     (const GuestfsIntXAttr   *message,
                      uint8_t             *out);
size_t guestfs_int_xattr__pack_to_buffer
                     (const GuestfsIntXAttr   *message,
                      ProtobufCBuffer     *buffer);
GuestfsIntXAttr *
       guestfs_int_xattr__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_int_xattr__free_unpacked
                     (GuestfsIntXAttr *message,
                      ProtobufCAllocator *allocator);
/* GuestfsIntXAttrList methods */
void   guestfs_int_xattr_list__init
                     (GuestfsIntXAttrList         *message);
size_t guestfs_int_xattr_list__get_packed_size
                     (const GuestfsIntXAttrList   *message);
size_t guestfs_int_xattr_list__pack
                     (const GuestfsIntXAttrList   *message,
                      uint8_t             *out);
size_t guestfs_int_xattr_list__pack_to_buffer
                     (const GuestfsIntXAttrList   *message,
                      ProtobufCBuffer     *buffer);
GuestfsIntXAttrList *
       guestfs_int_xattr_list__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_int_xattr_list__free_unpacked
                     (GuestfsIntXAttrList *message,
                      ProtobufCAllocator *allocator);
/* GuestfsIntINotifyEvent methods */
void   guestfs_int_inotify_event__init
                     (GuestfsIntINotifyEvent         *message);
size_t guestfs_int_inotify_event__get_packed_size
                     (const GuestfsIntINotifyEvent   *message);
size_t guestfs_int_inotify_event__pack
                     (const GuestfsIntINotifyEvent   *message,
                      uint8_t             *out);
size_t guestfs_int_inotify_event__pack_to_buffer
                     (const GuestfsIntINotifyEvent   *message,
                      ProtobufCBuffer     *buffer);
GuestfsIntINotifyEvent *
       guestfs_int_inotify_event__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_int_inotify_event__free_unpacked
                     (GuestfsIntINotifyEvent *message,
                      ProtobufCAllocator *allocator);
/* GuestfsIntINotifyEventList methods */
void   guestfs_int_inotify_event_list__init
                     (GuestfsIntINotifyEventList         *message);
size_t guestfs_int_inotify_event_list__get_packed_size
                     (const GuestfsIntINotifyEventList   *message);
size_t guestfs_int_inotify_event_list__pack
                     (const GuestfsIntINotifyEventList   *message,
                      uint8_t             *out);
size_t guestfs_int_inotify_event_list__pack_to_buffer
                     (const GuestfsIntINotifyEventList   *message,
                      ProtobufCBuffer     *buffer);
GuestfsIntINotifyEventList *
       guestfs_int_inotify_event_list__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_int_inotify_event_list__free_unpacked
                     (GuestfsIntINotifyEventList *message,
                      ProtobufCAllocator *allocator);
/* GuestfsIntPartition methods */
void   guestfs_int_partition__init
                     (GuestfsIntPartition         *message);
size_t guestfs_int_partition__get_packed_size
                     (const GuestfsIntPartition   *message);
size_t guestfs_int_partition__pack
                     (const GuestfsIntPartition   *message,
                      uint8_t             *out);
size_t guestfs_int_partition__pack_to_buffer
                     (const GuestfsIntPartition   *message,
                      ProtobufCBuffer     *buffer);
GuestfsIntPartition *
       guestfs_int_partition__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_int_partition__free_unpacked
                     (GuestfsIntPartition *message,
                      ProtobufCAllocator *allocator);
/* GuestfsIntPartitionList methods */
void   guestfs_int_partition_list__init
                     (GuestfsIntPartitionList         *message);
size_t guestfs_int_partition_list__get_packed_size
                     (const GuestfsIntPartitionList   *message);
size_t guestfs_int_partition_list__pack
                     (const GuestfsIntPartitionList   *message,
                      uint8_t             *out);
size_t guestfs_int_partition_list__pack_to_buffer
                     (const GuestfsIntPartitionList   *message,
                      ProtobufCBuffer     *buffer);
GuestfsIntPartitionList *
       guestfs_int_partition_list__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_int_partition_list__free_unpacked
                     (GuestfsIntPartitionList *message,
                      ProtobufCAllocator *allocator);
/* GuestfsIntApplication methods */
void   guestfs_int_application__init
                     (GuestfsIntApplication         *message);
size_t guestfs_int_application__get_packed_size
                     (const GuestfsIntApplication   *message);
size_t guestfs_int_application__pack
                     (const GuestfsIntApplication   *message,
                      uint8_t             *out);
size_t guestfs_int_application__pack_to_buffer
                     (const GuestfsIntApplication   *message,
                      ProtobufCBuffer     *buffer);
GuestfsIntApplication *
       guestfs_int_application__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_int_application__free_unpacked
                     (GuestfsIntApplication *message,
                      ProtobufCAllocator *allocator);
/* GuestfsIntApplicationList methods */
void   guestfs_int_application_list__init
                     (GuestfsIntApplicationList         *message);
size_t guestfs_int_application_list__get_packed_size
                     (const GuestfsIntApplicationList   *message);
size_t guestfs_int_application_list__pack
                     (const GuestfsIntApplicationList   *message,
                      uint8_t             *out);
size_t guestfs_int_application_list__pack_to_buffer
                     (const GuestfsIntApplicationList   *message,
                      ProtobufCBuffer     *buffer);
GuestfsIntApplicationList *
       guestfs_int_application_list__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_int_application_list__free_unpacked
                     (GuestfsIntApplicationList *message,
                      ProtobufCAllocator *allocator);
/* GuestfsIntApplication2 methods */
void   guestfs_int_application2__init
                     (GuestfsIntApplication2         *message);
size_t guestfs_int_application2__get_packed_size
                     (const GuestfsIntApplication2   *message);
size_t guestfs_int_application2__pack
                     (const GuestfsIntApplication2   *message,
                      uint8_t             *out);
size_t guestfs_int_application2__pack_to_buffer
                     (const GuestfsIntApplication2   *message,
                      ProtobufCBuffer     *buffer);
GuestfsIntApplication2 *
       guestfs_int_application2__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_int_application2__free_unpacked
                     (GuestfsIntApplication2 *message,
                      ProtobufCAllocator *allocator);
/* GuestfsIntApplication2List methods */
void   guestfs_int_application2_list__init
                     (GuestfsIntApplication2List         *message);
size_t guestfs_int_application2_list__get_packed_size
                     (const GuestfsIntApplication2List   *message);
size_t guestfs_int_application2_list__pack
                     (const GuestfsIntApplication2List   *message,
                      uint8_t             *out);
size_t guestfs_int_application2_list__pack_to_buffer
                     (const GuestfsIntApplication2List   *message,
                      ProtobufCBuffer     *buffer);
GuestfsIntApplication2List *
       guestfs_int_application2_list__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_int_application2_list__free_unpacked
                     (GuestfsIntApplication2List *message,
                      ProtobufCAllocator *allocator);
/* GuestfsIntISOInfo methods */
void   guestfs_int_isoinfo__init
                     (GuestfsIntISOInfo         *message);
size_t guestfs_int_isoinfo__get_packed_size
                     (const GuestfsIntISOInfo   *message);
size_t guestfs_int_isoinfo__pack
                     (const GuestfsIntISOInfo   *message,
                      uint8_t             *out);
size_t guestfs_int_isoinfo__pack_to_buffer
                     (const GuestfsIntISOInfo   *message,
                      ProtobufCBuffer     *buffer);
GuestfsIntISOInfo *
       guestfs_int_isoinfo__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_int_isoinfo__free_unpacked
                     (GuestfsIntISOInfo *message,
                      ProtobufCAllocator *allocator);
/* GuestfsIntISOInfoList methods */
void   guestfs_int_isoinfo_list__init
                     (GuestfsIntISOInfoList         *message);
size_t guestfs_int_isoinfo_list__get_packed_size
                     (const GuestfsIntISOInfoList   *message);
size_t guestfs_int_isoinfo_list__pack
                     (const GuestfsIntISOInfoList   *message,
                      uint8_t             *out);
size_t guestfs_int_isoinfo_list__pack_to_buffer
                     (const GuestfsIntISOInfoList   *message,
                      ProtobufCBuffer     *buffer);
GuestfsIntISOInfoList *
       guestfs_int_isoinfo_list__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_int_isoinfo_list__free_unpacked
                     (GuestfsIntISOInfoList *message,
                      ProtobufCAllocator *allocator);
/* GuestfsIntMDStat methods */
void   guestfs_int_mdstat__init
                     (GuestfsIntMDStat         *message);
size_t guestfs_int_mdstat__get_packed_size
                     (const GuestfsIntMDStat   *message);
size_t guestfs_int_mdstat__pack
                     (const GuestfsIntMDStat   *message,
                      uint8_t             *out);
size_t guestfs_int_mdstat__pack_to_buffer
                     (const GuestfsIntMDStat   *message,
                      ProtobufCBuffer     *buffer);
GuestfsIntMDStat *
       guestfs_int_mdstat__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_int_mdstat__free_unpacked
                     (GuestfsIntMDStat *message,
                      ProtobufCAllocator *allocator);
/* GuestfsIntMDStatList methods */
void   guestfs_int_mdstat_list__init
                     (GuestfsIntMDStatList         *message);
size_t guestfs_int_mdstat_list__get_packed_size
                     (const GuestfsIntMDStatList   *message);
size_t guestfs_int_mdstat_list__pack
                     (const GuestfsIntMDStatList   *message,
                      uint8_t             *out);
size_t guestfs_int_mdstat_list__pack_to_buffer
                     (const GuestfsIntMDStatList   *message,
                      ProtobufCBuffer     *buffer);
GuestfsIntMDStatList *
       guestfs_int_mdstat_list__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_int_mdstat_list__free_unpacked
                     (GuestfsIntMDStatList *message,
                      ProtobufCAllocator *allocator);
/* GuestfsIntBTRFSSubvolume methods */
void   guestfs_int_btrfssubvolume__init
                     (GuestfsIntBTRFSSubvolume         *message);
size_t guestfs_int_btrfssubvolume__get_packed_size
                     (const GuestfsIntBTRFSSubvolume   *message);
size_t guestfs_int_btrfssubvolume__pack
                     (const GuestfsIntBTRFSSubvolume   *message,
                      uint8_t             *out);
size_t guestfs_int_btrfssubvolume__pack_to_buffer
                     (const GuestfsIntBTRFSSubvolume   *message,
                      ProtobufCBuffer     *buffer);
GuestfsIntBTRFSSubvolume *
       guestfs_int_btrfssubvolume__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_int_btrfssubvolume__free_unpacked
                     (GuestfsIntBTRFSSubvolume *message,
                      ProtobufCAllocator *allocator);
/* GuestfsIntBTRFSSubvolumeList methods */
void   guestfs_int_btrfssubvolume_list__init
                     (GuestfsIntBTRFSSubvolumeList         *message);
size_t guestfs_int_btrfssubvolume_list__get_packed_size
                     (const GuestfsIntBTRFSSubvolumeList   *message);
size_t guestfs_int_btrfssubvolume_list__pack
                     (const GuestfsIntBTRFSSubvolumeList   *message,
                      uint8_t             *out);
size_t guestfs_int_btrfssubvolume_list__pack_to_buffer
                     (const GuestfsIntBTRFSSubvolumeList   *message,
                      ProtobufCBuffer     *buffer);
GuestfsIntBTRFSSubvolumeList *
       guestfs_int_btrfssubvolume_list__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_int_btrfssubvolume_list__free_unpacked
                     (GuestfsIntBTRFSSubvolumeList *message,
                      ProtobufCAllocator *allocator);
/* GuestfsIntXFSInfo methods */
void   guestfs_int_xfsinfo__init
                     (GuestfsIntXFSInfo         *message);
size_t guestfs_int_xfsinfo__get_packed_size
                     (const GuestfsIntXFSInfo   *message);
size_t guestfs_int_xfsinfo__pack
                     (const GuestfsIntXFSInfo   *message,
                      uint8_t             *out);
size_t guestfs_int_xfsinfo__pack_to_buffer
                     (const GuestfsIntXFSInfo   *message,
                      ProtobufCBuffer     *buffer);
GuestfsIntXFSInfo *
       guestfs_int_xfsinfo__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_int_xfsinfo__free_unpacked
                     (GuestfsIntXFSInfo *message,
                      ProtobufCAllocator *allocator);
/* GuestfsIntXFSInfoList methods */
void   guestfs_int_xfsinfo_list__init
                     (GuestfsIntXFSInfoList         *message);
size_t guestfs_int_xfsinfo_list__get_packed_size
                     (const GuestfsIntXFSInfoList   *message);
size_t guestfs_int_xfsinfo_list__pack
                     (const GuestfsIntXFSInfoList   *message,
                      uint8_t             *out);
size_t guestfs_int_xfsinfo_list__pack_to_buffer
                     (const GuestfsIntXFSInfoList   *message,
                      ProtobufCBuffer     *buffer);
GuestfsIntXFSInfoList *
       guestfs_int_xfsinfo_list__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_int_xfsinfo_list__free_unpacked
                     (GuestfsIntXFSInfoList *message,
                      ProtobufCAllocator *allocator);
/* GuestfsIntUTSName methods */
void   guestfs_int_utsname__init
                     (GuestfsIntUTSName         *message);
size_t guestfs_int_utsname__get_packed_size
                     (const GuestfsIntUTSName   *message);
size_t guestfs_int_utsname__pack
                     (const GuestfsIntUTSName   *message,
                      uint8_t             *out);
size_t guestfs_int_utsname__pack_to_buffer
                     (const GuestfsIntUTSName   *message,
                      ProtobufCBuffer     *buffer);
GuestfsIntUTSName *
       guestfs_int_utsname__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_int_utsname__free_unpacked
                     (GuestfsIntUTSName *message,
                      ProtobufCAllocator *allocator);
/* GuestfsIntUTSNameList methods */
void   guestfs_int_utsname_list__init
                     (GuestfsIntUTSNameList         *message);
size_t guestfs_int_utsname_list__get_packed_size
                     (const GuestfsIntUTSNameList   *message);
size_t guestfs_int_utsname_list__pack
                     (const GuestfsIntUTSNameList   *message,
                      uint8_t             *out);
size_t guestfs_int_utsname_list__pack_to_buffer
                     (const GuestfsIntUTSNameList   *message,
                      ProtobufCBuffer     *buffer);
GuestfsIntUTSNameList *
       guestfs_int_utsname_list__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_int_utsname_list__free_unpacked
                     (GuestfsIntUTSNameList *message,
                      ProtobufCAllocator *allocator);
/* GuestfsIntHivexNode methods */
void   guestfs_int_hivex_node__init
                     (GuestfsIntHivexNode         *message);
size_t guestfs_int_hivex_node__get_packed_size
                     (const GuestfsIntHivexNode   *message);
size_t guestfs_int_hivex_node__pack
                     (const GuestfsIntHivexNode   *message,
                      uint8_t             *out);
size_t guestfs_int_hivex_node__pack_to_buffer
                     (const GuestfsIntHivexNode   *message,
                      ProtobufCBuffer     *buffer);
GuestfsIntHivexNode *
       guestfs_int_hivex_node__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_int_hivex_node__free_unpacked
                     (GuestfsIntHivexNode *message,
                      ProtobufCAllocator *allocator);
/* GuestfsIntHivexNodeList methods */
void   guestfs_int_hivex_node_list__init
                     (GuestfsIntHivexNodeList         *message);
size_t guestfs_int_hivex_node_list__get_packed_size
                     (const GuestfsIntHivexNodeList   *message);
size_t guestfs_int_hivex_node_list__pack
                     (const GuestfsIntHivexNodeList   *message,
                      uint8_t             *out);
size_t guestfs_int_hivex_node_list__pack_to_buffer
                     (const GuestfsIntHivexNodeList   *message,
                      ProtobufCBuffer     *buffer);
GuestfsIntHivexNodeList *
       guestfs_int_hivex_node_list__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_int_hivex_node_list__free_unpacked
                     (GuestfsIntHivexNodeList *message,
                      ProtobufCAllocator *allocator);
/* GuestfsIntHivexValue methods */
void   guestfs_int_hivex_value__init
                     (GuestfsIntHivexValue         *message);
size_t guestfs_int_hivex_value__get_packed_size
                     (const GuestfsIntHivexValue   *message);
size_t guestfs_int_hivex_value__pack
                     (const GuestfsIntHivexValue   *message,
                      uint8_t             *out);
size_t guestfs_int_hivex_value__pack_to_buffer
                     (const GuestfsIntHivexValue   *message,
                      ProtobufCBuffer     *buffer);
GuestfsIntHivexValue *
       guestfs_int_hivex_value__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_int_hivex_value__free_unpacked
                     (GuestfsIntHivexValue *message,
                      ProtobufCAllocator *allocator);
/* GuestfsIntHivexValueList methods */
void   guestfs_int_hivex_value_list__init
                     (GuestfsIntHivexValueList         *message);
size_t guestfs_int_hivex_value_list__get_packed_size
                     (const GuestfsIntHivexValueList   *message);
size_t guestfs_int_hivex_value_list__pack
                     (const GuestfsIntHivexValueList   *message,
                      uint8_t             *out);
size_t guestfs_int_hivex_value_list__pack_to_buffer
                     (const GuestfsIntHivexValueList   *message,
                      ProtobufCBuffer     *buffer);
GuestfsIntHivexValueList *
       guestfs_int_hivex_value_list__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_int_hivex_value_list__free_unpacked
                     (GuestfsIntHivexValueList *message,
                      ProtobufCAllocator *allocator);
/* GuestfsIntInternalMountable methods */
void   guestfs_int_internal_mountable__init
                     (GuestfsIntInternalMountable         *message);
size_t guestfs_int_internal_mountable__get_packed_size
                     (const GuestfsIntInternalMountable   *message);
size_t guestfs_int_internal_mountable__pack
                     (const GuestfsIntInternalMountable   *message,
                      uint8_t             *out);
size_t guestfs_int_internal_mountable__pack_to_buffer
                     (const GuestfsIntInternalMountable   *message,
                      ProtobufCBuffer     *buffer);
GuestfsIntInternalMountable *
       guestfs_int_internal_mountable__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_int_internal_mountable__free_unpacked
                     (GuestfsIntInternalMountable *message,
                      ProtobufCAllocator *allocator);
/* GuestfsIntInternalMountableList methods */
void   guestfs_int_internal_mountable_list__init
                     (GuestfsIntInternalMountableList         *message);
size_t guestfs_int_internal_mountable_list__get_packed_size
                     (const GuestfsIntInternalMountableList   *message);
size_t guestfs_int_internal_mountable_list__pack
                     (const GuestfsIntInternalMountableList   *message,
                      uint8_t             *out);
size_t guestfs_int_internal_mountable_list__pack_to_buffer
                     (const GuestfsIntInternalMountableList   *message,
                      ProtobufCBuffer     *buffer);
GuestfsIntInternalMountableList *
       guestfs_int_internal_mountable_list__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_int_internal_mountable_list__free_unpacked
                     (GuestfsIntInternalMountableList *message,
                      ProtobufCAllocator *allocator);
/* GuestfsMountArgs methods */
void   guestfs_mount_args__init
                     (GuestfsMountArgs         *message);
size_t guestfs_mount_args__get_packed_size
                     (const GuestfsMountArgs   *message);
size_t guestfs_mount_args__pack
                     (const GuestfsMountArgs   *message,
                      uint8_t             *out);
size_t guestfs_mount_args__pack_to_buffer
                     (const GuestfsMountArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsMountArgs *
       guestfs_mount_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_mount_args__free_unpacked
                     (GuestfsMountArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsTouchArgs methods */
void   guestfs_touch_args__init
                     (GuestfsTouchArgs         *message);
size_t guestfs_touch_args__get_packed_size
                     (const GuestfsTouchArgs   *message);
size_t guestfs_touch_args__pack
                     (const GuestfsTouchArgs   *message,
                      uint8_t             *out);
size_t guestfs_touch_args__pack_to_buffer
                     (const GuestfsTouchArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsTouchArgs *
       guestfs_touch_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_touch_args__free_unpacked
                     (GuestfsTouchArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsLlArgs methods */
void   guestfs_ll_args__init
                     (GuestfsLlArgs         *message);
size_t guestfs_ll_args__get_packed_size
                     (const GuestfsLlArgs   *message);
size_t guestfs_ll_args__pack
                     (const GuestfsLlArgs   *message,
                      uint8_t             *out);
size_t guestfs_ll_args__pack_to_buffer
                     (const GuestfsLlArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsLlArgs *
       guestfs_ll_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_ll_args__free_unpacked
                     (GuestfsLlArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsLlRet methods */
void   guestfs_ll_ret__init
                     (GuestfsLlRet         *message);
size_t guestfs_ll_ret__get_packed_size
                     (const GuestfsLlRet   *message);
size_t guestfs_ll_ret__pack
                     (const GuestfsLlRet   *message,
                      uint8_t             *out);
size_t guestfs_ll_ret__pack_to_buffer
                     (const GuestfsLlRet   *message,
                      ProtobufCBuffer     *buffer);
GuestfsLlRet *
       guestfs_ll_ret__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_ll_ret__free_unpacked
                     (GuestfsLlRet *message,
                      ProtobufCAllocator *allocator);
/* GuestfsListDevicesRet methods */
void   guestfs_list_devices_ret__init
                     (GuestfsListDevicesRet         *message);
size_t guestfs_list_devices_ret__get_packed_size
                     (const GuestfsListDevicesRet   *message);
size_t guestfs_list_devices_ret__pack
                     (const GuestfsListDevicesRet   *message,
                      uint8_t             *out);
size_t guestfs_list_devices_ret__pack_to_buffer
                     (const GuestfsListDevicesRet   *message,
                      ProtobufCBuffer     *buffer);
GuestfsListDevicesRet *
       guestfs_list_devices_ret__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_list_devices_ret__free_unpacked
                     (GuestfsListDevicesRet *message,
                      ProtobufCAllocator *allocator);
/* GuestfsListPartitionsRet methods */
void   guestfs_list_partitions_ret__init
                     (GuestfsListPartitionsRet         *message);
size_t guestfs_list_partitions_ret__get_packed_size
                     (const GuestfsListPartitionsRet   *message);
size_t guestfs_list_partitions_ret__pack
                     (const GuestfsListPartitionsRet   *message,
                      uint8_t             *out);
size_t guestfs_list_partitions_ret__pack_to_buffer
                     (const GuestfsListPartitionsRet   *message,
                      ProtobufCBuffer     *buffer);
GuestfsListPartitionsRet *
       guestfs_list_partitions_ret__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_list_partitions_ret__free_unpacked
                     (GuestfsListPartitionsRet *message,
                      ProtobufCAllocator *allocator);
/* GuestfsPvsRet methods */
void   guestfs_pvs_ret__init
                     (GuestfsPvsRet         *message);
size_t guestfs_pvs_ret__get_packed_size
                     (const GuestfsPvsRet   *message);
size_t guestfs_pvs_ret__pack
                     (const GuestfsPvsRet   *message,
                      uint8_t             *out);
size_t guestfs_pvs_ret__pack_to_buffer
                     (const GuestfsPvsRet   *message,
                      ProtobufCBuffer     *buffer);
GuestfsPvsRet *
       guestfs_pvs_ret__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_pvs_ret__free_unpacked
                     (GuestfsPvsRet *message,
                      ProtobufCAllocator *allocator);
/* GuestfsVgsRet methods */
void   guestfs_vgs_ret__init
                     (GuestfsVgsRet         *message);
size_t guestfs_vgs_ret__get_packed_size
                     (const GuestfsVgsRet   *message);
size_t guestfs_vgs_ret__pack
                     (const GuestfsVgsRet   *message,
                      uint8_t             *out);
size_t guestfs_vgs_ret__pack_to_buffer
                     (const GuestfsVgsRet   *message,
                      ProtobufCBuffer     *buffer);
GuestfsVgsRet *
       guestfs_vgs_ret__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_vgs_ret__free_unpacked
                     (GuestfsVgsRet *message,
                      ProtobufCAllocator *allocator);
/* GuestfsLvsRet methods */
void   guestfs_lvs_ret__init
                     (GuestfsLvsRet         *message);
size_t guestfs_lvs_ret__get_packed_size
                     (const GuestfsLvsRet   *message);
size_t guestfs_lvs_ret__pack
                     (const GuestfsLvsRet   *message,
                      uint8_t             *out);
size_t guestfs_lvs_ret__pack_to_buffer
                     (const GuestfsLvsRet   *message,
                      ProtobufCBuffer     *buffer);
GuestfsLvsRet *
       guestfs_lvs_ret__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_lvs_ret__free_unpacked
                     (GuestfsLvsRet *message,
                      ProtobufCAllocator *allocator);
/* GuestfsPvsFullRet methods */
void   guestfs_pvs_full_ret__init
                     (GuestfsPvsFullRet         *message);
size_t guestfs_pvs_full_ret__get_packed_size
                     (const GuestfsPvsFullRet   *message);
size_t guestfs_pvs_full_ret__pack
                     (const GuestfsPvsFullRet   *message,
                      uint8_t             *out);
size_t guestfs_pvs_full_ret__pack_to_buffer
                     (const GuestfsPvsFullRet   *message,
                      ProtobufCBuffer     *buffer);
GuestfsPvsFullRet *
       guestfs_pvs_full_ret__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_pvs_full_ret__free_unpacked
                     (GuestfsPvsFullRet *message,
                      ProtobufCAllocator *allocator);
/* GuestfsVgsFullRet methods */
void   guestfs_vgs_full_ret__init
                     (GuestfsVgsFullRet         *message);
size_t guestfs_vgs_full_ret__get_packed_size
                     (const GuestfsVgsFullRet   *message);
size_t guestfs_vgs_full_ret__pack
                     (const GuestfsVgsFullRet   *message,
                      uint8_t             *out);
size_t guestfs_vgs_full_ret__pack_to_buffer
                     (const GuestfsVgsFullRet   *message,
                      ProtobufCBuffer     *buffer);
GuestfsVgsFullRet *
       guestfs_vgs_full_ret__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_vgs_full_ret__free_unpacked
                     (GuestfsVgsFullRet *message,
                      ProtobufCAllocator *allocator);
/* GuestfsLvsFullRet methods */
void   guestfs_lvs_full_ret__init
                     (GuestfsLvsFullRet         *message);
size_t guestfs_lvs_full_ret__get_packed_size
                     (const GuestfsLvsFullRet   *message);
size_t guestfs_lvs_full_ret__pack
                     (const GuestfsLvsFullRet   *message,
                      uint8_t             *out);
size_t guestfs_lvs_full_ret__pack_to_buffer
                     (const GuestfsLvsFullRet   *message,
                      ProtobufCBuffer     *buffer);
GuestfsLvsFullRet *
       guestfs_lvs_full_ret__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_lvs_full_ret__free_unpacked
                     (GuestfsLvsFullRet *message,
                      ProtobufCAllocator *allocator);
/* GuestfsAugInitArgs methods */
void   guestfs_aug_init_args__init
                     (GuestfsAugInitArgs         *message);
size_t guestfs_aug_init_args__get_packed_size
                     (const GuestfsAugInitArgs   *message);
size_t guestfs_aug_init_args__pack
                     (const GuestfsAugInitArgs   *message,
                      uint8_t             *out);
size_t guestfs_aug_init_args__pack_to_buffer
                     (const GuestfsAugInitArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsAugInitArgs *
       guestfs_aug_init_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_aug_init_args__free_unpacked
                     (GuestfsAugInitArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsAugDefvarArgs methods */
void   guestfs_aug_defvar_args__init
                     (GuestfsAugDefvarArgs         *message);
size_t guestfs_aug_defvar_args__get_packed_size
                     (const GuestfsAugDefvarArgs   *message);
size_t guestfs_aug_defvar_args__pack
                     (const GuestfsAugDefvarArgs   *message,
                      uint8_t             *out);
size_t guestfs_aug_defvar_args__pack_to_buffer
                     (const GuestfsAugDefvarArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsAugDefvarArgs *
       guestfs_aug_defvar_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_aug_defvar_args__free_unpacked
                     (GuestfsAugDefvarArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsAugDefvarRet methods */
void   guestfs_aug_defvar_ret__init
                     (GuestfsAugDefvarRet         *message);
size_t guestfs_aug_defvar_ret__get_packed_size
                     (const GuestfsAugDefvarRet   *message);
size_t guestfs_aug_defvar_ret__pack
                     (const GuestfsAugDefvarRet   *message,
                      uint8_t             *out);
size_t guestfs_aug_defvar_ret__pack_to_buffer
                     (const GuestfsAugDefvarRet   *message,
                      ProtobufCBuffer     *buffer);
GuestfsAugDefvarRet *
       guestfs_aug_defvar_ret__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_aug_defvar_ret__free_unpacked
                     (GuestfsAugDefvarRet *message,
                      ProtobufCAllocator *allocator);
/* GuestfsAugDefnodeArgs methods */
void   guestfs_aug_defnode_args__init
                     (GuestfsAugDefnodeArgs         *message);
size_t guestfs_aug_defnode_args__get_packed_size
                     (const GuestfsAugDefnodeArgs   *message);
size_t guestfs_aug_defnode_args__pack
                     (const GuestfsAugDefnodeArgs   *message,
                      uint8_t             *out);
size_t guestfs_aug_defnode_args__pack_to_buffer
                     (const GuestfsAugDefnodeArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsAugDefnodeArgs *
       guestfs_aug_defnode_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_aug_defnode_args__free_unpacked
                     (GuestfsAugDefnodeArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsAugDefnodeRet methods */
void   guestfs_aug_defnode_ret__init
                     (GuestfsAugDefnodeRet         *message);
size_t guestfs_aug_defnode_ret__get_packed_size
                     (const GuestfsAugDefnodeRet   *message);
size_t guestfs_aug_defnode_ret__pack
                     (const GuestfsAugDefnodeRet   *message,
                      uint8_t             *out);
size_t guestfs_aug_defnode_ret__pack_to_buffer
                     (const GuestfsAugDefnodeRet   *message,
                      ProtobufCBuffer     *buffer);
GuestfsAugDefnodeRet *
       guestfs_aug_defnode_ret__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_aug_defnode_ret__free_unpacked
                     (GuestfsAugDefnodeRet *message,
                      ProtobufCAllocator *allocator);
/* GuestfsAugGetArgs methods */
void   guestfs_aug_get_args__init
                     (GuestfsAugGetArgs         *message);
size_t guestfs_aug_get_args__get_packed_size
                     (const GuestfsAugGetArgs   *message);
size_t guestfs_aug_get_args__pack
                     (const GuestfsAugGetArgs   *message,
                      uint8_t             *out);
size_t guestfs_aug_get_args__pack_to_buffer
                     (const GuestfsAugGetArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsAugGetArgs *
       guestfs_aug_get_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_aug_get_args__free_unpacked
                     (GuestfsAugGetArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsAugGetRet methods */
void   guestfs_aug_get_ret__init
                     (GuestfsAugGetRet         *message);
size_t guestfs_aug_get_ret__get_packed_size
                     (const GuestfsAugGetRet   *message);
size_t guestfs_aug_get_ret__pack
                     (const GuestfsAugGetRet   *message,
                      uint8_t             *out);
size_t guestfs_aug_get_ret__pack_to_buffer
                     (const GuestfsAugGetRet   *message,
                      ProtobufCBuffer     *buffer);
GuestfsAugGetRet *
       guestfs_aug_get_ret__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_aug_get_ret__free_unpacked
                     (GuestfsAugGetRet *message,
                      ProtobufCAllocator *allocator);
/* GuestfsAugSetArgs methods */
void   guestfs_aug_set_args__init
                     (GuestfsAugSetArgs         *message);
size_t guestfs_aug_set_args__get_packed_size
                     (const GuestfsAugSetArgs   *message);
size_t guestfs_aug_set_args__pack
                     (const GuestfsAugSetArgs   *message,
                      uint8_t             *out);
size_t guestfs_aug_set_args__pack_to_buffer
                     (const GuestfsAugSetArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsAugSetArgs *
       guestfs_aug_set_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_aug_set_args__free_unpacked
                     (GuestfsAugSetArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsAugInsertArgs methods */
void   guestfs_aug_insert_args__init
                     (GuestfsAugInsertArgs         *message);
size_t guestfs_aug_insert_args__get_packed_size
                     (const GuestfsAugInsertArgs   *message);
size_t guestfs_aug_insert_args__pack
                     (const GuestfsAugInsertArgs   *message,
                      uint8_t             *out);
size_t guestfs_aug_insert_args__pack_to_buffer
                     (const GuestfsAugInsertArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsAugInsertArgs *
       guestfs_aug_insert_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_aug_insert_args__free_unpacked
                     (GuestfsAugInsertArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsAugRmArgs methods */
void   guestfs_aug_rm_args__init
                     (GuestfsAugRmArgs         *message);
size_t guestfs_aug_rm_args__get_packed_size
                     (const GuestfsAugRmArgs   *message);
size_t guestfs_aug_rm_args__pack
                     (const GuestfsAugRmArgs   *message,
                      uint8_t             *out);
size_t guestfs_aug_rm_args__pack_to_buffer
                     (const GuestfsAugRmArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsAugRmArgs *
       guestfs_aug_rm_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_aug_rm_args__free_unpacked
                     (GuestfsAugRmArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsAugRmRet methods */
void   guestfs_aug_rm_ret__init
                     (GuestfsAugRmRet         *message);
size_t guestfs_aug_rm_ret__get_packed_size
                     (const GuestfsAugRmRet   *message);
size_t guestfs_aug_rm_ret__pack
                     (const GuestfsAugRmRet   *message,
                      uint8_t             *out);
size_t guestfs_aug_rm_ret__pack_to_buffer
                     (const GuestfsAugRmRet   *message,
                      ProtobufCBuffer     *buffer);
GuestfsAugRmRet *
       guestfs_aug_rm_ret__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_aug_rm_ret__free_unpacked
                     (GuestfsAugRmRet *message,
                      ProtobufCAllocator *allocator);
/* GuestfsAugMvArgs methods */
void   guestfs_aug_mv_args__init
                     (GuestfsAugMvArgs         *message);
size_t guestfs_aug_mv_args__get_packed_size
                     (const GuestfsAugMvArgs   *message);
size_t guestfs_aug_mv_args__pack
                     (const GuestfsAugMvArgs   *message,
                      uint8_t             *out);
size_t guestfs_aug_mv_args__pack_to_buffer
                     (const GuestfsAugMvArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsAugMvArgs *
       guestfs_aug_mv_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_aug_mv_args__free_unpacked
                     (GuestfsAugMvArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsAugMatchArgs methods */
void   guestfs_aug_match_args__init
                     (GuestfsAugMatchArgs         *message);
size_t guestfs_aug_match_args__get_packed_size
                     (const GuestfsAugMatchArgs   *message);
size_t guestfs_aug_match_args__pack
                     (const GuestfsAugMatchArgs   *message,
                      uint8_t             *out);
size_t guestfs_aug_match_args__pack_to_buffer
                     (const GuestfsAugMatchArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsAugMatchArgs *
       guestfs_aug_match_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_aug_match_args__free_unpacked
                     (GuestfsAugMatchArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsAugMatchRet methods */
void   guestfs_aug_match_ret__init
                     (GuestfsAugMatchRet         *message);
size_t guestfs_aug_match_ret__get_packed_size
                     (const GuestfsAugMatchRet   *message);
size_t guestfs_aug_match_ret__pack
                     (const GuestfsAugMatchRet   *message,
                      uint8_t             *out);
size_t guestfs_aug_match_ret__pack_to_buffer
                     (const GuestfsAugMatchRet   *message,
                      ProtobufCBuffer     *buffer);
GuestfsAugMatchRet *
       guestfs_aug_match_ret__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_aug_match_ret__free_unpacked
                     (GuestfsAugMatchRet *message,
                      ProtobufCAllocator *allocator);
/* GuestfsAugLsArgs methods */
void   guestfs_aug_ls_args__init
                     (GuestfsAugLsArgs         *message);
size_t guestfs_aug_ls_args__get_packed_size
                     (const GuestfsAugLsArgs   *message);
size_t guestfs_aug_ls_args__pack
                     (const GuestfsAugLsArgs   *message,
                      uint8_t             *out);
size_t guestfs_aug_ls_args__pack_to_buffer
                     (const GuestfsAugLsArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsAugLsArgs *
       guestfs_aug_ls_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_aug_ls_args__free_unpacked
                     (GuestfsAugLsArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsAugLsRet methods */
void   guestfs_aug_ls_ret__init
                     (GuestfsAugLsRet         *message);
size_t guestfs_aug_ls_ret__get_packed_size
                     (const GuestfsAugLsRet   *message);
size_t guestfs_aug_ls_ret__pack
                     (const GuestfsAugLsRet   *message,
                      uint8_t             *out);
size_t guestfs_aug_ls_ret__pack_to_buffer
                     (const GuestfsAugLsRet   *message,
                      ProtobufCBuffer     *buffer);
GuestfsAugLsRet *
       guestfs_aug_ls_ret__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_aug_ls_ret__free_unpacked
                     (GuestfsAugLsRet *message,
                      ProtobufCAllocator *allocator);
/* GuestfsRmArgs methods */
void   guestfs_rm_args__init
                     (GuestfsRmArgs         *message);
size_t guestfs_rm_args__get_packed_size
                     (const GuestfsRmArgs   *message);
size_t guestfs_rm_args__pack
                     (const GuestfsRmArgs   *message,
                      uint8_t             *out);
size_t guestfs_rm_args__pack_to_buffer
                     (const GuestfsRmArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsRmArgs *
       guestfs_rm_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_rm_args__free_unpacked
                     (GuestfsRmArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsRmdirArgs methods */
void   guestfs_rmdir_args__init
                     (GuestfsRmdirArgs         *message);
size_t guestfs_rmdir_args__get_packed_size
                     (const GuestfsRmdirArgs   *message);
size_t guestfs_rmdir_args__pack
                     (const GuestfsRmdirArgs   *message,
                      uint8_t             *out);
size_t guestfs_rmdir_args__pack_to_buffer
                     (const GuestfsRmdirArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsRmdirArgs *
       guestfs_rmdir_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_rmdir_args__free_unpacked
                     (GuestfsRmdirArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsRmRfArgs methods */
void   guestfs_rm_rf_args__init
                     (GuestfsRmRfArgs         *message);
size_t guestfs_rm_rf_args__get_packed_size
                     (const GuestfsRmRfArgs   *message);
size_t guestfs_rm_rf_args__pack
                     (const GuestfsRmRfArgs   *message,
                      uint8_t             *out);
size_t guestfs_rm_rf_args__pack_to_buffer
                     (const GuestfsRmRfArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsRmRfArgs *
       guestfs_rm_rf_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_rm_rf_args__free_unpacked
                     (GuestfsRmRfArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsMkdirArgs methods */
void   guestfs_mkdir_args__init
                     (GuestfsMkdirArgs         *message);
size_t guestfs_mkdir_args__get_packed_size
                     (const GuestfsMkdirArgs   *message);
size_t guestfs_mkdir_args__pack
                     (const GuestfsMkdirArgs   *message,
                      uint8_t             *out);
size_t guestfs_mkdir_args__pack_to_buffer
                     (const GuestfsMkdirArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsMkdirArgs *
       guestfs_mkdir_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_mkdir_args__free_unpacked
                     (GuestfsMkdirArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsMkdirPpArgs methods */
void   guestfs_mkdir_pp_args__init
                     (GuestfsMkdirPpArgs         *message);
size_t guestfs_mkdir_pp_args__get_packed_size
                     (const GuestfsMkdirPpArgs   *message);
size_t guestfs_mkdir_pp_args__pack
                     (const GuestfsMkdirPpArgs   *message,
                      uint8_t             *out);
size_t guestfs_mkdir_pp_args__pack_to_buffer
                     (const GuestfsMkdirPpArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsMkdirPpArgs *
       guestfs_mkdir_pp_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_mkdir_pp_args__free_unpacked
                     (GuestfsMkdirPpArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsChmodArgs methods */
void   guestfs_chmod_args__init
                     (GuestfsChmodArgs         *message);
size_t guestfs_chmod_args__get_packed_size
                     (const GuestfsChmodArgs   *message);
size_t guestfs_chmod_args__pack
                     (const GuestfsChmodArgs   *message,
                      uint8_t             *out);
size_t guestfs_chmod_args__pack_to_buffer
                     (const GuestfsChmodArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsChmodArgs *
       guestfs_chmod_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_chmod_args__free_unpacked
                     (GuestfsChmodArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsChownArgs methods */
void   guestfs_chown_args__init
                     (GuestfsChownArgs         *message);
size_t guestfs_chown_args__get_packed_size
                     (const GuestfsChownArgs   *message);
size_t guestfs_chown_args__pack
                     (const GuestfsChownArgs   *message,
                      uint8_t             *out);
size_t guestfs_chown_args__pack_to_buffer
                     (const GuestfsChownArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsChownArgs *
       guestfs_chown_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_chown_args__free_unpacked
                     (GuestfsChownArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsExistsArgs methods */
void   guestfs_exists_args__init
                     (GuestfsExistsArgs         *message);
size_t guestfs_exists_args__get_packed_size
                     (const GuestfsExistsArgs   *message);
size_t guestfs_exists_args__pack
                     (const GuestfsExistsArgs   *message,
                      uint8_t             *out);
size_t guestfs_exists_args__pack_to_buffer
                     (const GuestfsExistsArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsExistsArgs *
       guestfs_exists_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_exists_args__free_unpacked
                     (GuestfsExistsArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsExistsRet methods */
void   guestfs_exists_ret__init
                     (GuestfsExistsRet         *message);
size_t guestfs_exists_ret__get_packed_size
                     (const GuestfsExistsRet   *message);
size_t guestfs_exists_ret__pack
                     (const GuestfsExistsRet   *message,
                      uint8_t             *out);
size_t guestfs_exists_ret__pack_to_buffer
                     (const GuestfsExistsRet   *message,
                      ProtobufCBuffer     *buffer);
GuestfsExistsRet *
       guestfs_exists_ret__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_exists_ret__free_unpacked
                     (GuestfsExistsRet *message,
                      ProtobufCAllocator *allocator);
/* GuestfsIsFileArgs methods */
void   guestfs_is_file_args__init
                     (GuestfsIsFileArgs         *message);
size_t guestfs_is_file_args__get_packed_size
                     (const GuestfsIsFileArgs   *message);
size_t guestfs_is_file_args__pack
                     (const GuestfsIsFileArgs   *message,
                      uint8_t             *out);
size_t guestfs_is_file_args__pack_to_buffer
                     (const GuestfsIsFileArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsIsFileArgs *
       guestfs_is_file_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_is_file_args__free_unpacked
                     (GuestfsIsFileArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsIsFileRet methods */
void   guestfs_is_file_ret__init
                     (GuestfsIsFileRet         *message);
size_t guestfs_is_file_ret__get_packed_size
                     (const GuestfsIsFileRet   *message);
size_t guestfs_is_file_ret__pack
                     (const GuestfsIsFileRet   *message,
                      uint8_t             *out);
size_t guestfs_is_file_ret__pack_to_buffer
                     (const GuestfsIsFileRet   *message,
                      ProtobufCBuffer     *buffer);
GuestfsIsFileRet *
       guestfs_is_file_ret__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_is_file_ret__free_unpacked
                     (GuestfsIsFileRet *message,
                      ProtobufCAllocator *allocator);
/* GuestfsIsDirArgs methods */
void   guestfs_is_dir_args__init
                     (GuestfsIsDirArgs         *message);
size_t guestfs_is_dir_args__get_packed_size
                     (const GuestfsIsDirArgs   *message);
size_t guestfs_is_dir_args__pack
                     (const GuestfsIsDirArgs   *message,
                      uint8_t             *out);
size_t guestfs_is_dir_args__pack_to_buffer
                     (const GuestfsIsDirArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsIsDirArgs *
       guestfs_is_dir_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_is_dir_args__free_unpacked
                     (GuestfsIsDirArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsIsDirRet methods */
void   guestfs_is_dir_ret__init
                     (GuestfsIsDirRet         *message);
size_t guestfs_is_dir_ret__get_packed_size
                     (const GuestfsIsDirRet   *message);
size_t guestfs_is_dir_ret__pack
                     (const GuestfsIsDirRet   *message,
                      uint8_t             *out);
size_t guestfs_is_dir_ret__pack_to_buffer
                     (const GuestfsIsDirRet   *message,
                      ProtobufCBuffer     *buffer);
GuestfsIsDirRet *
       guestfs_is_dir_ret__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_is_dir_ret__free_unpacked
                     (GuestfsIsDirRet *message,
                      ProtobufCAllocator *allocator);
/* GuestfsPvcreateArgs methods */
void   guestfs_pvcreate_args__init
                     (GuestfsPvcreateArgs         *message);
size_t guestfs_pvcreate_args__get_packed_size
                     (const GuestfsPvcreateArgs   *message);
size_t guestfs_pvcreate_args__pack
                     (const GuestfsPvcreateArgs   *message,
                      uint8_t             *out);
size_t guestfs_pvcreate_args__pack_to_buffer
                     (const GuestfsPvcreateArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsPvcreateArgs *
       guestfs_pvcreate_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_pvcreate_args__free_unpacked
                     (GuestfsPvcreateArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsVgcreateArgs methods */
void   guestfs_vgcreate_args__init
                     (GuestfsVgcreateArgs         *message);
size_t guestfs_vgcreate_args__get_packed_size
                     (const GuestfsVgcreateArgs   *message);
size_t guestfs_vgcreate_args__pack
                     (const GuestfsVgcreateArgs   *message,
                      uint8_t             *out);
size_t guestfs_vgcreate_args__pack_to_buffer
                     (const GuestfsVgcreateArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsVgcreateArgs *
       guestfs_vgcreate_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_vgcreate_args__free_unpacked
                     (GuestfsVgcreateArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsLvcreateArgs methods */
void   guestfs_lvcreate_args__init
                     (GuestfsLvcreateArgs         *message);
size_t guestfs_lvcreate_args__get_packed_size
                     (const GuestfsLvcreateArgs   *message);
size_t guestfs_lvcreate_args__pack
                     (const GuestfsLvcreateArgs   *message,
                      uint8_t             *out);
size_t guestfs_lvcreate_args__pack_to_buffer
                     (const GuestfsLvcreateArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsLvcreateArgs *
       guestfs_lvcreate_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_lvcreate_args__free_unpacked
                     (GuestfsLvcreateArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsSfdiskArgs methods */
void   guestfs_sfdisk_args__init
                     (GuestfsSfdiskArgs         *message);
size_t guestfs_sfdisk_args__get_packed_size
                     (const GuestfsSfdiskArgs   *message);
size_t guestfs_sfdisk_args__pack
                     (const GuestfsSfdiskArgs   *message,
                      uint8_t             *out);
size_t guestfs_sfdisk_args__pack_to_buffer
                     (const GuestfsSfdiskArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsSfdiskArgs *
       guestfs_sfdisk_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_sfdisk_args__free_unpacked
                     (GuestfsSfdiskArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsWriteFileArgs methods */
void   guestfs_write_file_args__init
                     (GuestfsWriteFileArgs         *message);
size_t guestfs_write_file_args__get_packed_size
                     (const GuestfsWriteFileArgs   *message);
size_t guestfs_write_file_args__pack
                     (const GuestfsWriteFileArgs   *message,
                      uint8_t             *out);
size_t guestfs_write_file_args__pack_to_buffer
                     (const GuestfsWriteFileArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsWriteFileArgs *
       guestfs_write_file_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_write_file_args__free_unpacked
                     (GuestfsWriteFileArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsUmountArgs methods */
void   guestfs_umount_args__init
                     (GuestfsUmountArgs         *message);
size_t guestfs_umount_args__get_packed_size
                     (const GuestfsUmountArgs   *message);
size_t guestfs_umount_args__pack
                     (const GuestfsUmountArgs   *message,
                      uint8_t             *out);
size_t guestfs_umount_args__pack_to_buffer
                     (const GuestfsUmountArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsUmountArgs *
       guestfs_umount_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_umount_args__free_unpacked
                     (GuestfsUmountArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsMountsRet methods */
void   guestfs_mounts_ret__init
                     (GuestfsMountsRet         *message);
size_t guestfs_mounts_ret__get_packed_size
                     (const GuestfsMountsRet   *message);
size_t guestfs_mounts_ret__pack
                     (const GuestfsMountsRet   *message,
                      uint8_t             *out);
size_t guestfs_mounts_ret__pack_to_buffer
                     (const GuestfsMountsRet   *message,
                      ProtobufCBuffer     *buffer);
GuestfsMountsRet *
       guestfs_mounts_ret__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_mounts_ret__free_unpacked
                     (GuestfsMountsRet *message,
                      ProtobufCAllocator *allocator);
/* GuestfsFileArgs methods */
void   guestfs_file_args__init
                     (GuestfsFileArgs         *message);
size_t guestfs_file_args__get_packed_size
                     (const GuestfsFileArgs   *message);
size_t guestfs_file_args__pack
                     (const GuestfsFileArgs   *message,
                      uint8_t             *out);
size_t guestfs_file_args__pack_to_buffer
                     (const GuestfsFileArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsFileArgs *
       guestfs_file_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_file_args__free_unpacked
                     (GuestfsFileArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsFileRet methods */
void   guestfs_file_ret__init
                     (GuestfsFileRet         *message);
size_t guestfs_file_ret__get_packed_size
                     (const GuestfsFileRet   *message);
size_t guestfs_file_ret__pack
                     (const GuestfsFileRet   *message,
                      uint8_t             *out);
size_t guestfs_file_ret__pack_to_buffer
                     (const GuestfsFileRet   *message,
                      ProtobufCBuffer     *buffer);
GuestfsFileRet *
       guestfs_file_ret__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_file_ret__free_unpacked
                     (GuestfsFileRet *message,
                      ProtobufCAllocator *allocator);
/* GuestfsCommandArgs methods */
void   guestfs_command_args__init
                     (GuestfsCommandArgs         *message);
size_t guestfs_command_args__get_packed_size
                     (const GuestfsCommandArgs   *message);
size_t guestfs_command_args__pack
                     (const GuestfsCommandArgs   *message,
                      uint8_t             *out);
size_t guestfs_command_args__pack_to_buffer
                     (const GuestfsCommandArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsCommandArgs *
       guestfs_command_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_command_args__free_unpacked
                     (GuestfsCommandArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsCommandRet methods */
void   guestfs_command_ret__init
                     (GuestfsCommandRet         *message);
size_t guestfs_command_ret__get_packed_size
                     (const GuestfsCommandRet   *message);
size_t guestfs_command_ret__pack
                     (const GuestfsCommandRet   *message,
                      uint8_t             *out);
size_t guestfs_command_ret__pack_to_buffer
                     (const GuestfsCommandRet   *message,
                      ProtobufCBuffer     *buffer);
GuestfsCommandRet *
       guestfs_command_ret__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_command_ret__free_unpacked
                     (GuestfsCommandRet *message,
                      ProtobufCAllocator *allocator);
/* GuestfsCommandLinesArgs methods */
void   guestfs_command_lines_args__init
                     (GuestfsCommandLinesArgs         *message);
size_t guestfs_command_lines_args__get_packed_size
                     (const GuestfsCommandLinesArgs   *message);
size_t guestfs_command_lines_args__pack
                     (const GuestfsCommandLinesArgs   *message,
                      uint8_t             *out);
size_t guestfs_command_lines_args__pack_to_buffer
                     (const GuestfsCommandLinesArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsCommandLinesArgs *
       guestfs_command_lines_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_command_lines_args__free_unpacked
                     (GuestfsCommandLinesArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsCommandLinesRet methods */
void   guestfs_command_lines_ret__init
                     (GuestfsCommandLinesRet         *message);
size_t guestfs_command_lines_ret__get_packed_size
                     (const GuestfsCommandLinesRet   *message);
size_t guestfs_command_lines_ret__pack
                     (const GuestfsCommandLinesRet   *message,
                      uint8_t             *out);
size_t guestfs_command_lines_ret__pack_to_buffer
                     (const GuestfsCommandLinesRet   *message,
                      ProtobufCBuffer     *buffer);
GuestfsCommandLinesRet *
       guestfs_command_lines_ret__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_command_lines_ret__free_unpacked
                     (GuestfsCommandLinesRet *message,
                      ProtobufCAllocator *allocator);
/* GuestfsStatvfsArgs methods */
void   guestfs_statvfs_args__init
                     (GuestfsStatvfsArgs         *message);
size_t guestfs_statvfs_args__get_packed_size
                     (const GuestfsStatvfsArgs   *message);
size_t guestfs_statvfs_args__pack
                     (const GuestfsStatvfsArgs   *message,
                      uint8_t             *out);
size_t guestfs_statvfs_args__pack_to_buffer
                     (const GuestfsStatvfsArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsStatvfsArgs *
       guestfs_statvfs_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_statvfs_args__free_unpacked
                     (GuestfsStatvfsArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsStatvfsRet methods */
void   guestfs_statvfs_ret__init
                     (GuestfsStatvfsRet         *message);
size_t guestfs_statvfs_ret__get_packed_size
                     (const GuestfsStatvfsRet   *message);
size_t guestfs_statvfs_ret__pack
                     (const GuestfsStatvfsRet   *message,
                      uint8_t             *out);
size_t guestfs_statvfs_ret__pack_to_buffer
                     (const GuestfsStatvfsRet   *message,
                      ProtobufCBuffer     *buffer);
GuestfsStatvfsRet *
       guestfs_statvfs_ret__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_statvfs_ret__free_unpacked
                     (GuestfsStatvfsRet *message,
                      ProtobufCAllocator *allocator);
/* GuestfsTune2fslArgs methods */
void   guestfs_tune2fsl_args__init
                     (GuestfsTune2fslArgs         *message);
size_t guestfs_tune2fsl_args__get_packed_size
                     (const GuestfsTune2fslArgs   *message);
size_t guestfs_tune2fsl_args__pack
                     (const GuestfsTune2fslArgs   *message,
                      uint8_t             *out);
size_t guestfs_tune2fsl_args__pack_to_buffer
                     (const GuestfsTune2fslArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsTune2fslArgs *
       guestfs_tune2fsl_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_tune2fsl_args__free_unpacked
                     (GuestfsTune2fslArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsTune2fslRet methods */
void   guestfs_tune2fsl_ret__init
                     (GuestfsTune2fslRet         *message);
size_t guestfs_tune2fsl_ret__get_packed_size
                     (const GuestfsTune2fslRet   *message);
size_t guestfs_tune2fsl_ret__pack
                     (const GuestfsTune2fslRet   *message,
                      uint8_t             *out);
size_t guestfs_tune2fsl_ret__pack_to_buffer
                     (const GuestfsTune2fslRet   *message,
                      ProtobufCBuffer     *buffer);
GuestfsTune2fslRet *
       guestfs_tune2fsl_ret__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_tune2fsl_ret__free_unpacked
                     (GuestfsTune2fslRet *message,
                      ProtobufCAllocator *allocator);
/* GuestfsBlockdevSetroArgs methods */
void   guestfs_blockdev_setro_args__init
                     (GuestfsBlockdevSetroArgs         *message);
size_t guestfs_blockdev_setro_args__get_packed_size
                     (const GuestfsBlockdevSetroArgs   *message);
size_t guestfs_blockdev_setro_args__pack
                     (const GuestfsBlockdevSetroArgs   *message,
                      uint8_t             *out);
size_t guestfs_blockdev_setro_args__pack_to_buffer
                     (const GuestfsBlockdevSetroArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsBlockdevSetroArgs *
       guestfs_blockdev_setro_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_blockdev_setro_args__free_unpacked
                     (GuestfsBlockdevSetroArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsBlockdevSetrwArgs methods */
void   guestfs_blockdev_setrw_args__init
                     (GuestfsBlockdevSetrwArgs         *message);
size_t guestfs_blockdev_setrw_args__get_packed_size
                     (const GuestfsBlockdevSetrwArgs   *message);
size_t guestfs_blockdev_setrw_args__pack
                     (const GuestfsBlockdevSetrwArgs   *message,
                      uint8_t             *out);
size_t guestfs_blockdev_setrw_args__pack_to_buffer
                     (const GuestfsBlockdevSetrwArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsBlockdevSetrwArgs *
       guestfs_blockdev_setrw_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_blockdev_setrw_args__free_unpacked
                     (GuestfsBlockdevSetrwArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsBlockdevGetroArgs methods */
void   guestfs_blockdev_getro_args__init
                     (GuestfsBlockdevGetroArgs         *message);
size_t guestfs_blockdev_getro_args__get_packed_size
                     (const GuestfsBlockdevGetroArgs   *message);
size_t guestfs_blockdev_getro_args__pack
                     (const GuestfsBlockdevGetroArgs   *message,
                      uint8_t             *out);
size_t guestfs_blockdev_getro_args__pack_to_buffer
                     (const GuestfsBlockdevGetroArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsBlockdevGetroArgs *
       guestfs_blockdev_getro_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_blockdev_getro_args__free_unpacked
                     (GuestfsBlockdevGetroArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsBlockdevGetroRet methods */
void   guestfs_blockdev_getro_ret__init
                     (GuestfsBlockdevGetroRet         *message);
size_t guestfs_blockdev_getro_ret__get_packed_size
                     (const GuestfsBlockdevGetroRet   *message);
size_t guestfs_blockdev_getro_ret__pack
                     (const GuestfsBlockdevGetroRet   *message,
                      uint8_t             *out);
size_t guestfs_blockdev_getro_ret__pack_to_buffer
                     (const GuestfsBlockdevGetroRet   *message,
                      ProtobufCBuffer     *buffer);
GuestfsBlockdevGetroRet *
       guestfs_blockdev_getro_ret__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_blockdev_getro_ret__free_unpacked
                     (GuestfsBlockdevGetroRet *message,
                      ProtobufCAllocator *allocator);
/* GuestfsBlockdevGetssArgs methods */
void   guestfs_blockdev_getss_args__init
                     (GuestfsBlockdevGetssArgs         *message);
size_t guestfs_blockdev_getss_args__get_packed_size
                     (const GuestfsBlockdevGetssArgs   *message);
size_t guestfs_blockdev_getss_args__pack
                     (const GuestfsBlockdevGetssArgs   *message,
                      uint8_t             *out);
size_t guestfs_blockdev_getss_args__pack_to_buffer
                     (const GuestfsBlockdevGetssArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsBlockdevGetssArgs *
       guestfs_blockdev_getss_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_blockdev_getss_args__free_unpacked
                     (GuestfsBlockdevGetssArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsBlockdevGetssRet methods */
void   guestfs_blockdev_getss_ret__init
                     (GuestfsBlockdevGetssRet         *message);
size_t guestfs_blockdev_getss_ret__get_packed_size
                     (const GuestfsBlockdevGetssRet   *message);
size_t guestfs_blockdev_getss_ret__pack
                     (const GuestfsBlockdevGetssRet   *message,
                      uint8_t             *out);
size_t guestfs_blockdev_getss_ret__pack_to_buffer
                     (const GuestfsBlockdevGetssRet   *message,
                      ProtobufCBuffer     *buffer);
GuestfsBlockdevGetssRet *
       guestfs_blockdev_getss_ret__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_blockdev_getss_ret__free_unpacked
                     (GuestfsBlockdevGetssRet *message,
                      ProtobufCAllocator *allocator);
/* GuestfsBlockdevGetbszArgs methods */
void   guestfs_blockdev_getbsz_args__init
                     (GuestfsBlockdevGetbszArgs         *message);
size_t guestfs_blockdev_getbsz_args__get_packed_size
                     (const GuestfsBlockdevGetbszArgs   *message);
size_t guestfs_blockdev_getbsz_args__pack
                     (const GuestfsBlockdevGetbszArgs   *message,
                      uint8_t             *out);
size_t guestfs_blockdev_getbsz_args__pack_to_buffer
                     (const GuestfsBlockdevGetbszArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsBlockdevGetbszArgs *
       guestfs_blockdev_getbsz_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_blockdev_getbsz_args__free_unpacked
                     (GuestfsBlockdevGetbszArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsBlockdevGetbszRet methods */
void   guestfs_blockdev_getbsz_ret__init
                     (GuestfsBlockdevGetbszRet         *message);
size_t guestfs_blockdev_getbsz_ret__get_packed_size
                     (const GuestfsBlockdevGetbszRet   *message);
size_t guestfs_blockdev_getbsz_ret__pack
                     (const GuestfsBlockdevGetbszRet   *message,
                      uint8_t             *out);
size_t guestfs_blockdev_getbsz_ret__pack_to_buffer
                     (const GuestfsBlockdevGetbszRet   *message,
                      ProtobufCBuffer     *buffer);
GuestfsBlockdevGetbszRet *
       guestfs_blockdev_getbsz_ret__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_blockdev_getbsz_ret__free_unpacked
                     (GuestfsBlockdevGetbszRet *message,
                      ProtobufCAllocator *allocator);
/* GuestfsBlockdevSetbszArgs methods */
void   guestfs_blockdev_setbsz_args__init
                     (GuestfsBlockdevSetbszArgs         *message);
size_t guestfs_blockdev_setbsz_args__get_packed_size
                     (const GuestfsBlockdevSetbszArgs   *message);
size_t guestfs_blockdev_setbsz_args__pack
                     (const GuestfsBlockdevSetbszArgs   *message,
                      uint8_t             *out);
size_t guestfs_blockdev_setbsz_args__pack_to_buffer
                     (const GuestfsBlockdevSetbszArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsBlockdevSetbszArgs *
       guestfs_blockdev_setbsz_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_blockdev_setbsz_args__free_unpacked
                     (GuestfsBlockdevSetbszArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsBlockdevGetszArgs methods */
void   guestfs_blockdev_getsz_args__init
                     (GuestfsBlockdevGetszArgs         *message);
size_t guestfs_blockdev_getsz_args__get_packed_size
                     (const GuestfsBlockdevGetszArgs   *message);
size_t guestfs_blockdev_getsz_args__pack
                     (const GuestfsBlockdevGetszArgs   *message,
                      uint8_t             *out);
size_t guestfs_blockdev_getsz_args__pack_to_buffer
                     (const GuestfsBlockdevGetszArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsBlockdevGetszArgs *
       guestfs_blockdev_getsz_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_blockdev_getsz_args__free_unpacked
                     (GuestfsBlockdevGetszArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsBlockdevGetszRet methods */
void   guestfs_blockdev_getsz_ret__init
                     (GuestfsBlockdevGetszRet         *message);
size_t guestfs_blockdev_getsz_ret__get_packed_size
                     (const GuestfsBlockdevGetszRet   *message);
size_t guestfs_blockdev_getsz_ret__pack
                     (const GuestfsBlockdevGetszRet   *message,
                      uint8_t             *out);
size_t guestfs_blockdev_getsz_ret__pack_to_buffer
                     (const GuestfsBlockdevGetszRet   *message,
                      ProtobufCBuffer     *buffer);
GuestfsBlockdevGetszRet *
       guestfs_blockdev_getsz_ret__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_blockdev_getsz_ret__free_unpacked
                     (GuestfsBlockdevGetszRet *message,
                      ProtobufCAllocator *allocator);
/* GuestfsBlockdevGetsize64Args methods */
void   guestfs_blockdev_getsize64_args__init
                     (GuestfsBlockdevGetsize64Args         *message);
size_t guestfs_blockdev_getsize64_args__get_packed_size
                     (const GuestfsBlockdevGetsize64Args   *message);
size_t guestfs_blockdev_getsize64_args__pack
                     (const GuestfsBlockdevGetsize64Args   *message,
                      uint8_t             *out);
size_t guestfs_blockdev_getsize64_args__pack_to_buffer
                     (const GuestfsBlockdevGetsize64Args   *message,
                      ProtobufCBuffer     *buffer);
GuestfsBlockdevGetsize64Args *
       guestfs_blockdev_getsize64_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_blockdev_getsize64_args__free_unpacked
                     (GuestfsBlockdevGetsize64Args *message,
                      ProtobufCAllocator *allocator);
/* GuestfsBlockdevGetsize64Ret methods */
void   guestfs_blockdev_getsize64_ret__init
                     (GuestfsBlockdevGetsize64Ret         *message);
size_t guestfs_blockdev_getsize64_ret__get_packed_size
                     (const GuestfsBlockdevGetsize64Ret   *message);
size_t guestfs_blockdev_getsize64_ret__pack
                     (const GuestfsBlockdevGetsize64Ret   *message,
                      uint8_t             *out);
size_t guestfs_blockdev_getsize64_ret__pack_to_buffer
                     (const GuestfsBlockdevGetsize64Ret   *message,
                      ProtobufCBuffer     *buffer);
GuestfsBlockdevGetsize64Ret *
       guestfs_blockdev_getsize64_ret__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_blockdev_getsize64_ret__free_unpacked
                     (GuestfsBlockdevGetsize64Ret *message,
                      ProtobufCAllocator *allocator);
/* GuestfsBlockdevFlushbufsArgs methods */
void   guestfs_blockdev_flushbufs_args__init
                     (GuestfsBlockdevFlushbufsArgs         *message);
size_t guestfs_blockdev_flushbufs_args__get_packed_size
                     (const GuestfsBlockdevFlushbufsArgs   *message);
size_t guestfs_blockdev_flushbufs_args__pack
                     (const GuestfsBlockdevFlushbufsArgs   *message,
                      uint8_t             *out);
size_t guestfs_blockdev_flushbufs_args__pack_to_buffer
                     (const GuestfsBlockdevFlushbufsArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsBlockdevFlushbufsArgs *
       guestfs_blockdev_flushbufs_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_blockdev_flushbufs_args__free_unpacked
                     (GuestfsBlockdevFlushbufsArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsBlockdevRereadptArgs methods */
void   guestfs_blockdev_rereadpt_args__init
                     (GuestfsBlockdevRereadptArgs         *message);
size_t guestfs_blockdev_rereadpt_args__get_packed_size
                     (const GuestfsBlockdevRereadptArgs   *message);
size_t guestfs_blockdev_rereadpt_args__pack
                     (const GuestfsBlockdevRereadptArgs   *message,
                      uint8_t             *out);
size_t guestfs_blockdev_rereadpt_args__pack_to_buffer
                     (const GuestfsBlockdevRereadptArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsBlockdevRereadptArgs *
       guestfs_blockdev_rereadpt_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_blockdev_rereadpt_args__free_unpacked
                     (GuestfsBlockdevRereadptArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsUploadArgs methods */
void   guestfs_upload_args__init
                     (GuestfsUploadArgs         *message);
size_t guestfs_upload_args__get_packed_size
                     (const GuestfsUploadArgs   *message);
size_t guestfs_upload_args__pack
                     (const GuestfsUploadArgs   *message,
                      uint8_t             *out);
size_t guestfs_upload_args__pack_to_buffer
                     (const GuestfsUploadArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsUploadArgs *
       guestfs_upload_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_upload_args__free_unpacked
                     (GuestfsUploadArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsDownloadArgs methods */
void   guestfs_download_args__init
                     (GuestfsDownloadArgs         *message);
size_t guestfs_download_args__get_packed_size
                     (const GuestfsDownloadArgs   *message);
size_t guestfs_download_args__pack
                     (const GuestfsDownloadArgs   *message,
                      uint8_t             *out);
size_t guestfs_download_args__pack_to_buffer
                     (const GuestfsDownloadArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsDownloadArgs *
       guestfs_download_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_download_args__free_unpacked
                     (GuestfsDownloadArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsChecksumArgs methods */
void   guestfs_checksum_args__init
                     (GuestfsChecksumArgs         *message);
size_t guestfs_checksum_args__get_packed_size
                     (const GuestfsChecksumArgs   *message);
size_t guestfs_checksum_args__pack
                     (const GuestfsChecksumArgs   *message,
                      uint8_t             *out);
size_t guestfs_checksum_args__pack_to_buffer
                     (const GuestfsChecksumArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsChecksumArgs *
       guestfs_checksum_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_checksum_args__free_unpacked
                     (GuestfsChecksumArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsChecksumRet methods */
void   guestfs_checksum_ret__init
                     (GuestfsChecksumRet         *message);
size_t guestfs_checksum_ret__get_packed_size
                     (const GuestfsChecksumRet   *message);
size_t guestfs_checksum_ret__pack
                     (const GuestfsChecksumRet   *message,
                      uint8_t             *out);
size_t guestfs_checksum_ret__pack_to_buffer
                     (const GuestfsChecksumRet   *message,
                      ProtobufCBuffer     *buffer);
GuestfsChecksumRet *
       guestfs_checksum_ret__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_checksum_ret__free_unpacked
                     (GuestfsChecksumRet *message,
                      ProtobufCAllocator *allocator);
/* GuestfsTarInArgs methods */
void   guestfs_tar_in_args__init
                     (GuestfsTarInArgs         *message);
size_t guestfs_tar_in_args__get_packed_size
                     (const GuestfsTarInArgs   *message);
size_t guestfs_tar_in_args__pack
                     (const GuestfsTarInArgs   *message,
                      uint8_t             *out);
size_t guestfs_tar_in_args__pack_to_buffer
                     (const GuestfsTarInArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsTarInArgs *
       guestfs_tar_in_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_tar_in_args__free_unpacked
                     (GuestfsTarInArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsTarOutArgs methods */
void   guestfs_tar_out_args__init
                     (GuestfsTarOutArgs         *message);
size_t guestfs_tar_out_args__get_packed_size
                     (const GuestfsTarOutArgs   *message);
size_t guestfs_tar_out_args__pack
                     (const GuestfsTarOutArgs   *message,
                      uint8_t             *out);
size_t guestfs_tar_out_args__pack_to_buffer
                     (const GuestfsTarOutArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsTarOutArgs *
       guestfs_tar_out_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_tar_out_args__free_unpacked
                     (GuestfsTarOutArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsTgzInArgs methods */
void   guestfs_tgz_in_args__init
                     (GuestfsTgzInArgs         *message);
size_t guestfs_tgz_in_args__get_packed_size
                     (const GuestfsTgzInArgs   *message);
size_t guestfs_tgz_in_args__pack
                     (const GuestfsTgzInArgs   *message,
                      uint8_t             *out);
size_t guestfs_tgz_in_args__pack_to_buffer
                     (const GuestfsTgzInArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsTgzInArgs *
       guestfs_tgz_in_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_tgz_in_args__free_unpacked
                     (GuestfsTgzInArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsTgzOutArgs methods */
void   guestfs_tgz_out_args__init
                     (GuestfsTgzOutArgs         *message);
size_t guestfs_tgz_out_args__get_packed_size
                     (const GuestfsTgzOutArgs   *message);
size_t guestfs_tgz_out_args__pack
                     (const GuestfsTgzOutArgs   *message,
                      uint8_t             *out);
size_t guestfs_tgz_out_args__pack_to_buffer
                     (const GuestfsTgzOutArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsTgzOutArgs *
       guestfs_tgz_out_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_tgz_out_args__free_unpacked
                     (GuestfsTgzOutArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsMountRoArgs methods */
void   guestfs_mount_ro_args__init
                     (GuestfsMountRoArgs         *message);
size_t guestfs_mount_ro_args__get_packed_size
                     (const GuestfsMountRoArgs   *message);
size_t guestfs_mount_ro_args__pack
                     (const GuestfsMountRoArgs   *message,
                      uint8_t             *out);
size_t guestfs_mount_ro_args__pack_to_buffer
                     (const GuestfsMountRoArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsMountRoArgs *
       guestfs_mount_ro_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_mount_ro_args__free_unpacked
                     (GuestfsMountRoArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsMountOptionsArgs methods */
void   guestfs_mount_options_args__init
                     (GuestfsMountOptionsArgs         *message);
size_t guestfs_mount_options_args__get_packed_size
                     (const GuestfsMountOptionsArgs   *message);
size_t guestfs_mount_options_args__pack
                     (const GuestfsMountOptionsArgs   *message,
                      uint8_t             *out);
size_t guestfs_mount_options_args__pack_to_buffer
                     (const GuestfsMountOptionsArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsMountOptionsArgs *
       guestfs_mount_options_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_mount_options_args__free_unpacked
                     (GuestfsMountOptionsArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsMountVfsArgs methods */
void   guestfs_mount_vfs_args__init
                     (GuestfsMountVfsArgs         *message);
size_t guestfs_mount_vfs_args__get_packed_size
                     (const GuestfsMountVfsArgs   *message);
size_t guestfs_mount_vfs_args__pack
                     (const GuestfsMountVfsArgs   *message,
                      uint8_t             *out);
size_t guestfs_mount_vfs_args__pack_to_buffer
                     (const GuestfsMountVfsArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsMountVfsArgs *
       guestfs_mount_vfs_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_mount_vfs_args__free_unpacked
                     (GuestfsMountVfsArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsDebugArgs methods */
void   guestfs_debug_args__init
                     (GuestfsDebugArgs         *message);
size_t guestfs_debug_args__get_packed_size
                     (const GuestfsDebugArgs   *message);
size_t guestfs_debug_args__pack
                     (const GuestfsDebugArgs   *message,
                      uint8_t             *out);
size_t guestfs_debug_args__pack_to_buffer
                     (const GuestfsDebugArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsDebugArgs *
       guestfs_debug_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_debug_args__free_unpacked
                     (GuestfsDebugArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsDebugRet methods */
void   guestfs_debug_ret__init
                     (GuestfsDebugRet         *message);
size_t guestfs_debug_ret__get_packed_size
                     (const GuestfsDebugRet   *message);
size_t guestfs_debug_ret__pack
                     (const GuestfsDebugRet   *message,
                      uint8_t             *out);
size_t guestfs_debug_ret__pack_to_buffer
                     (const GuestfsDebugRet   *message,
                      ProtobufCBuffer     *buffer);
GuestfsDebugRet *
       guestfs_debug_ret__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_debug_ret__free_unpacked
                     (GuestfsDebugRet *message,
                      ProtobufCAllocator *allocator);
/* GuestfsLvremoveArgs methods */
void   guestfs_lvremove_args__init
                     (GuestfsLvremoveArgs         *message);
size_t guestfs_lvremove_args__get_packed_size
                     (const GuestfsLvremoveArgs   *message);
size_t guestfs_lvremove_args__pack
                     (const GuestfsLvremoveArgs   *message,
                      uint8_t             *out);
size_t guestfs_lvremove_args__pack_to_buffer
                     (const GuestfsLvremoveArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsLvremoveArgs *
       guestfs_lvremove_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_lvremove_args__free_unpacked
                     (GuestfsLvremoveArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsVgremoveArgs methods */
void   guestfs_vgremove_args__init
                     (GuestfsVgremoveArgs         *message);
size_t guestfs_vgremove_args__get_packed_size
                     (const GuestfsVgremoveArgs   *message);
size_t guestfs_vgremove_args__pack
                     (const GuestfsVgremoveArgs   *message,
                      uint8_t             *out);
size_t guestfs_vgremove_args__pack_to_buffer
                     (const GuestfsVgremoveArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsVgremoveArgs *
       guestfs_vgremove_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_vgremove_args__free_unpacked
                     (GuestfsVgremoveArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsPvremoveArgs methods */
void   guestfs_pvremove_args__init
                     (GuestfsPvremoveArgs         *message);
size_t guestfs_pvremove_args__get_packed_size
                     (const GuestfsPvremoveArgs   *message);
size_t guestfs_pvremove_args__pack
                     (const GuestfsPvremoveArgs   *message,
                      uint8_t             *out);
size_t guestfs_pvremove_args__pack_to_buffer
                     (const GuestfsPvremoveArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsPvremoveArgs *
       guestfs_pvremove_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_pvremove_args__free_unpacked
                     (GuestfsPvremoveArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsSetE2labelArgs methods */
void   guestfs_set_e2label_args__init
                     (GuestfsSetE2labelArgs         *message);
size_t guestfs_set_e2label_args__get_packed_size
                     (const GuestfsSetE2labelArgs   *message);
size_t guestfs_set_e2label_args__pack
                     (const GuestfsSetE2labelArgs   *message,
                      uint8_t             *out);
size_t guestfs_set_e2label_args__pack_to_buffer
                     (const GuestfsSetE2labelArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsSetE2labelArgs *
       guestfs_set_e2label_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_set_e2label_args__free_unpacked
                     (GuestfsSetE2labelArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsGetE2labelArgs methods */
void   guestfs_get_e2label_args__init
                     (GuestfsGetE2labelArgs         *message);
size_t guestfs_get_e2label_args__get_packed_size
                     (const GuestfsGetE2labelArgs   *message);
size_t guestfs_get_e2label_args__pack
                     (const GuestfsGetE2labelArgs   *message,
                      uint8_t             *out);
size_t guestfs_get_e2label_args__pack_to_buffer
                     (const GuestfsGetE2labelArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsGetE2labelArgs *
       guestfs_get_e2label_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_get_e2label_args__free_unpacked
                     (GuestfsGetE2labelArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsGetE2labelRet methods */
void   guestfs_get_e2label_ret__init
                     (GuestfsGetE2labelRet         *message);
size_t guestfs_get_e2label_ret__get_packed_size
                     (const GuestfsGetE2labelRet   *message);
size_t guestfs_get_e2label_ret__pack
                     (const GuestfsGetE2labelRet   *message,
                      uint8_t             *out);
size_t guestfs_get_e2label_ret__pack_to_buffer
                     (const GuestfsGetE2labelRet   *message,
                      ProtobufCBuffer     *buffer);
GuestfsGetE2labelRet *
       guestfs_get_e2label_ret__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_get_e2label_ret__free_unpacked
                     (GuestfsGetE2labelRet *message,
                      ProtobufCAllocator *allocator);
/* GuestfsSetE2uuidArgs methods */
void   guestfs_set_e2uuid_args__init
                     (GuestfsSetE2uuidArgs         *message);
size_t guestfs_set_e2uuid_args__get_packed_size
                     (const GuestfsSetE2uuidArgs   *message);
size_t guestfs_set_e2uuid_args__pack
                     (const GuestfsSetE2uuidArgs   *message,
                      uint8_t             *out);
size_t guestfs_set_e2uuid_args__pack_to_buffer
                     (const GuestfsSetE2uuidArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsSetE2uuidArgs *
       guestfs_set_e2uuid_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_set_e2uuid_args__free_unpacked
                     (GuestfsSetE2uuidArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsGetE2uuidArgs methods */
void   guestfs_get_e2uuid_args__init
                     (GuestfsGetE2uuidArgs         *message);
size_t guestfs_get_e2uuid_args__get_packed_size
                     (const GuestfsGetE2uuidArgs   *message);
size_t guestfs_get_e2uuid_args__pack
                     (const GuestfsGetE2uuidArgs   *message,
                      uint8_t             *out);
size_t guestfs_get_e2uuid_args__pack_to_buffer
                     (const GuestfsGetE2uuidArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsGetE2uuidArgs *
       guestfs_get_e2uuid_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_get_e2uuid_args__free_unpacked
                     (GuestfsGetE2uuidArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsGetE2uuidRet methods */
void   guestfs_get_e2uuid_ret__init
                     (GuestfsGetE2uuidRet         *message);
size_t guestfs_get_e2uuid_ret__get_packed_size
                     (const GuestfsGetE2uuidRet   *message);
size_t guestfs_get_e2uuid_ret__pack
                     (const GuestfsGetE2uuidRet   *message,
                      uint8_t             *out);
size_t guestfs_get_e2uuid_ret__pack_to_buffer
                     (const GuestfsGetE2uuidRet   *message,
                      ProtobufCBuffer     *buffer);
GuestfsGetE2uuidRet *
       guestfs_get_e2uuid_ret__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_get_e2uuid_ret__free_unpacked
                     (GuestfsGetE2uuidRet *message,
                      ProtobufCAllocator *allocator);
/* GuestfsFsckArgs methods */
void   guestfs_fsck_args__init
                     (GuestfsFsckArgs         *message);
size_t guestfs_fsck_args__get_packed_size
                     (const GuestfsFsckArgs   *message);
size_t guestfs_fsck_args__pack
                     (const GuestfsFsckArgs   *message,
                      uint8_t             *out);
size_t guestfs_fsck_args__pack_to_buffer
                     (const GuestfsFsckArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsFsckArgs *
       guestfs_fsck_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_fsck_args__free_unpacked
                     (GuestfsFsckArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsFsckRet methods */
void   guestfs_fsck_ret__init
                     (GuestfsFsckRet         *message);
size_t guestfs_fsck_ret__get_packed_size
                     (const GuestfsFsckRet   *message);
size_t guestfs_fsck_ret__pack
                     (const GuestfsFsckRet   *message,
                      uint8_t             *out);
size_t guestfs_fsck_ret__pack_to_buffer
                     (const GuestfsFsckRet   *message,
                      ProtobufCBuffer     *buffer);
GuestfsFsckRet *
       guestfs_fsck_ret__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_fsck_ret__free_unpacked
                     (GuestfsFsckRet *message,
                      ProtobufCAllocator *allocator);
/* GuestfsZeroArgs methods */
void   guestfs_zero_args__init
                     (GuestfsZeroArgs         *message);
size_t guestfs_zero_args__get_packed_size
                     (const GuestfsZeroArgs   *message);
size_t guestfs_zero_args__pack
                     (const GuestfsZeroArgs   *message,
                      uint8_t             *out);
size_t guestfs_zero_args__pack_to_buffer
                     (const GuestfsZeroArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsZeroArgs *
       guestfs_zero_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_zero_args__free_unpacked
                     (GuestfsZeroArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsGrubInstallArgs methods */
void   guestfs_grub_install_args__init
                     (GuestfsGrubInstallArgs         *message);
size_t guestfs_grub_install_args__get_packed_size
                     (const GuestfsGrubInstallArgs   *message);
size_t guestfs_grub_install_args__pack
                     (const GuestfsGrubInstallArgs   *message,
                      uint8_t             *out);
size_t guestfs_grub_install_args__pack_to_buffer
                     (const GuestfsGrubInstallArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsGrubInstallArgs *
       guestfs_grub_install_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_grub_install_args__free_unpacked
                     (GuestfsGrubInstallArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsCpArgs methods */
void   guestfs_cp_args__init
                     (GuestfsCpArgs         *message);
size_t guestfs_cp_args__get_packed_size
                     (const GuestfsCpArgs   *message);
size_t guestfs_cp_args__pack
                     (const GuestfsCpArgs   *message,
                      uint8_t             *out);
size_t guestfs_cp_args__pack_to_buffer
                     (const GuestfsCpArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsCpArgs *
       guestfs_cp_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_cp_args__free_unpacked
                     (GuestfsCpArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsCpAaArgs methods */
void   guestfs_cp_aa_args__init
                     (GuestfsCpAaArgs         *message);
size_t guestfs_cp_aa_args__get_packed_size
                     (const GuestfsCpAaArgs   *message);
size_t guestfs_cp_aa_args__pack
                     (const GuestfsCpAaArgs   *message,
                      uint8_t             *out);
size_t guestfs_cp_aa_args__pack_to_buffer
                     (const GuestfsCpAaArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsCpAaArgs *
       guestfs_cp_aa_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_cp_aa_args__free_unpacked
                     (GuestfsCpAaArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsMvArgs methods */
void   guestfs_mv_args__init
                     (GuestfsMvArgs         *message);
size_t guestfs_mv_args__get_packed_size
                     (const GuestfsMvArgs   *message);
size_t guestfs_mv_args__pack
                     (const GuestfsMvArgs   *message,
                      uint8_t             *out);
size_t guestfs_mv_args__pack_to_buffer
                     (const GuestfsMvArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsMvArgs *
       guestfs_mv_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_mv_args__free_unpacked
                     (GuestfsMvArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsDropCachesArgs methods */
void   guestfs_drop_caches_args__init
                     (GuestfsDropCachesArgs         *message);
size_t guestfs_drop_caches_args__get_packed_size
                     (const GuestfsDropCachesArgs   *message);
size_t guestfs_drop_caches_args__pack
                     (const GuestfsDropCachesArgs   *message,
                      uint8_t             *out);
size_t guestfs_drop_caches_args__pack_to_buffer
                     (const GuestfsDropCachesArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsDropCachesArgs *
       guestfs_drop_caches_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_drop_caches_args__free_unpacked
                     (GuestfsDropCachesArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsDmesgRet methods */
void   guestfs_dmesg_ret__init
                     (GuestfsDmesgRet         *message);
size_t guestfs_dmesg_ret__get_packed_size
                     (const GuestfsDmesgRet   *message);
size_t guestfs_dmesg_ret__pack
                     (const GuestfsDmesgRet   *message,
                      uint8_t             *out);
size_t guestfs_dmesg_ret__pack_to_buffer
                     (const GuestfsDmesgRet   *message,
                      ProtobufCBuffer     *buffer);
GuestfsDmesgRet *
       guestfs_dmesg_ret__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_dmesg_ret__free_unpacked
                     (GuestfsDmesgRet *message,
                      ProtobufCAllocator *allocator);
/* GuestfsEqualArgs methods */
void   guestfs_equal_args__init
                     (GuestfsEqualArgs         *message);
size_t guestfs_equal_args__get_packed_size
                     (const GuestfsEqualArgs   *message);
size_t guestfs_equal_args__pack
                     (const GuestfsEqualArgs   *message,
                      uint8_t             *out);
size_t guestfs_equal_args__pack_to_buffer
                     (const GuestfsEqualArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsEqualArgs *
       guestfs_equal_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_equal_args__free_unpacked
                     (GuestfsEqualArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsEqualRet methods */
void   guestfs_equal_ret__init
                     (GuestfsEqualRet         *message);
size_t guestfs_equal_ret__get_packed_size
                     (const GuestfsEqualRet   *message);
size_t guestfs_equal_ret__pack
                     (const GuestfsEqualRet   *message,
                      uint8_t             *out);
size_t guestfs_equal_ret__pack_to_buffer
                     (const GuestfsEqualRet   *message,
                      ProtobufCBuffer     *buffer);
GuestfsEqualRet *
       guestfs_equal_ret__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_equal_ret__free_unpacked
                     (GuestfsEqualRet *message,
                      ProtobufCAllocator *allocator);
/* GuestfsStringsArgs methods */
void   guestfs_strings_args__init
                     (GuestfsStringsArgs         *message);
size_t guestfs_strings_args__get_packed_size
                     (const GuestfsStringsArgs   *message);
size_t guestfs_strings_args__pack
                     (const GuestfsStringsArgs   *message,
                      uint8_t             *out);
size_t guestfs_strings_args__pack_to_buffer
                     (const GuestfsStringsArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsStringsArgs *
       guestfs_strings_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_strings_args__free_unpacked
                     (GuestfsStringsArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsStringsRet methods */
void   guestfs_strings_ret__init
                     (GuestfsStringsRet         *message);
size_t guestfs_strings_ret__get_packed_size
                     (const GuestfsStringsRet   *message);
size_t guestfs_strings_ret__pack
                     (const GuestfsStringsRet   *message,
                      uint8_t             *out);
size_t guestfs_strings_ret__pack_to_buffer
                     (const GuestfsStringsRet   *message,
                      ProtobufCBuffer     *buffer);
GuestfsStringsRet *
       guestfs_strings_ret__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_strings_ret__free_unpacked
                     (GuestfsStringsRet *message,
                      ProtobufCAllocator *allocator);
/* GuestfsStringsEeArgs methods */
void   guestfs_strings_ee_args__init
                     (GuestfsStringsEeArgs         *message);
size_t guestfs_strings_ee_args__get_packed_size
                     (const GuestfsStringsEeArgs   *message);
size_t guestfs_strings_ee_args__pack
                     (const GuestfsStringsEeArgs   *message,
                      uint8_t             *out);
size_t guestfs_strings_ee_args__pack_to_buffer
                     (const GuestfsStringsEeArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsStringsEeArgs *
       guestfs_strings_ee_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_strings_ee_args__free_unpacked
                     (GuestfsStringsEeArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsStringsEeRet methods */
void   guestfs_strings_ee_ret__init
                     (GuestfsStringsEeRet         *message);
size_t guestfs_strings_ee_ret__get_packed_size
                     (const GuestfsStringsEeRet   *message);
size_t guestfs_strings_ee_ret__pack
                     (const GuestfsStringsEeRet   *message,
                      uint8_t             *out);
size_t guestfs_strings_ee_ret__pack_to_buffer
                     (const GuestfsStringsEeRet   *message,
                      ProtobufCBuffer     *buffer);
GuestfsStringsEeRet *
       guestfs_strings_ee_ret__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_strings_ee_ret__free_unpacked
                     (GuestfsStringsEeRet *message,
                      ProtobufCAllocator *allocator);
/* GuestfsHexdumpArgs methods */
void   guestfs_hexdump_args__init
                     (GuestfsHexdumpArgs         *message);
size_t guestfs_hexdump_args__get_packed_size
                     (const GuestfsHexdumpArgs   *message);
size_t guestfs_hexdump_args__pack
                     (const GuestfsHexdumpArgs   *message,
                      uint8_t             *out);
size_t guestfs_hexdump_args__pack_to_buffer
                     (const GuestfsHexdumpArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsHexdumpArgs *
       guestfs_hexdump_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_hexdump_args__free_unpacked
                     (GuestfsHexdumpArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsHexdumpRet methods */
void   guestfs_hexdump_ret__init
                     (GuestfsHexdumpRet         *message);
size_t guestfs_hexdump_ret__get_packed_size
                     (const GuestfsHexdumpRet   *message);
size_t guestfs_hexdump_ret__pack
                     (const GuestfsHexdumpRet   *message,
                      uint8_t             *out);
size_t guestfs_hexdump_ret__pack_to_buffer
                     (const GuestfsHexdumpRet   *message,
                      ProtobufCBuffer     *buffer);
GuestfsHexdumpRet *
       guestfs_hexdump_ret__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_hexdump_ret__free_unpacked
                     (GuestfsHexdumpRet *message,
                      ProtobufCAllocator *allocator);
/* GuestfsZerofreeArgs methods */
void   guestfs_zerofree_args__init
                     (GuestfsZerofreeArgs         *message);
size_t guestfs_zerofree_args__get_packed_size
                     (const GuestfsZerofreeArgs   *message);
size_t guestfs_zerofree_args__pack
                     (const GuestfsZerofreeArgs   *message,
                      uint8_t             *out);
size_t guestfs_zerofree_args__pack_to_buffer
                     (const GuestfsZerofreeArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsZerofreeArgs *
       guestfs_zerofree_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_zerofree_args__free_unpacked
                     (GuestfsZerofreeArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsPvresizeArgs methods */
void   guestfs_pvresize_args__init
                     (GuestfsPvresizeArgs         *message);
size_t guestfs_pvresize_args__get_packed_size
                     (const GuestfsPvresizeArgs   *message);
size_t guestfs_pvresize_args__pack
                     (const GuestfsPvresizeArgs   *message,
                      uint8_t             *out);
size_t guestfs_pvresize_args__pack_to_buffer
                     (const GuestfsPvresizeArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsPvresizeArgs *
       guestfs_pvresize_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_pvresize_args__free_unpacked
                     (GuestfsPvresizeArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsSfdiskNnArgs methods */
void   guestfs_sfdisk_nn_args__init
                     (GuestfsSfdiskNnArgs         *message);
size_t guestfs_sfdisk_nn_args__get_packed_size
                     (const GuestfsSfdiskNnArgs   *message);
size_t guestfs_sfdisk_nn_args__pack
                     (const GuestfsSfdiskNnArgs   *message,
                      uint8_t             *out);
size_t guestfs_sfdisk_nn_args__pack_to_buffer
                     (const GuestfsSfdiskNnArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsSfdiskNnArgs *
       guestfs_sfdisk_nn_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_sfdisk_nn_args__free_unpacked
                     (GuestfsSfdiskNnArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsSfdisklArgs methods */
void   guestfs_sfdiskl_args__init
                     (GuestfsSfdisklArgs         *message);
size_t guestfs_sfdiskl_args__get_packed_size
                     (const GuestfsSfdisklArgs   *message);
size_t guestfs_sfdiskl_args__pack
                     (const GuestfsSfdisklArgs   *message,
                      uint8_t             *out);
size_t guestfs_sfdiskl_args__pack_to_buffer
                     (const GuestfsSfdisklArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsSfdisklArgs *
       guestfs_sfdiskl_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_sfdiskl_args__free_unpacked
                     (GuestfsSfdisklArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsSfdisklRet methods */
void   guestfs_sfdiskl_ret__init
                     (GuestfsSfdisklRet         *message);
size_t guestfs_sfdiskl_ret__get_packed_size
                     (const GuestfsSfdisklRet   *message);
size_t guestfs_sfdiskl_ret__pack
                     (const GuestfsSfdisklRet   *message,
                      uint8_t             *out);
size_t guestfs_sfdiskl_ret__pack_to_buffer
                     (const GuestfsSfdisklRet   *message,
                      ProtobufCBuffer     *buffer);
GuestfsSfdisklRet *
       guestfs_sfdiskl_ret__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_sfdiskl_ret__free_unpacked
                     (GuestfsSfdisklRet *message,
                      ProtobufCAllocator *allocator);
/* GuestfsSfdiskKernelGeometryArgs methods */
void   guestfs_sfdisk_kernel_geometry_args__init
                     (GuestfsSfdiskKernelGeometryArgs         *message);
size_t guestfs_sfdisk_kernel_geometry_args__get_packed_size
                     (const GuestfsSfdiskKernelGeometryArgs   *message);
size_t guestfs_sfdisk_kernel_geometry_args__pack
                     (const GuestfsSfdiskKernelGeometryArgs   *message,
                      uint8_t             *out);
size_t guestfs_sfdisk_kernel_geometry_args__pack_to_buffer
                     (const GuestfsSfdiskKernelGeometryArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsSfdiskKernelGeometryArgs *
       guestfs_sfdisk_kernel_geometry_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_sfdisk_kernel_geometry_args__free_unpacked
                     (GuestfsSfdiskKernelGeometryArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsSfdiskKernelGeometryRet methods */
void   guestfs_sfdisk_kernel_geometry_ret__init
                     (GuestfsSfdiskKernelGeometryRet         *message);
size_t guestfs_sfdisk_kernel_geometry_ret__get_packed_size
                     (const GuestfsSfdiskKernelGeometryRet   *message);
size_t guestfs_sfdisk_kernel_geometry_ret__pack
                     (const GuestfsSfdiskKernelGeometryRet   *message,
                      uint8_t             *out);
size_t guestfs_sfdisk_kernel_geometry_ret__pack_to_buffer
                     (const GuestfsSfdiskKernelGeometryRet   *message,
                      ProtobufCBuffer     *buffer);
GuestfsSfdiskKernelGeometryRet *
       guestfs_sfdisk_kernel_geometry_ret__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_sfdisk_kernel_geometry_ret__free_unpacked
                     (GuestfsSfdiskKernelGeometryRet *message,
                      ProtobufCAllocator *allocator);
/* GuestfsSfdiskDiskGeometryArgs methods */
void   guestfs_sfdisk_disk_geometry_args__init
                     (GuestfsSfdiskDiskGeometryArgs         *message);
size_t guestfs_sfdisk_disk_geometry_args__get_packed_size
                     (const GuestfsSfdiskDiskGeometryArgs   *message);
size_t guestfs_sfdisk_disk_geometry_args__pack
                     (const GuestfsSfdiskDiskGeometryArgs   *message,
                      uint8_t             *out);
size_t guestfs_sfdisk_disk_geometry_args__pack_to_buffer
                     (const GuestfsSfdiskDiskGeometryArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsSfdiskDiskGeometryArgs *
       guestfs_sfdisk_disk_geometry_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_sfdisk_disk_geometry_args__free_unpacked
                     (GuestfsSfdiskDiskGeometryArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsSfdiskDiskGeometryRet methods */
void   guestfs_sfdisk_disk_geometry_ret__init
                     (GuestfsSfdiskDiskGeometryRet         *message);
size_t guestfs_sfdisk_disk_geometry_ret__get_packed_size
                     (const GuestfsSfdiskDiskGeometryRet   *message);
size_t guestfs_sfdisk_disk_geometry_ret__pack
                     (const GuestfsSfdiskDiskGeometryRet   *message,
                      uint8_t             *out);
size_t guestfs_sfdisk_disk_geometry_ret__pack_to_buffer
                     (const GuestfsSfdiskDiskGeometryRet   *message,
                      ProtobufCBuffer     *buffer);
GuestfsSfdiskDiskGeometryRet *
       guestfs_sfdisk_disk_geometry_ret__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_sfdisk_disk_geometry_ret__free_unpacked
                     (GuestfsSfdiskDiskGeometryRet *message,
                      ProtobufCAllocator *allocator);
/* GuestfsVgActivateAllArgs methods */
void   guestfs_vg_activate_all_args__init
                     (GuestfsVgActivateAllArgs         *message);
size_t guestfs_vg_activate_all_args__get_packed_size
                     (const GuestfsVgActivateAllArgs   *message);
size_t guestfs_vg_activate_all_args__pack
                     (const GuestfsVgActivateAllArgs   *message,
                      uint8_t             *out);
size_t guestfs_vg_activate_all_args__pack_to_buffer
                     (const GuestfsVgActivateAllArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsVgActivateAllArgs *
       guestfs_vg_activate_all_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_vg_activate_all_args__free_unpacked
                     (GuestfsVgActivateAllArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsVgActivateArgs methods */
void   guestfs_vg_activate_args__init
                     (GuestfsVgActivateArgs         *message);
size_t guestfs_vg_activate_args__get_packed_size
                     (const GuestfsVgActivateArgs   *message);
size_t guestfs_vg_activate_args__pack
                     (const GuestfsVgActivateArgs   *message,
                      uint8_t             *out);
size_t guestfs_vg_activate_args__pack_to_buffer
                     (const GuestfsVgActivateArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsVgActivateArgs *
       guestfs_vg_activate_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_vg_activate_args__free_unpacked
                     (GuestfsVgActivateArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsLvresizeArgs methods */
void   guestfs_lvresize_args__init
                     (GuestfsLvresizeArgs         *message);
size_t guestfs_lvresize_args__get_packed_size
                     (const GuestfsLvresizeArgs   *message);
size_t guestfs_lvresize_args__pack
                     (const GuestfsLvresizeArgs   *message,
                      uint8_t             *out);
size_t guestfs_lvresize_args__pack_to_buffer
                     (const GuestfsLvresizeArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsLvresizeArgs *
       guestfs_lvresize_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_lvresize_args__free_unpacked
                     (GuestfsLvresizeArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsResize2fsArgs methods */
void   guestfs_resize2fs_args__init
                     (GuestfsResize2fsArgs         *message);
size_t guestfs_resize2fs_args__get_packed_size
                     (const GuestfsResize2fsArgs   *message);
size_t guestfs_resize2fs_args__pack
                     (const GuestfsResize2fsArgs   *message,
                      uint8_t             *out);
size_t guestfs_resize2fs_args__pack_to_buffer
                     (const GuestfsResize2fsArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsResize2fsArgs *
       guestfs_resize2fs_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_resize2fs_args__free_unpacked
                     (GuestfsResize2fsArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsE2fsckFfArgs methods */
void   guestfs_e2fsck_ff_args__init
                     (GuestfsE2fsckFfArgs         *message);
size_t guestfs_e2fsck_ff_args__get_packed_size
                     (const GuestfsE2fsckFfArgs   *message);
size_t guestfs_e2fsck_ff_args__pack
                     (const GuestfsE2fsckFfArgs   *message,
                      uint8_t             *out);
size_t guestfs_e2fsck_ff_args__pack_to_buffer
                     (const GuestfsE2fsckFfArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsE2fsckFfArgs *
       guestfs_e2fsck_ff_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_e2fsck_ff_args__free_unpacked
                     (GuestfsE2fsckFfArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsSleepArgs methods */
void   guestfs_sleep_args__init
                     (GuestfsSleepArgs         *message);
size_t guestfs_sleep_args__get_packed_size
                     (const GuestfsSleepArgs   *message);
size_t guestfs_sleep_args__pack
                     (const GuestfsSleepArgs   *message,
                      uint8_t             *out);
size_t guestfs_sleep_args__pack_to_buffer
                     (const GuestfsSleepArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsSleepArgs *
       guestfs_sleep_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_sleep_args__free_unpacked
                     (GuestfsSleepArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsNtfs3gprobeArgs methods */
void   guestfs_ntfs3gprobe_args__init
                     (GuestfsNtfs3gprobeArgs         *message);
size_t guestfs_ntfs3gprobe_args__get_packed_size
                     (const GuestfsNtfs3gprobeArgs   *message);
size_t guestfs_ntfs3gprobe_args__pack
                     (const GuestfsNtfs3gprobeArgs   *message,
                      uint8_t             *out);
size_t guestfs_ntfs3gprobe_args__pack_to_buffer
                     (const GuestfsNtfs3gprobeArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsNtfs3gprobeArgs *
       guestfs_ntfs3gprobe_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_ntfs3gprobe_args__free_unpacked
                     (GuestfsNtfs3gprobeArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsNtfs3gprobeRet methods */
void   guestfs_ntfs3gprobe_ret__init
                     (GuestfsNtfs3gprobeRet         *message);
size_t guestfs_ntfs3gprobe_ret__get_packed_size
                     (const GuestfsNtfs3gprobeRet   *message);
size_t guestfs_ntfs3gprobe_ret__pack
                     (const GuestfsNtfs3gprobeRet   *message,
                      uint8_t             *out);
size_t guestfs_ntfs3gprobe_ret__pack_to_buffer
                     (const GuestfsNtfs3gprobeRet   *message,
                      ProtobufCBuffer     *buffer);
GuestfsNtfs3gprobeRet *
       guestfs_ntfs3gprobe_ret__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_ntfs3gprobe_ret__free_unpacked
                     (GuestfsNtfs3gprobeRet *message,
                      ProtobufCAllocator *allocator);
/* GuestfsShArgs methods */
void   guestfs_sh_args__init
                     (GuestfsShArgs         *message);
size_t guestfs_sh_args__get_packed_size
                     (const GuestfsShArgs   *message);
size_t guestfs_sh_args__pack
                     (const GuestfsShArgs   *message,
                      uint8_t             *out);
size_t guestfs_sh_args__pack_to_buffer
                     (const GuestfsShArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsShArgs *
       guestfs_sh_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_sh_args__free_unpacked
                     (GuestfsShArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsShRet methods */
void   guestfs_sh_ret__init
                     (GuestfsShRet         *message);
size_t guestfs_sh_ret__get_packed_size
                     (const GuestfsShRet   *message);
size_t guestfs_sh_ret__pack
                     (const GuestfsShRet   *message,
                      uint8_t             *out);
size_t guestfs_sh_ret__pack_to_buffer
                     (const GuestfsShRet   *message,
                      ProtobufCBuffer     *buffer);
GuestfsShRet *
       guestfs_sh_ret__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_sh_ret__free_unpacked
                     (GuestfsShRet *message,
                      ProtobufCAllocator *allocator);
/* GuestfsShLinesArgs methods */
void   guestfs_sh_lines_args__init
                     (GuestfsShLinesArgs         *message);
size_t guestfs_sh_lines_args__get_packed_size
                     (const GuestfsShLinesArgs   *message);
size_t guestfs_sh_lines_args__pack
                     (const GuestfsShLinesArgs   *message,
                      uint8_t             *out);
size_t guestfs_sh_lines_args__pack_to_buffer
                     (const GuestfsShLinesArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsShLinesArgs *
       guestfs_sh_lines_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_sh_lines_args__free_unpacked
                     (GuestfsShLinesArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsShLinesRet methods */
void   guestfs_sh_lines_ret__init
                     (GuestfsShLinesRet         *message);
size_t guestfs_sh_lines_ret__get_packed_size
                     (const GuestfsShLinesRet   *message);
size_t guestfs_sh_lines_ret__pack
                     (const GuestfsShLinesRet   *message,
                      uint8_t             *out);
size_t guestfs_sh_lines_ret__pack_to_buffer
                     (const GuestfsShLinesRet   *message,
                      ProtobufCBuffer     *buffer);
GuestfsShLinesRet *
       guestfs_sh_lines_ret__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_sh_lines_ret__free_unpacked
                     (GuestfsShLinesRet *message,
                      ProtobufCAllocator *allocator);
/* GuestfsGlobExpandArgs methods */
void   guestfs_glob_expand_args__init
                     (GuestfsGlobExpandArgs         *message);
size_t guestfs_glob_expand_args__get_packed_size
                     (const GuestfsGlobExpandArgs   *message);
size_t guestfs_glob_expand_args__pack
                     (const GuestfsGlobExpandArgs   *message,
                      uint8_t             *out);
size_t guestfs_glob_expand_args__pack_to_buffer
                     (const GuestfsGlobExpandArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsGlobExpandArgs *
       guestfs_glob_expand_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_glob_expand_args__free_unpacked
                     (GuestfsGlobExpandArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsGlobExpandRet methods */
void   guestfs_glob_expand_ret__init
                     (GuestfsGlobExpandRet         *message);
size_t guestfs_glob_expand_ret__get_packed_size
                     (const GuestfsGlobExpandRet   *message);
size_t guestfs_glob_expand_ret__pack
                     (const GuestfsGlobExpandRet   *message,
                      uint8_t             *out);
size_t guestfs_glob_expand_ret__pack_to_buffer
                     (const GuestfsGlobExpandRet   *message,
                      ProtobufCBuffer     *buffer);
GuestfsGlobExpandRet *
       guestfs_glob_expand_ret__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_glob_expand_ret__free_unpacked
                     (GuestfsGlobExpandRet *message,
                      ProtobufCAllocator *allocator);
/* GuestfsScrubDeviceArgs methods */
void   guestfs_scrub_device_args__init
                     (GuestfsScrubDeviceArgs         *message);
size_t guestfs_scrub_device_args__get_packed_size
                     (const GuestfsScrubDeviceArgs   *message);
size_t guestfs_scrub_device_args__pack
                     (const GuestfsScrubDeviceArgs   *message,
                      uint8_t             *out);
size_t guestfs_scrub_device_args__pack_to_buffer
                     (const GuestfsScrubDeviceArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsScrubDeviceArgs *
       guestfs_scrub_device_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_scrub_device_args__free_unpacked
                     (GuestfsScrubDeviceArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsScrubFileArgs methods */
void   guestfs_scrub_file_args__init
                     (GuestfsScrubFileArgs         *message);
size_t guestfs_scrub_file_args__get_packed_size
                     (const GuestfsScrubFileArgs   *message);
size_t guestfs_scrub_file_args__pack
                     (const GuestfsScrubFileArgs   *message,
                      uint8_t             *out);
size_t guestfs_scrub_file_args__pack_to_buffer
                     (const GuestfsScrubFileArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsScrubFileArgs *
       guestfs_scrub_file_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_scrub_file_args__free_unpacked
                     (GuestfsScrubFileArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsScrubFreespaceArgs methods */
void   guestfs_scrub_freespace_args__init
                     (GuestfsScrubFreespaceArgs         *message);
size_t guestfs_scrub_freespace_args__get_packed_size
                     (const GuestfsScrubFreespaceArgs   *message);
size_t guestfs_scrub_freespace_args__pack
                     (const GuestfsScrubFreespaceArgs   *message,
                      uint8_t             *out);
size_t guestfs_scrub_freespace_args__pack_to_buffer
                     (const GuestfsScrubFreespaceArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsScrubFreespaceArgs *
       guestfs_scrub_freespace_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_scrub_freespace_args__free_unpacked
                     (GuestfsScrubFreespaceArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsMkdtempArgs methods */
void   guestfs_mkdtemp_args__init
                     (GuestfsMkdtempArgs         *message);
size_t guestfs_mkdtemp_args__get_packed_size
                     (const GuestfsMkdtempArgs   *message);
size_t guestfs_mkdtemp_args__pack
                     (const GuestfsMkdtempArgs   *message,
                      uint8_t             *out);
size_t guestfs_mkdtemp_args__pack_to_buffer
                     (const GuestfsMkdtempArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsMkdtempArgs *
       guestfs_mkdtemp_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_mkdtemp_args__free_unpacked
                     (GuestfsMkdtempArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsMkdtempRet methods */
void   guestfs_mkdtemp_ret__init
                     (GuestfsMkdtempRet         *message);
size_t guestfs_mkdtemp_ret__get_packed_size
                     (const GuestfsMkdtempRet   *message);
size_t guestfs_mkdtemp_ret__pack
                     (const GuestfsMkdtempRet   *message,
                      uint8_t             *out);
size_t guestfs_mkdtemp_ret__pack_to_buffer
                     (const GuestfsMkdtempRet   *message,
                      ProtobufCBuffer     *buffer);
GuestfsMkdtempRet *
       guestfs_mkdtemp_ret__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_mkdtemp_ret__free_unpacked
                     (GuestfsMkdtempRet *message,
                      ProtobufCAllocator *allocator);
/* GuestfsWclArgs methods */
void   guestfs_wcl_args__init
                     (GuestfsWclArgs         *message);
size_t guestfs_wcl_args__get_packed_size
                     (const GuestfsWclArgs   *message);
size_t guestfs_wcl_args__pack
                     (const GuestfsWclArgs   *message,
                      uint8_t             *out);
size_t guestfs_wcl_args__pack_to_buffer
                     (const GuestfsWclArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsWclArgs *
       guestfs_wcl_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_wcl_args__free_unpacked
                     (GuestfsWclArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsWclRet methods */
void   guestfs_wcl_ret__init
                     (GuestfsWclRet         *message);
size_t guestfs_wcl_ret__get_packed_size
                     (const GuestfsWclRet   *message);
size_t guestfs_wcl_ret__pack
                     (const GuestfsWclRet   *message,
                      uint8_t             *out);
size_t guestfs_wcl_ret__pack_to_buffer
                     (const GuestfsWclRet   *message,
                      ProtobufCBuffer     *buffer);
GuestfsWclRet *
       guestfs_wcl_ret__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_wcl_ret__free_unpacked
                     (GuestfsWclRet *message,
                      ProtobufCAllocator *allocator);
/* GuestfsWcwArgs methods */
void   guestfs_wcw_args__init
                     (GuestfsWcwArgs         *message);
size_t guestfs_wcw_args__get_packed_size
                     (const GuestfsWcwArgs   *message);
size_t guestfs_wcw_args__pack
                     (const GuestfsWcwArgs   *message,
                      uint8_t             *out);
size_t guestfs_wcw_args__pack_to_buffer
                     (const GuestfsWcwArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsWcwArgs *
       guestfs_wcw_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_wcw_args__free_unpacked
                     (GuestfsWcwArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsWcwRet methods */
void   guestfs_wcw_ret__init
                     (GuestfsWcwRet         *message);
size_t guestfs_wcw_ret__get_packed_size
                     (const GuestfsWcwRet   *message);
size_t guestfs_wcw_ret__pack
                     (const GuestfsWcwRet   *message,
                      uint8_t             *out);
size_t guestfs_wcw_ret__pack_to_buffer
                     (const GuestfsWcwRet   *message,
                      ProtobufCBuffer     *buffer);
GuestfsWcwRet *
       guestfs_wcw_ret__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_wcw_ret__free_unpacked
                     (GuestfsWcwRet *message,
                      ProtobufCAllocator *allocator);
/* GuestfsWccArgs methods */
void   guestfs_wcc_args__init
                     (GuestfsWccArgs         *message);
size_t guestfs_wcc_args__get_packed_size
                     (const GuestfsWccArgs   *message);
size_t guestfs_wcc_args__pack
                     (const GuestfsWccArgs   *message,
                      uint8_t             *out);
size_t guestfs_wcc_args__pack_to_buffer
                     (const GuestfsWccArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsWccArgs *
       guestfs_wcc_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_wcc_args__free_unpacked
                     (GuestfsWccArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsWccRet methods */
void   guestfs_wcc_ret__init
                     (GuestfsWccRet         *message);
size_t guestfs_wcc_ret__get_packed_size
                     (const GuestfsWccRet   *message);
size_t guestfs_wcc_ret__pack
                     (const GuestfsWccRet   *message,
                      uint8_t             *out);
size_t guestfs_wcc_ret__pack_to_buffer
                     (const GuestfsWccRet   *message,
                      ProtobufCBuffer     *buffer);
GuestfsWccRet *
       guestfs_wcc_ret__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_wcc_ret__free_unpacked
                     (GuestfsWccRet *message,
                      ProtobufCAllocator *allocator);
/* GuestfsHeadArgs methods */
void   guestfs_head_args__init
                     (GuestfsHeadArgs         *message);
size_t guestfs_head_args__get_packed_size
                     (const GuestfsHeadArgs   *message);
size_t guestfs_head_args__pack
                     (const GuestfsHeadArgs   *message,
                      uint8_t             *out);
size_t guestfs_head_args__pack_to_buffer
                     (const GuestfsHeadArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsHeadArgs *
       guestfs_head_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_head_args__free_unpacked
                     (GuestfsHeadArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsHeadRet methods */
void   guestfs_head_ret__init
                     (GuestfsHeadRet         *message);
size_t guestfs_head_ret__get_packed_size
                     (const GuestfsHeadRet   *message);
size_t guestfs_head_ret__pack
                     (const GuestfsHeadRet   *message,
                      uint8_t             *out);
size_t guestfs_head_ret__pack_to_buffer
                     (const GuestfsHeadRet   *message,
                      ProtobufCBuffer     *buffer);
GuestfsHeadRet *
       guestfs_head_ret__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_head_ret__free_unpacked
                     (GuestfsHeadRet *message,
                      ProtobufCAllocator *allocator);
/* GuestfsHeadNnArgs methods */
void   guestfs_head_nn_args__init
                     (GuestfsHeadNnArgs         *message);
size_t guestfs_head_nn_args__get_packed_size
                     (const GuestfsHeadNnArgs   *message);
size_t guestfs_head_nn_args__pack
                     (const GuestfsHeadNnArgs   *message,
                      uint8_t             *out);
size_t guestfs_head_nn_args__pack_to_buffer
                     (const GuestfsHeadNnArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsHeadNnArgs *
       guestfs_head_nn_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_head_nn_args__free_unpacked
                     (GuestfsHeadNnArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsHeadNnRet methods */
void   guestfs_head_nn_ret__init
                     (GuestfsHeadNnRet         *message);
size_t guestfs_head_nn_ret__get_packed_size
                     (const GuestfsHeadNnRet   *message);
size_t guestfs_head_nn_ret__pack
                     (const GuestfsHeadNnRet   *message,
                      uint8_t             *out);
size_t guestfs_head_nn_ret__pack_to_buffer
                     (const GuestfsHeadNnRet   *message,
                      ProtobufCBuffer     *buffer);
GuestfsHeadNnRet *
       guestfs_head_nn_ret__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_head_nn_ret__free_unpacked
                     (GuestfsHeadNnRet *message,
                      ProtobufCAllocator *allocator);
/* GuestfsTailArgs methods */
void   guestfs_tail_args__init
                     (GuestfsTailArgs         *message);
size_t guestfs_tail_args__get_packed_size
                     (const GuestfsTailArgs   *message);
size_t guestfs_tail_args__pack
                     (const GuestfsTailArgs   *message,
                      uint8_t             *out);
size_t guestfs_tail_args__pack_to_buffer
                     (const GuestfsTailArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsTailArgs *
       guestfs_tail_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_tail_args__free_unpacked
                     (GuestfsTailArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsTailRet methods */
void   guestfs_tail_ret__init
                     (GuestfsTailRet         *message);
size_t guestfs_tail_ret__get_packed_size
                     (const GuestfsTailRet   *message);
size_t guestfs_tail_ret__pack
                     (const GuestfsTailRet   *message,
                      uint8_t             *out);
size_t guestfs_tail_ret__pack_to_buffer
                     (const GuestfsTailRet   *message,
                      ProtobufCBuffer     *buffer);
GuestfsTailRet *
       guestfs_tail_ret__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_tail_ret__free_unpacked
                     (GuestfsTailRet *message,
                      ProtobufCAllocator *allocator);
/* GuestfsTailNnArgs methods */
void   guestfs_tail_nn_args__init
                     (GuestfsTailNnArgs         *message);
size_t guestfs_tail_nn_args__get_packed_size
                     (const GuestfsTailNnArgs   *message);
size_t guestfs_tail_nn_args__pack
                     (const GuestfsTailNnArgs   *message,
                      uint8_t             *out);
size_t guestfs_tail_nn_args__pack_to_buffer
                     (const GuestfsTailNnArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsTailNnArgs *
       guestfs_tail_nn_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_tail_nn_args__free_unpacked
                     (GuestfsTailNnArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsTailNnRet methods */
void   guestfs_tail_nn_ret__init
                     (GuestfsTailNnRet         *message);
size_t guestfs_tail_nn_ret__get_packed_size
                     (const GuestfsTailNnRet   *message);
size_t guestfs_tail_nn_ret__pack
                     (const GuestfsTailNnRet   *message,
                      uint8_t             *out);
size_t guestfs_tail_nn_ret__pack_to_buffer
                     (const GuestfsTailNnRet   *message,
                      ProtobufCBuffer     *buffer);
GuestfsTailNnRet *
       guestfs_tail_nn_ret__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_tail_nn_ret__free_unpacked
                     (GuestfsTailNnRet *message,
                      ProtobufCAllocator *allocator);
/* GuestfsDfRet methods */
void   guestfs_df_ret__init
                     (GuestfsDfRet         *message);
size_t guestfs_df_ret__get_packed_size
                     (const GuestfsDfRet   *message);
size_t guestfs_df_ret__pack
                     (const GuestfsDfRet   *message,
                      uint8_t             *out);
size_t guestfs_df_ret__pack_to_buffer
                     (const GuestfsDfRet   *message,
                      ProtobufCBuffer     *buffer);
GuestfsDfRet *
       guestfs_df_ret__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_df_ret__free_unpacked
                     (GuestfsDfRet *message,
                      ProtobufCAllocator *allocator);
/* GuestfsDfhRet methods */
void   guestfs_dfh_ret__init
                     (GuestfsDfhRet         *message);
size_t guestfs_dfh_ret__get_packed_size
                     (const GuestfsDfhRet   *message);
size_t guestfs_dfh_ret__pack
                     (const GuestfsDfhRet   *message,
                      uint8_t             *out);
size_t guestfs_dfh_ret__pack_to_buffer
                     (const GuestfsDfhRet   *message,
                      ProtobufCBuffer     *buffer);
GuestfsDfhRet *
       guestfs_dfh_ret__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_dfh_ret__free_unpacked
                     (GuestfsDfhRet *message,
                      ProtobufCAllocator *allocator);
/* GuestfsDuArgs methods */
void   guestfs_du_args__init
                     (GuestfsDuArgs         *message);
size_t guestfs_du_args__get_packed_size
                     (const GuestfsDuArgs   *message);
size_t guestfs_du_args__pack
                     (const GuestfsDuArgs   *message,
                      uint8_t             *out);
size_t guestfs_du_args__pack_to_buffer
                     (const GuestfsDuArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsDuArgs *
       guestfs_du_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_du_args__free_unpacked
                     (GuestfsDuArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsDuRet methods */
void   guestfs_du_ret__init
                     (GuestfsDuRet         *message);
size_t guestfs_du_ret__get_packed_size
                     (const GuestfsDuRet   *message);
size_t guestfs_du_ret__pack
                     (const GuestfsDuRet   *message,
                      uint8_t             *out);
size_t guestfs_du_ret__pack_to_buffer
                     (const GuestfsDuRet   *message,
                      ProtobufCBuffer     *buffer);
GuestfsDuRet *
       guestfs_du_ret__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_du_ret__free_unpacked
                     (GuestfsDuRet *message,
                      ProtobufCAllocator *allocator);
/* GuestfsInitrdListArgs methods */
void   guestfs_initrd_list_args__init
                     (GuestfsInitrdListArgs         *message);
size_t guestfs_initrd_list_args__get_packed_size
                     (const GuestfsInitrdListArgs   *message);
size_t guestfs_initrd_list_args__pack
                     (const GuestfsInitrdListArgs   *message,
                      uint8_t             *out);
size_t guestfs_initrd_list_args__pack_to_buffer
                     (const GuestfsInitrdListArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsInitrdListArgs *
       guestfs_initrd_list_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_initrd_list_args__free_unpacked
                     (GuestfsInitrdListArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsInitrdListRet methods */
void   guestfs_initrd_list_ret__init
                     (GuestfsInitrdListRet         *message);
size_t guestfs_initrd_list_ret__get_packed_size
                     (const GuestfsInitrdListRet   *message);
size_t guestfs_initrd_list_ret__pack
                     (const GuestfsInitrdListRet   *message,
                      uint8_t             *out);
size_t guestfs_initrd_list_ret__pack_to_buffer
                     (const GuestfsInitrdListRet   *message,
                      ProtobufCBuffer     *buffer);
GuestfsInitrdListRet *
       guestfs_initrd_list_ret__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_initrd_list_ret__free_unpacked
                     (GuestfsInitrdListRet *message,
                      ProtobufCAllocator *allocator);
/* GuestfsMountLoopArgs methods */
void   guestfs_mount_loop_args__init
                     (GuestfsMountLoopArgs         *message);
size_t guestfs_mount_loop_args__get_packed_size
                     (const GuestfsMountLoopArgs   *message);
size_t guestfs_mount_loop_args__pack
                     (const GuestfsMountLoopArgs   *message,
                      uint8_t             *out);
size_t guestfs_mount_loop_args__pack_to_buffer
                     (const GuestfsMountLoopArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsMountLoopArgs *
       guestfs_mount_loop_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_mount_loop_args__free_unpacked
                     (GuestfsMountLoopArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsMkswapArgs methods */
void   guestfs_mkswap_args__init
                     (GuestfsMkswapArgs         *message);
size_t guestfs_mkswap_args__get_packed_size
                     (const GuestfsMkswapArgs   *message);
size_t guestfs_mkswap_args__pack
                     (const GuestfsMkswapArgs   *message,
                      uint8_t             *out);
size_t guestfs_mkswap_args__pack_to_buffer
                     (const GuestfsMkswapArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsMkswapArgs *
       guestfs_mkswap_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_mkswap_args__free_unpacked
                     (GuestfsMkswapArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsMkswapLlArgs methods */
void   guestfs_mkswap_ll_args__init
                     (GuestfsMkswapLlArgs         *message);
size_t guestfs_mkswap_ll_args__get_packed_size
                     (const GuestfsMkswapLlArgs   *message);
size_t guestfs_mkswap_ll_args__pack
                     (const GuestfsMkswapLlArgs   *message,
                      uint8_t             *out);
size_t guestfs_mkswap_ll_args__pack_to_buffer
                     (const GuestfsMkswapLlArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsMkswapLlArgs *
       guestfs_mkswap_ll_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_mkswap_ll_args__free_unpacked
                     (GuestfsMkswapLlArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsMkswapUuArgs methods */
void   guestfs_mkswap_uu_args__init
                     (GuestfsMkswapUuArgs         *message);
size_t guestfs_mkswap_uu_args__get_packed_size
                     (const GuestfsMkswapUuArgs   *message);
size_t guestfs_mkswap_uu_args__pack
                     (const GuestfsMkswapUuArgs   *message,
                      uint8_t             *out);
size_t guestfs_mkswap_uu_args__pack_to_buffer
                     (const GuestfsMkswapUuArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsMkswapUuArgs *
       guestfs_mkswap_uu_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_mkswap_uu_args__free_unpacked
                     (GuestfsMkswapUuArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsMknodArgs methods */
void   guestfs_mknod_args__init
                     (GuestfsMknodArgs         *message);
size_t guestfs_mknod_args__get_packed_size
                     (const GuestfsMknodArgs   *message);
size_t guestfs_mknod_args__pack
                     (const GuestfsMknodArgs   *message,
                      uint8_t             *out);
size_t guestfs_mknod_args__pack_to_buffer
                     (const GuestfsMknodArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsMknodArgs *
       guestfs_mknod_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_mknod_args__free_unpacked
                     (GuestfsMknodArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsMkfifoArgs methods */
void   guestfs_mkfifo_args__init
                     (GuestfsMkfifoArgs         *message);
size_t guestfs_mkfifo_args__get_packed_size
                     (const GuestfsMkfifoArgs   *message);
size_t guestfs_mkfifo_args__pack
                     (const GuestfsMkfifoArgs   *message,
                      uint8_t             *out);
size_t guestfs_mkfifo_args__pack_to_buffer
                     (const GuestfsMkfifoArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsMkfifoArgs *
       guestfs_mkfifo_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_mkfifo_args__free_unpacked
                     (GuestfsMkfifoArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsMknodBbArgs methods */
void   guestfs_mknod_bb_args__init
                     (GuestfsMknodBbArgs         *message);
size_t guestfs_mknod_bb_args__get_packed_size
                     (const GuestfsMknodBbArgs   *message);
size_t guestfs_mknod_bb_args__pack
                     (const GuestfsMknodBbArgs   *message,
                      uint8_t             *out);
size_t guestfs_mknod_bb_args__pack_to_buffer
                     (const GuestfsMknodBbArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsMknodBbArgs *
       guestfs_mknod_bb_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_mknod_bb_args__free_unpacked
                     (GuestfsMknodBbArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsMknodCcArgs methods */
void   guestfs_mknod_cc_args__init
                     (GuestfsMknodCcArgs         *message);
size_t guestfs_mknod_cc_args__get_packed_size
                     (const GuestfsMknodCcArgs   *message);
size_t guestfs_mknod_cc_args__pack
                     (const GuestfsMknodCcArgs   *message,
                      uint8_t             *out);
size_t guestfs_mknod_cc_args__pack_to_buffer
                     (const GuestfsMknodCcArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsMknodCcArgs *
       guestfs_mknod_cc_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_mknod_cc_args__free_unpacked
                     (GuestfsMknodCcArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsUmaskArgs methods */
void   guestfs_umask_args__init
                     (GuestfsUmaskArgs         *message);
size_t guestfs_umask_args__get_packed_size
                     (const GuestfsUmaskArgs   *message);
size_t guestfs_umask_args__pack
                     (const GuestfsUmaskArgs   *message,
                      uint8_t             *out);
size_t guestfs_umask_args__pack_to_buffer
                     (const GuestfsUmaskArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsUmaskArgs *
       guestfs_umask_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_umask_args__free_unpacked
                     (GuestfsUmaskArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsUmaskRet methods */
void   guestfs_umask_ret__init
                     (GuestfsUmaskRet         *message);
size_t guestfs_umask_ret__get_packed_size
                     (const GuestfsUmaskRet   *message);
size_t guestfs_umask_ret__pack
                     (const GuestfsUmaskRet   *message,
                      uint8_t             *out);
size_t guestfs_umask_ret__pack_to_buffer
                     (const GuestfsUmaskRet   *message,
                      ProtobufCBuffer     *buffer);
GuestfsUmaskRet *
       guestfs_umask_ret__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_umask_ret__free_unpacked
                     (GuestfsUmaskRet *message,
                      ProtobufCAllocator *allocator);
/* GuestfsReaddirArgs methods */
void   guestfs_readdir_args__init
                     (GuestfsReaddirArgs         *message);
size_t guestfs_readdir_args__get_packed_size
                     (const GuestfsReaddirArgs   *message);
size_t guestfs_readdir_args__pack
                     (const GuestfsReaddirArgs   *message,
                      uint8_t             *out);
size_t guestfs_readdir_args__pack_to_buffer
                     (const GuestfsReaddirArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsReaddirArgs *
       guestfs_readdir_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_readdir_args__free_unpacked
                     (GuestfsReaddirArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsReaddirRet methods */
void   guestfs_readdir_ret__init
                     (GuestfsReaddirRet         *message);
size_t guestfs_readdir_ret__get_packed_size
                     (const GuestfsReaddirRet   *message);
size_t guestfs_readdir_ret__pack
                     (const GuestfsReaddirRet   *message,
                      uint8_t             *out);
size_t guestfs_readdir_ret__pack_to_buffer
                     (const GuestfsReaddirRet   *message,
                      ProtobufCBuffer     *buffer);
GuestfsReaddirRet *
       guestfs_readdir_ret__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_readdir_ret__free_unpacked
                     (GuestfsReaddirRet *message,
                      ProtobufCAllocator *allocator);
/* GuestfsSfdiskmArgs methods */
void   guestfs_sfdiskm_args__init
                     (GuestfsSfdiskmArgs         *message);
size_t guestfs_sfdiskm_args__get_packed_size
                     (const GuestfsSfdiskmArgs   *message);
size_t guestfs_sfdiskm_args__pack
                     (const GuestfsSfdiskmArgs   *message,
                      uint8_t             *out);
size_t guestfs_sfdiskm_args__pack_to_buffer
                     (const GuestfsSfdiskmArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsSfdiskmArgs *
       guestfs_sfdiskm_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_sfdiskm_args__free_unpacked
                     (GuestfsSfdiskmArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsZfileArgs methods */
void   guestfs_zfile_args__init
                     (GuestfsZfileArgs         *message);
size_t guestfs_zfile_args__get_packed_size
                     (const GuestfsZfileArgs   *message);
size_t guestfs_zfile_args__pack
                     (const GuestfsZfileArgs   *message,
                      uint8_t             *out);
size_t guestfs_zfile_args__pack_to_buffer
                     (const GuestfsZfileArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsZfileArgs *
       guestfs_zfile_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_zfile_args__free_unpacked
                     (GuestfsZfileArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsZfileRet methods */
void   guestfs_zfile_ret__init
                     (GuestfsZfileRet         *message);
size_t guestfs_zfile_ret__get_packed_size
                     (const GuestfsZfileRet   *message);
size_t guestfs_zfile_ret__pack
                     (const GuestfsZfileRet   *message,
                      uint8_t             *out);
size_t guestfs_zfile_ret__pack_to_buffer
                     (const GuestfsZfileRet   *message,
                      ProtobufCBuffer     *buffer);
GuestfsZfileRet *
       guestfs_zfile_ret__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_zfile_ret__free_unpacked
                     (GuestfsZfileRet *message,
                      ProtobufCAllocator *allocator);
/* GuestfsGetxattrsArgs methods */
void   guestfs_getxattrs_args__init
                     (GuestfsGetxattrsArgs         *message);
size_t guestfs_getxattrs_args__get_packed_size
                     (const GuestfsGetxattrsArgs   *message);
size_t guestfs_getxattrs_args__pack
                     (const GuestfsGetxattrsArgs   *message,
                      uint8_t             *out);
size_t guestfs_getxattrs_args__pack_to_buffer
                     (const GuestfsGetxattrsArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsGetxattrsArgs *
       guestfs_getxattrs_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_getxattrs_args__free_unpacked
                     (GuestfsGetxattrsArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsGetxattrsRet methods */
void   guestfs_getxattrs_ret__init
                     (GuestfsGetxattrsRet         *message);
size_t guestfs_getxattrs_ret__get_packed_size
                     (const GuestfsGetxattrsRet   *message);
size_t guestfs_getxattrs_ret__pack
                     (const GuestfsGetxattrsRet   *message,
                      uint8_t             *out);
size_t guestfs_getxattrs_ret__pack_to_buffer
                     (const GuestfsGetxattrsRet   *message,
                      ProtobufCBuffer     *buffer);
GuestfsGetxattrsRet *
       guestfs_getxattrs_ret__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_getxattrs_ret__free_unpacked
                     (GuestfsGetxattrsRet *message,
                      ProtobufCAllocator *allocator);
/* GuestfsLgetxattrsArgs methods */
void   guestfs_lgetxattrs_args__init
                     (GuestfsLgetxattrsArgs         *message);
size_t guestfs_lgetxattrs_args__get_packed_size
                     (const GuestfsLgetxattrsArgs   *message);
size_t guestfs_lgetxattrs_args__pack
                     (const GuestfsLgetxattrsArgs   *message,
                      uint8_t             *out);
size_t guestfs_lgetxattrs_args__pack_to_buffer
                     (const GuestfsLgetxattrsArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsLgetxattrsArgs *
       guestfs_lgetxattrs_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_lgetxattrs_args__free_unpacked
                     (GuestfsLgetxattrsArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsLgetxattrsRet methods */
void   guestfs_lgetxattrs_ret__init
                     (GuestfsLgetxattrsRet         *message);
size_t guestfs_lgetxattrs_ret__get_packed_size
                     (const GuestfsLgetxattrsRet   *message);
size_t guestfs_lgetxattrs_ret__pack
                     (const GuestfsLgetxattrsRet   *message,
                      uint8_t             *out);
size_t guestfs_lgetxattrs_ret__pack_to_buffer
                     (const GuestfsLgetxattrsRet   *message,
                      ProtobufCBuffer     *buffer);
GuestfsLgetxattrsRet *
       guestfs_lgetxattrs_ret__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_lgetxattrs_ret__free_unpacked
                     (GuestfsLgetxattrsRet *message,
                      ProtobufCAllocator *allocator);
/* GuestfsSetxattrArgs methods */
void   guestfs_setxattr_args__init
                     (GuestfsSetxattrArgs         *message);
size_t guestfs_setxattr_args__get_packed_size
                     (const GuestfsSetxattrArgs   *message);
size_t guestfs_setxattr_args__pack
                     (const GuestfsSetxattrArgs   *message,
                      uint8_t             *out);
size_t guestfs_setxattr_args__pack_to_buffer
                     (const GuestfsSetxattrArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsSetxattrArgs *
       guestfs_setxattr_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_setxattr_args__free_unpacked
                     (GuestfsSetxattrArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsLsetxattrArgs methods */
void   guestfs_lsetxattr_args__init
                     (GuestfsLsetxattrArgs         *message);
size_t guestfs_lsetxattr_args__get_packed_size
                     (const GuestfsLsetxattrArgs   *message);
size_t guestfs_lsetxattr_args__pack
                     (const GuestfsLsetxattrArgs   *message,
                      uint8_t             *out);
size_t guestfs_lsetxattr_args__pack_to_buffer
                     (const GuestfsLsetxattrArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsLsetxattrArgs *
       guestfs_lsetxattr_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_lsetxattr_args__free_unpacked
                     (GuestfsLsetxattrArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsRemovexattrArgs methods */
void   guestfs_removexattr_args__init
                     (GuestfsRemovexattrArgs         *message);
size_t guestfs_removexattr_args__get_packed_size
                     (const GuestfsRemovexattrArgs   *message);
size_t guestfs_removexattr_args__pack
                     (const GuestfsRemovexattrArgs   *message,
                      uint8_t             *out);
size_t guestfs_removexattr_args__pack_to_buffer
                     (const GuestfsRemovexattrArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsRemovexattrArgs *
       guestfs_removexattr_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_removexattr_args__free_unpacked
                     (GuestfsRemovexattrArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsLremovexattrArgs methods */
void   guestfs_lremovexattr_args__init
                     (GuestfsLremovexattrArgs         *message);
size_t guestfs_lremovexattr_args__get_packed_size
                     (const GuestfsLremovexattrArgs   *message);
size_t guestfs_lremovexattr_args__pack
                     (const GuestfsLremovexattrArgs   *message,
                      uint8_t             *out);
size_t guestfs_lremovexattr_args__pack_to_buffer
                     (const GuestfsLremovexattrArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsLremovexattrArgs *
       guestfs_lremovexattr_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_lremovexattr_args__free_unpacked
                     (GuestfsLremovexattrArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsMountpointsRet methods */
void   guestfs_mountpoints_ret__init
                     (GuestfsMountpointsRet         *message);
size_t guestfs_mountpoints_ret__get_packed_size
                     (const GuestfsMountpointsRet   *message);
size_t guestfs_mountpoints_ret__pack
                     (const GuestfsMountpointsRet   *message,
                      uint8_t             *out);
size_t guestfs_mountpoints_ret__pack_to_buffer
                     (const GuestfsMountpointsRet   *message,
                      ProtobufCBuffer     *buffer);
GuestfsMountpointsRet *
       guestfs_mountpoints_ret__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_mountpoints_ret__free_unpacked
                     (GuestfsMountpointsRet *message,
                      ProtobufCAllocator *allocator);
/* GuestfsMkmountpointArgs methods */
void   guestfs_mkmountpoint_args__init
                     (GuestfsMkmountpointArgs         *message);
size_t guestfs_mkmountpoint_args__get_packed_size
                     (const GuestfsMkmountpointArgs   *message);
size_t guestfs_mkmountpoint_args__pack
                     (const GuestfsMkmountpointArgs   *message,
                      uint8_t             *out);
size_t guestfs_mkmountpoint_args__pack_to_buffer
                     (const GuestfsMkmountpointArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsMkmountpointArgs *
       guestfs_mkmountpoint_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_mkmountpoint_args__free_unpacked
                     (GuestfsMkmountpointArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsRmmountpointArgs methods */
void   guestfs_rmmountpoint_args__init
                     (GuestfsRmmountpointArgs         *message);
size_t guestfs_rmmountpoint_args__get_packed_size
                     (const GuestfsRmmountpointArgs   *message);
size_t guestfs_rmmountpoint_args__pack
                     (const GuestfsRmmountpointArgs   *message,
                      uint8_t             *out);
size_t guestfs_rmmountpoint_args__pack_to_buffer
                     (const GuestfsRmmountpointArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsRmmountpointArgs *
       guestfs_rmmountpoint_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_rmmountpoint_args__free_unpacked
                     (GuestfsRmmountpointArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsGrepArgs methods */
void   guestfs_grep_args__init
                     (GuestfsGrepArgs         *message);
size_t guestfs_grep_args__get_packed_size
                     (const GuestfsGrepArgs   *message);
size_t guestfs_grep_args__pack
                     (const GuestfsGrepArgs   *message,
                      uint8_t             *out);
size_t guestfs_grep_args__pack_to_buffer
                     (const GuestfsGrepArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsGrepArgs *
       guestfs_grep_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_grep_args__free_unpacked
                     (GuestfsGrepArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsGrepRet methods */
void   guestfs_grep_ret__init
                     (GuestfsGrepRet         *message);
size_t guestfs_grep_ret__get_packed_size
                     (const GuestfsGrepRet   *message);
size_t guestfs_grep_ret__pack
                     (const GuestfsGrepRet   *message,
                      uint8_t             *out);
size_t guestfs_grep_ret__pack_to_buffer
                     (const GuestfsGrepRet   *message,
                      ProtobufCBuffer     *buffer);
GuestfsGrepRet *
       guestfs_grep_ret__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_grep_ret__free_unpacked
                     (GuestfsGrepRet *message,
                      ProtobufCAllocator *allocator);
/* GuestfsEgrepArgs methods */
void   guestfs_egrep_args__init
                     (GuestfsEgrepArgs         *message);
size_t guestfs_egrep_args__get_packed_size
                     (const GuestfsEgrepArgs   *message);
size_t guestfs_egrep_args__pack
                     (const GuestfsEgrepArgs   *message,
                      uint8_t             *out);
size_t guestfs_egrep_args__pack_to_buffer
                     (const GuestfsEgrepArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsEgrepArgs *
       guestfs_egrep_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_egrep_args__free_unpacked
                     (GuestfsEgrepArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsEgrepRet methods */
void   guestfs_egrep_ret__init
                     (GuestfsEgrepRet         *message);
size_t guestfs_egrep_ret__get_packed_size
                     (const GuestfsEgrepRet   *message);
size_t guestfs_egrep_ret__pack
                     (const GuestfsEgrepRet   *message,
                      uint8_t             *out);
size_t guestfs_egrep_ret__pack_to_buffer
                     (const GuestfsEgrepRet   *message,
                      ProtobufCBuffer     *buffer);
GuestfsEgrepRet *
       guestfs_egrep_ret__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_egrep_ret__free_unpacked
                     (GuestfsEgrepRet *message,
                      ProtobufCAllocator *allocator);
/* GuestfsFgrepArgs methods */
void   guestfs_fgrep_args__init
                     (GuestfsFgrepArgs         *message);
size_t guestfs_fgrep_args__get_packed_size
                     (const GuestfsFgrepArgs   *message);
size_t guestfs_fgrep_args__pack
                     (const GuestfsFgrepArgs   *message,
                      uint8_t             *out);
size_t guestfs_fgrep_args__pack_to_buffer
                     (const GuestfsFgrepArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsFgrepArgs *
       guestfs_fgrep_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_fgrep_args__free_unpacked
                     (GuestfsFgrepArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsFgrepRet methods */
void   guestfs_fgrep_ret__init
                     (GuestfsFgrepRet         *message);
size_t guestfs_fgrep_ret__get_packed_size
                     (const GuestfsFgrepRet   *message);
size_t guestfs_fgrep_ret__pack
                     (const GuestfsFgrepRet   *message,
                      uint8_t             *out);
size_t guestfs_fgrep_ret__pack_to_buffer
                     (const GuestfsFgrepRet   *message,
                      ProtobufCBuffer     *buffer);
GuestfsFgrepRet *
       guestfs_fgrep_ret__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_fgrep_ret__free_unpacked
                     (GuestfsFgrepRet *message,
                      ProtobufCAllocator *allocator);
/* GuestfsGrepiArgs methods */
void   guestfs_grepi_args__init
                     (GuestfsGrepiArgs         *message);
size_t guestfs_grepi_args__get_packed_size
                     (const GuestfsGrepiArgs   *message);
size_t guestfs_grepi_args__pack
                     (const GuestfsGrepiArgs   *message,
                      uint8_t             *out);
size_t guestfs_grepi_args__pack_to_buffer
                     (const GuestfsGrepiArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsGrepiArgs *
       guestfs_grepi_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_grepi_args__free_unpacked
                     (GuestfsGrepiArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsGrepiRet methods */
void   guestfs_grepi_ret__init
                     (GuestfsGrepiRet         *message);
size_t guestfs_grepi_ret__get_packed_size
                     (const GuestfsGrepiRet   *message);
size_t guestfs_grepi_ret__pack
                     (const GuestfsGrepiRet   *message,
                      uint8_t             *out);
size_t guestfs_grepi_ret__pack_to_buffer
                     (const GuestfsGrepiRet   *message,
                      ProtobufCBuffer     *buffer);
GuestfsGrepiRet *
       guestfs_grepi_ret__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_grepi_ret__free_unpacked
                     (GuestfsGrepiRet *message,
                      ProtobufCAllocator *allocator);
/* GuestfsEgrepiArgs methods */
void   guestfs_egrepi_args__init
                     (GuestfsEgrepiArgs         *message);
size_t guestfs_egrepi_args__get_packed_size
                     (const GuestfsEgrepiArgs   *message);
size_t guestfs_egrepi_args__pack
                     (const GuestfsEgrepiArgs   *message,
                      uint8_t             *out);
size_t guestfs_egrepi_args__pack_to_buffer
                     (const GuestfsEgrepiArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsEgrepiArgs *
       guestfs_egrepi_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_egrepi_args__free_unpacked
                     (GuestfsEgrepiArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsEgrepiRet methods */
void   guestfs_egrepi_ret__init
                     (GuestfsEgrepiRet         *message);
size_t guestfs_egrepi_ret__get_packed_size
                     (const GuestfsEgrepiRet   *message);
size_t guestfs_egrepi_ret__pack
                     (const GuestfsEgrepiRet   *message,
                      uint8_t             *out);
size_t guestfs_egrepi_ret__pack_to_buffer
                     (const GuestfsEgrepiRet   *message,
                      ProtobufCBuffer     *buffer);
GuestfsEgrepiRet *
       guestfs_egrepi_ret__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_egrepi_ret__free_unpacked
                     (GuestfsEgrepiRet *message,
                      ProtobufCAllocator *allocator);
/* GuestfsFgrepiArgs methods */
void   guestfs_fgrepi_args__init
                     (GuestfsFgrepiArgs         *message);
size_t guestfs_fgrepi_args__get_packed_size
                     (const GuestfsFgrepiArgs   *message);
size_t guestfs_fgrepi_args__pack
                     (const GuestfsFgrepiArgs   *message,
                      uint8_t             *out);
size_t guestfs_fgrepi_args__pack_to_buffer
                     (const GuestfsFgrepiArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsFgrepiArgs *
       guestfs_fgrepi_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_fgrepi_args__free_unpacked
                     (GuestfsFgrepiArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsFgrepiRet methods */
void   guestfs_fgrepi_ret__init
                     (GuestfsFgrepiRet         *message);
size_t guestfs_fgrepi_ret__get_packed_size
                     (const GuestfsFgrepiRet   *message);
size_t guestfs_fgrepi_ret__pack
                     (const GuestfsFgrepiRet   *message,
                      uint8_t             *out);
size_t guestfs_fgrepi_ret__pack_to_buffer
                     (const GuestfsFgrepiRet   *message,
                      ProtobufCBuffer     *buffer);
GuestfsFgrepiRet *
       guestfs_fgrepi_ret__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_fgrepi_ret__free_unpacked
                     (GuestfsFgrepiRet *message,
                      ProtobufCAllocator *allocator);
/* GuestfsZgrepArgs methods */
void   guestfs_zgrep_args__init
                     (GuestfsZgrepArgs         *message);
size_t guestfs_zgrep_args__get_packed_size
                     (const GuestfsZgrepArgs   *message);
size_t guestfs_zgrep_args__pack
                     (const GuestfsZgrepArgs   *message,
                      uint8_t             *out);
size_t guestfs_zgrep_args__pack_to_buffer
                     (const GuestfsZgrepArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsZgrepArgs *
       guestfs_zgrep_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_zgrep_args__free_unpacked
                     (GuestfsZgrepArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsZgrepRet methods */
void   guestfs_zgrep_ret__init
                     (GuestfsZgrepRet         *message);
size_t guestfs_zgrep_ret__get_packed_size
                     (const GuestfsZgrepRet   *message);
size_t guestfs_zgrep_ret__pack
                     (const GuestfsZgrepRet   *message,
                      uint8_t             *out);
size_t guestfs_zgrep_ret__pack_to_buffer
                     (const GuestfsZgrepRet   *message,
                      ProtobufCBuffer     *buffer);
GuestfsZgrepRet *
       guestfs_zgrep_ret__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_zgrep_ret__free_unpacked
                     (GuestfsZgrepRet *message,
                      ProtobufCAllocator *allocator);
/* GuestfsZegrepArgs methods */
void   guestfs_zegrep_args__init
                     (GuestfsZegrepArgs         *message);
size_t guestfs_zegrep_args__get_packed_size
                     (const GuestfsZegrepArgs   *message);
size_t guestfs_zegrep_args__pack
                     (const GuestfsZegrepArgs   *message,
                      uint8_t             *out);
size_t guestfs_zegrep_args__pack_to_buffer
                     (const GuestfsZegrepArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsZegrepArgs *
       guestfs_zegrep_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_zegrep_args__free_unpacked
                     (GuestfsZegrepArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsZegrepRet methods */
void   guestfs_zegrep_ret__init
                     (GuestfsZegrepRet         *message);
size_t guestfs_zegrep_ret__get_packed_size
                     (const GuestfsZegrepRet   *message);
size_t guestfs_zegrep_ret__pack
                     (const GuestfsZegrepRet   *message,
                      uint8_t             *out);
size_t guestfs_zegrep_ret__pack_to_buffer
                     (const GuestfsZegrepRet   *message,
                      ProtobufCBuffer     *buffer);
GuestfsZegrepRet *
       guestfs_zegrep_ret__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_zegrep_ret__free_unpacked
                     (GuestfsZegrepRet *message,
                      ProtobufCAllocator *allocator);
/* GuestfsZfgrepArgs methods */
void   guestfs_zfgrep_args__init
                     (GuestfsZfgrepArgs         *message);
size_t guestfs_zfgrep_args__get_packed_size
                     (const GuestfsZfgrepArgs   *message);
size_t guestfs_zfgrep_args__pack
                     (const GuestfsZfgrepArgs   *message,
                      uint8_t             *out);
size_t guestfs_zfgrep_args__pack_to_buffer
                     (const GuestfsZfgrepArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsZfgrepArgs *
       guestfs_zfgrep_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_zfgrep_args__free_unpacked
                     (GuestfsZfgrepArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsZfgrepRet methods */
void   guestfs_zfgrep_ret__init
                     (GuestfsZfgrepRet         *message);
size_t guestfs_zfgrep_ret__get_packed_size
                     (const GuestfsZfgrepRet   *message);
size_t guestfs_zfgrep_ret__pack
                     (const GuestfsZfgrepRet   *message,
                      uint8_t             *out);
size_t guestfs_zfgrep_ret__pack_to_buffer
                     (const GuestfsZfgrepRet   *message,
                      ProtobufCBuffer     *buffer);
GuestfsZfgrepRet *
       guestfs_zfgrep_ret__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_zfgrep_ret__free_unpacked
                     (GuestfsZfgrepRet *message,
                      ProtobufCAllocator *allocator);
/* GuestfsZgrepiArgs methods */
void   guestfs_zgrepi_args__init
                     (GuestfsZgrepiArgs         *message);
size_t guestfs_zgrepi_args__get_packed_size
                     (const GuestfsZgrepiArgs   *message);
size_t guestfs_zgrepi_args__pack
                     (const GuestfsZgrepiArgs   *message,
                      uint8_t             *out);
size_t guestfs_zgrepi_args__pack_to_buffer
                     (const GuestfsZgrepiArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsZgrepiArgs *
       guestfs_zgrepi_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_zgrepi_args__free_unpacked
                     (GuestfsZgrepiArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsZgrepiRet methods */
void   guestfs_zgrepi_ret__init
                     (GuestfsZgrepiRet         *message);
size_t guestfs_zgrepi_ret__get_packed_size
                     (const GuestfsZgrepiRet   *message);
size_t guestfs_zgrepi_ret__pack
                     (const GuestfsZgrepiRet   *message,
                      uint8_t             *out);
size_t guestfs_zgrepi_ret__pack_to_buffer
                     (const GuestfsZgrepiRet   *message,
                      ProtobufCBuffer     *buffer);
GuestfsZgrepiRet *
       guestfs_zgrepi_ret__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_zgrepi_ret__free_unpacked
                     (GuestfsZgrepiRet *message,
                      ProtobufCAllocator *allocator);
/* GuestfsZegrepiArgs methods */
void   guestfs_zegrepi_args__init
                     (GuestfsZegrepiArgs         *message);
size_t guestfs_zegrepi_args__get_packed_size
                     (const GuestfsZegrepiArgs   *message);
size_t guestfs_zegrepi_args__pack
                     (const GuestfsZegrepiArgs   *message,
                      uint8_t             *out);
size_t guestfs_zegrepi_args__pack_to_buffer
                     (const GuestfsZegrepiArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsZegrepiArgs *
       guestfs_zegrepi_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_zegrepi_args__free_unpacked
                     (GuestfsZegrepiArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsZegrepiRet methods */
void   guestfs_zegrepi_ret__init
                     (GuestfsZegrepiRet         *message);
size_t guestfs_zegrepi_ret__get_packed_size
                     (const GuestfsZegrepiRet   *message);
size_t guestfs_zegrepi_ret__pack
                     (const GuestfsZegrepiRet   *message,
                      uint8_t             *out);
size_t guestfs_zegrepi_ret__pack_to_buffer
                     (const GuestfsZegrepiRet   *message,
                      ProtobufCBuffer     *buffer);
GuestfsZegrepiRet *
       guestfs_zegrepi_ret__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_zegrepi_ret__free_unpacked
                     (GuestfsZegrepiRet *message,
                      ProtobufCAllocator *allocator);
/* GuestfsZfgrepiArgs methods */
void   guestfs_zfgrepi_args__init
                     (GuestfsZfgrepiArgs         *message);
size_t guestfs_zfgrepi_args__get_packed_size
                     (const GuestfsZfgrepiArgs   *message);
size_t guestfs_zfgrepi_args__pack
                     (const GuestfsZfgrepiArgs   *message,
                      uint8_t             *out);
size_t guestfs_zfgrepi_args__pack_to_buffer
                     (const GuestfsZfgrepiArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsZfgrepiArgs *
       guestfs_zfgrepi_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_zfgrepi_args__free_unpacked
                     (GuestfsZfgrepiArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsZfgrepiRet methods */
void   guestfs_zfgrepi_ret__init
                     (GuestfsZfgrepiRet         *message);
size_t guestfs_zfgrepi_ret__get_packed_size
                     (const GuestfsZfgrepiRet   *message);
size_t guestfs_zfgrepi_ret__pack
                     (const GuestfsZfgrepiRet   *message,
                      uint8_t             *out);
size_t guestfs_zfgrepi_ret__pack_to_buffer
                     (const GuestfsZfgrepiRet   *message,
                      ProtobufCBuffer     *buffer);
GuestfsZfgrepiRet *
       guestfs_zfgrepi_ret__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_zfgrepi_ret__free_unpacked
                     (GuestfsZfgrepiRet *message,
                      ProtobufCAllocator *allocator);
/* GuestfsRealpathArgs methods */
void   guestfs_realpath_args__init
                     (GuestfsRealpathArgs         *message);
size_t guestfs_realpath_args__get_packed_size
                     (const GuestfsRealpathArgs   *message);
size_t guestfs_realpath_args__pack
                     (const GuestfsRealpathArgs   *message,
                      uint8_t             *out);
size_t guestfs_realpath_args__pack_to_buffer
                     (const GuestfsRealpathArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsRealpathArgs *
       guestfs_realpath_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_realpath_args__free_unpacked
                     (GuestfsRealpathArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsRealpathRet methods */
void   guestfs_realpath_ret__init
                     (GuestfsRealpathRet         *message);
size_t guestfs_realpath_ret__get_packed_size
                     (const GuestfsRealpathRet   *message);
size_t guestfs_realpath_ret__pack
                     (const GuestfsRealpathRet   *message,
                      uint8_t             *out);
size_t guestfs_realpath_ret__pack_to_buffer
                     (const GuestfsRealpathRet   *message,
                      ProtobufCBuffer     *buffer);
GuestfsRealpathRet *
       guestfs_realpath_ret__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_realpath_ret__free_unpacked
                     (GuestfsRealpathRet *message,
                      ProtobufCAllocator *allocator);
/* GuestfsLnArgs methods */
void   guestfs_ln_args__init
                     (GuestfsLnArgs         *message);
size_t guestfs_ln_args__get_packed_size
                     (const GuestfsLnArgs   *message);
size_t guestfs_ln_args__pack
                     (const GuestfsLnArgs   *message,
                      uint8_t             *out);
size_t guestfs_ln_args__pack_to_buffer
                     (const GuestfsLnArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsLnArgs *
       guestfs_ln_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_ln_args__free_unpacked
                     (GuestfsLnArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsLnfArgs methods */
void   guestfs_lnf_args__init
                     (GuestfsLnfArgs         *message);
size_t guestfs_lnf_args__get_packed_size
                     (const GuestfsLnfArgs   *message);
size_t guestfs_lnf_args__pack
                     (const GuestfsLnfArgs   *message,
                      uint8_t             *out);
size_t guestfs_lnf_args__pack_to_buffer
                     (const GuestfsLnfArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsLnfArgs *
       guestfs_lnf_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_lnf_args__free_unpacked
                     (GuestfsLnfArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsLnsArgs methods */
void   guestfs_lns_args__init
                     (GuestfsLnsArgs         *message);
size_t guestfs_lns_args__get_packed_size
                     (const GuestfsLnsArgs   *message);
size_t guestfs_lns_args__pack
                     (const GuestfsLnsArgs   *message,
                      uint8_t             *out);
size_t guestfs_lns_args__pack_to_buffer
                     (const GuestfsLnsArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsLnsArgs *
       guestfs_lns_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_lns_args__free_unpacked
                     (GuestfsLnsArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsLnSfArgs methods */
void   guestfs_ln_sf_args__init
                     (GuestfsLnSfArgs         *message);
size_t guestfs_ln_sf_args__get_packed_size
                     (const GuestfsLnSfArgs   *message);
size_t guestfs_ln_sf_args__pack
                     (const GuestfsLnSfArgs   *message,
                      uint8_t             *out);
size_t guestfs_ln_sf_args__pack_to_buffer
                     (const GuestfsLnSfArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsLnSfArgs *
       guestfs_ln_sf_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_ln_sf_args__free_unpacked
                     (GuestfsLnSfArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsReadlinkArgs methods */
void   guestfs_readlink_args__init
                     (GuestfsReadlinkArgs         *message);
size_t guestfs_readlink_args__get_packed_size
                     (const GuestfsReadlinkArgs   *message);
size_t guestfs_readlink_args__pack
                     (const GuestfsReadlinkArgs   *message,
                      uint8_t             *out);
size_t guestfs_readlink_args__pack_to_buffer
                     (const GuestfsReadlinkArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsReadlinkArgs *
       guestfs_readlink_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_readlink_args__free_unpacked
                     (GuestfsReadlinkArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsReadlinkRet methods */
void   guestfs_readlink_ret__init
                     (GuestfsReadlinkRet         *message);
size_t guestfs_readlink_ret__get_packed_size
                     (const GuestfsReadlinkRet   *message);
size_t guestfs_readlink_ret__pack
                     (const GuestfsReadlinkRet   *message,
                      uint8_t             *out);
size_t guestfs_readlink_ret__pack_to_buffer
                     (const GuestfsReadlinkRet   *message,
                      ProtobufCBuffer     *buffer);
GuestfsReadlinkRet *
       guestfs_readlink_ret__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_readlink_ret__free_unpacked
                     (GuestfsReadlinkRet *message,
                      ProtobufCAllocator *allocator);
/* GuestfsFallocateArgs methods */
void   guestfs_fallocate_args__init
                     (GuestfsFallocateArgs         *message);
size_t guestfs_fallocate_args__get_packed_size
                     (const GuestfsFallocateArgs   *message);
size_t guestfs_fallocate_args__pack
                     (const GuestfsFallocateArgs   *message,
                      uint8_t             *out);
size_t guestfs_fallocate_args__pack_to_buffer
                     (const GuestfsFallocateArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsFallocateArgs *
       guestfs_fallocate_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_fallocate_args__free_unpacked
                     (GuestfsFallocateArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsSwaponDeviceArgs methods */
void   guestfs_swapon_device_args__init
                     (GuestfsSwaponDeviceArgs         *message);
size_t guestfs_swapon_device_args__get_packed_size
                     (const GuestfsSwaponDeviceArgs   *message);
size_t guestfs_swapon_device_args__pack
                     (const GuestfsSwaponDeviceArgs   *message,
                      uint8_t             *out);
size_t guestfs_swapon_device_args__pack_to_buffer
                     (const GuestfsSwaponDeviceArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsSwaponDeviceArgs *
       guestfs_swapon_device_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_swapon_device_args__free_unpacked
                     (GuestfsSwaponDeviceArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsSwapoffDeviceArgs methods */
void   guestfs_swapoff_device_args__init
                     (GuestfsSwapoffDeviceArgs         *message);
size_t guestfs_swapoff_device_args__get_packed_size
                     (const GuestfsSwapoffDeviceArgs   *message);
size_t guestfs_swapoff_device_args__pack
                     (const GuestfsSwapoffDeviceArgs   *message,
                      uint8_t             *out);
size_t guestfs_swapoff_device_args__pack_to_buffer
                     (const GuestfsSwapoffDeviceArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsSwapoffDeviceArgs *
       guestfs_swapoff_device_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_swapoff_device_args__free_unpacked
                     (GuestfsSwapoffDeviceArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsSwaponFileArgs methods */
void   guestfs_swapon_file_args__init
                     (GuestfsSwaponFileArgs         *message);
size_t guestfs_swapon_file_args__get_packed_size
                     (const GuestfsSwaponFileArgs   *message);
size_t guestfs_swapon_file_args__pack
                     (const GuestfsSwaponFileArgs   *message,
                      uint8_t             *out);
size_t guestfs_swapon_file_args__pack_to_buffer
                     (const GuestfsSwaponFileArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsSwaponFileArgs *
       guestfs_swapon_file_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_swapon_file_args__free_unpacked
                     (GuestfsSwaponFileArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsSwapoffFileArgs methods */
void   guestfs_swapoff_file_args__init
                     (GuestfsSwapoffFileArgs         *message);
size_t guestfs_swapoff_file_args__get_packed_size
                     (const GuestfsSwapoffFileArgs   *message);
size_t guestfs_swapoff_file_args__pack
                     (const GuestfsSwapoffFileArgs   *message,
                      uint8_t             *out);
size_t guestfs_swapoff_file_args__pack_to_buffer
                     (const GuestfsSwapoffFileArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsSwapoffFileArgs *
       guestfs_swapoff_file_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_swapoff_file_args__free_unpacked
                     (GuestfsSwapoffFileArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsSwaponLabelArgs methods */
void   guestfs_swapon_label_args__init
                     (GuestfsSwaponLabelArgs         *message);
size_t guestfs_swapon_label_args__get_packed_size
                     (const GuestfsSwaponLabelArgs   *message);
size_t guestfs_swapon_label_args__pack
                     (const GuestfsSwaponLabelArgs   *message,
                      uint8_t             *out);
size_t guestfs_swapon_label_args__pack_to_buffer
                     (const GuestfsSwaponLabelArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsSwaponLabelArgs *
       guestfs_swapon_label_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_swapon_label_args__free_unpacked
                     (GuestfsSwaponLabelArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsSwapoffLabelArgs methods */
void   guestfs_swapoff_label_args__init
                     (GuestfsSwapoffLabelArgs         *message);
size_t guestfs_swapoff_label_args__get_packed_size
                     (const GuestfsSwapoffLabelArgs   *message);
size_t guestfs_swapoff_label_args__pack
                     (const GuestfsSwapoffLabelArgs   *message,
                      uint8_t             *out);
size_t guestfs_swapoff_label_args__pack_to_buffer
                     (const GuestfsSwapoffLabelArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsSwapoffLabelArgs *
       guestfs_swapoff_label_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_swapoff_label_args__free_unpacked
                     (GuestfsSwapoffLabelArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsSwaponUuidArgs methods */
void   guestfs_swapon_uuid_args__init
                     (GuestfsSwaponUuidArgs         *message);
size_t guestfs_swapon_uuid_args__get_packed_size
                     (const GuestfsSwaponUuidArgs   *message);
size_t guestfs_swapon_uuid_args__pack
                     (const GuestfsSwaponUuidArgs   *message,
                      uint8_t             *out);
size_t guestfs_swapon_uuid_args__pack_to_buffer
                     (const GuestfsSwaponUuidArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsSwaponUuidArgs *
       guestfs_swapon_uuid_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_swapon_uuid_args__free_unpacked
                     (GuestfsSwaponUuidArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsSwapoffUuidArgs methods */
void   guestfs_swapoff_uuid_args__init
                     (GuestfsSwapoffUuidArgs         *message);
size_t guestfs_swapoff_uuid_args__get_packed_size
                     (const GuestfsSwapoffUuidArgs   *message);
size_t guestfs_swapoff_uuid_args__pack
                     (const GuestfsSwapoffUuidArgs   *message,
                      uint8_t             *out);
size_t guestfs_swapoff_uuid_args__pack_to_buffer
                     (const GuestfsSwapoffUuidArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsSwapoffUuidArgs *
       guestfs_swapoff_uuid_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_swapoff_uuid_args__free_unpacked
                     (GuestfsSwapoffUuidArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsMkswapFileArgs methods */
void   guestfs_mkswap_file_args__init
                     (GuestfsMkswapFileArgs         *message);
size_t guestfs_mkswap_file_args__get_packed_size
                     (const GuestfsMkswapFileArgs   *message);
size_t guestfs_mkswap_file_args__pack
                     (const GuestfsMkswapFileArgs   *message,
                      uint8_t             *out);
size_t guestfs_mkswap_file_args__pack_to_buffer
                     (const GuestfsMkswapFileArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsMkswapFileArgs *
       guestfs_mkswap_file_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_mkswap_file_args__free_unpacked
                     (GuestfsMkswapFileArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsInotifyInitArgs methods */
void   guestfs_inotify_init_args__init
                     (GuestfsInotifyInitArgs         *message);
size_t guestfs_inotify_init_args__get_packed_size
                     (const GuestfsInotifyInitArgs   *message);
size_t guestfs_inotify_init_args__pack
                     (const GuestfsInotifyInitArgs   *message,
                      uint8_t             *out);
size_t guestfs_inotify_init_args__pack_to_buffer
                     (const GuestfsInotifyInitArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsInotifyInitArgs *
       guestfs_inotify_init_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_inotify_init_args__free_unpacked
                     (GuestfsInotifyInitArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsInotifyAddWatchArgs methods */
void   guestfs_inotify_add_watch_args__init
                     (GuestfsInotifyAddWatchArgs         *message);
size_t guestfs_inotify_add_watch_args__get_packed_size
                     (const GuestfsInotifyAddWatchArgs   *message);
size_t guestfs_inotify_add_watch_args__pack
                     (const GuestfsInotifyAddWatchArgs   *message,
                      uint8_t             *out);
size_t guestfs_inotify_add_watch_args__pack_to_buffer
                     (const GuestfsInotifyAddWatchArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsInotifyAddWatchArgs *
       guestfs_inotify_add_watch_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_inotify_add_watch_args__free_unpacked
                     (GuestfsInotifyAddWatchArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsInotifyAddWatchRet methods */
void   guestfs_inotify_add_watch_ret__init
                     (GuestfsInotifyAddWatchRet         *message);
size_t guestfs_inotify_add_watch_ret__get_packed_size
                     (const GuestfsInotifyAddWatchRet   *message);
size_t guestfs_inotify_add_watch_ret__pack
                     (const GuestfsInotifyAddWatchRet   *message,
                      uint8_t             *out);
size_t guestfs_inotify_add_watch_ret__pack_to_buffer
                     (const GuestfsInotifyAddWatchRet   *message,
                      ProtobufCBuffer     *buffer);
GuestfsInotifyAddWatchRet *
       guestfs_inotify_add_watch_ret__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_inotify_add_watch_ret__free_unpacked
                     (GuestfsInotifyAddWatchRet *message,
                      ProtobufCAllocator *allocator);
/* GuestfsInotifyRmWatchArgs methods */
void   guestfs_inotify_rm_watch_args__init
                     (GuestfsInotifyRmWatchArgs         *message);
size_t guestfs_inotify_rm_watch_args__get_packed_size
                     (const GuestfsInotifyRmWatchArgs   *message);
size_t guestfs_inotify_rm_watch_args__pack
                     (const GuestfsInotifyRmWatchArgs   *message,
                      uint8_t             *out);
size_t guestfs_inotify_rm_watch_args__pack_to_buffer
                     (const GuestfsInotifyRmWatchArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsInotifyRmWatchArgs *
       guestfs_inotify_rm_watch_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_inotify_rm_watch_args__free_unpacked
                     (GuestfsInotifyRmWatchArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsInotifyReadRet methods */
void   guestfs_inotify_read_ret__init
                     (GuestfsInotifyReadRet         *message);
size_t guestfs_inotify_read_ret__get_packed_size
                     (const GuestfsInotifyReadRet   *message);
size_t guestfs_inotify_read_ret__pack
                     (const GuestfsInotifyReadRet   *message,
                      uint8_t             *out);
size_t guestfs_inotify_read_ret__pack_to_buffer
                     (const GuestfsInotifyReadRet   *message,
                      ProtobufCBuffer     *buffer);
GuestfsInotifyReadRet *
       guestfs_inotify_read_ret__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_inotify_read_ret__free_unpacked
                     (GuestfsInotifyReadRet *message,
                      ProtobufCAllocator *allocator);
/* GuestfsInotifyFilesRet methods */
void   guestfs_inotify_files_ret__init
                     (GuestfsInotifyFilesRet         *message);
size_t guestfs_inotify_files_ret__get_packed_size
                     (const GuestfsInotifyFilesRet   *message);
size_t guestfs_inotify_files_ret__pack
                     (const GuestfsInotifyFilesRet   *message,
                      uint8_t             *out);
size_t guestfs_inotify_files_ret__pack_to_buffer
                     (const GuestfsInotifyFilesRet   *message,
                      ProtobufCBuffer     *buffer);
GuestfsInotifyFilesRet *
       guestfs_inotify_files_ret__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_inotify_files_ret__free_unpacked
                     (GuestfsInotifyFilesRet *message,
                      ProtobufCAllocator *allocator);
/* GuestfsSetconArgs methods */
void   guestfs_setcon_args__init
                     (GuestfsSetconArgs         *message);
size_t guestfs_setcon_args__get_packed_size
                     (const GuestfsSetconArgs   *message);
size_t guestfs_setcon_args__pack
                     (const GuestfsSetconArgs   *message,
                      uint8_t             *out);
size_t guestfs_setcon_args__pack_to_buffer
                     (const GuestfsSetconArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsSetconArgs *
       guestfs_setcon_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_setcon_args__free_unpacked
                     (GuestfsSetconArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsGetconRet methods */
void   guestfs_getcon_ret__init
                     (GuestfsGetconRet         *message);
size_t guestfs_getcon_ret__get_packed_size
                     (const GuestfsGetconRet   *message);
size_t guestfs_getcon_ret__pack
                     (const GuestfsGetconRet   *message,
                      uint8_t             *out);
size_t guestfs_getcon_ret__pack_to_buffer
                     (const GuestfsGetconRet   *message,
                      ProtobufCBuffer     *buffer);
GuestfsGetconRet *
       guestfs_getcon_ret__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_getcon_ret__free_unpacked
                     (GuestfsGetconRet *message,
                      ProtobufCAllocator *allocator);
/* GuestfsMkfsBbArgs methods */
void   guestfs_mkfs_bb_args__init
                     (GuestfsMkfsBbArgs         *message);
size_t guestfs_mkfs_bb_args__get_packed_size
                     (const GuestfsMkfsBbArgs   *message);
size_t guestfs_mkfs_bb_args__pack
                     (const GuestfsMkfsBbArgs   *message,
                      uint8_t             *out);
size_t guestfs_mkfs_bb_args__pack_to_buffer
                     (const GuestfsMkfsBbArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsMkfsBbArgs *
       guestfs_mkfs_bb_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_mkfs_bb_args__free_unpacked
                     (GuestfsMkfsBbArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsMke2journalArgs methods */
void   guestfs_mke2journal_args__init
                     (GuestfsMke2journalArgs         *message);
size_t guestfs_mke2journal_args__get_packed_size
                     (const GuestfsMke2journalArgs   *message);
size_t guestfs_mke2journal_args__pack
                     (const GuestfsMke2journalArgs   *message,
                      uint8_t             *out);
size_t guestfs_mke2journal_args__pack_to_buffer
                     (const GuestfsMke2journalArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsMke2journalArgs *
       guestfs_mke2journal_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_mke2journal_args__free_unpacked
                     (GuestfsMke2journalArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsMke2journalLlArgs methods */
void   guestfs_mke2journal_ll_args__init
                     (GuestfsMke2journalLlArgs         *message);
size_t guestfs_mke2journal_ll_args__get_packed_size
                     (const GuestfsMke2journalLlArgs   *message);
size_t guestfs_mke2journal_ll_args__pack
                     (const GuestfsMke2journalLlArgs   *message,
                      uint8_t             *out);
size_t guestfs_mke2journal_ll_args__pack_to_buffer
                     (const GuestfsMke2journalLlArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsMke2journalLlArgs *
       guestfs_mke2journal_ll_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_mke2journal_ll_args__free_unpacked
                     (GuestfsMke2journalLlArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsMke2journalUuArgs methods */
void   guestfs_mke2journal_uu_args__init
                     (GuestfsMke2journalUuArgs         *message);
size_t guestfs_mke2journal_uu_args__get_packed_size
                     (const GuestfsMke2journalUuArgs   *message);
size_t guestfs_mke2journal_uu_args__pack
                     (const GuestfsMke2journalUuArgs   *message,
                      uint8_t             *out);
size_t guestfs_mke2journal_uu_args__pack_to_buffer
                     (const GuestfsMke2journalUuArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsMke2journalUuArgs *
       guestfs_mke2journal_uu_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_mke2journal_uu_args__free_unpacked
                     (GuestfsMke2journalUuArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsMke2fsJjArgs methods */
void   guestfs_mke2fs_jj_args__init
                     (GuestfsMke2fsJjArgs         *message);
size_t guestfs_mke2fs_jj_args__get_packed_size
                     (const GuestfsMke2fsJjArgs   *message);
size_t guestfs_mke2fs_jj_args__pack
                     (const GuestfsMke2fsJjArgs   *message,
                      uint8_t             *out);
size_t guestfs_mke2fs_jj_args__pack_to_buffer
                     (const GuestfsMke2fsJjArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsMke2fsJjArgs *
       guestfs_mke2fs_jj_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_mke2fs_jj_args__free_unpacked
                     (GuestfsMke2fsJjArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsMke2fsJlArgs methods */
void   guestfs_mke2fs_jl_args__init
                     (GuestfsMke2fsJlArgs         *message);
size_t guestfs_mke2fs_jl_args__get_packed_size
                     (const GuestfsMke2fsJlArgs   *message);
size_t guestfs_mke2fs_jl_args__pack
                     (const GuestfsMke2fsJlArgs   *message,
                      uint8_t             *out);
size_t guestfs_mke2fs_jl_args__pack_to_buffer
                     (const GuestfsMke2fsJlArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsMke2fsJlArgs *
       guestfs_mke2fs_jl_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_mke2fs_jl_args__free_unpacked
                     (GuestfsMke2fsJlArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsMke2fsJuArgs methods */
void   guestfs_mke2fs_ju_args__init
                     (GuestfsMke2fsJuArgs         *message);
size_t guestfs_mke2fs_ju_args__get_packed_size
                     (const GuestfsMke2fsJuArgs   *message);
size_t guestfs_mke2fs_ju_args__pack
                     (const GuestfsMke2fsJuArgs   *message,
                      uint8_t             *out);
size_t guestfs_mke2fs_ju_args__pack_to_buffer
                     (const GuestfsMke2fsJuArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsMke2fsJuArgs *
       guestfs_mke2fs_ju_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_mke2fs_ju_args__free_unpacked
                     (GuestfsMke2fsJuArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsModprobeArgs methods */
void   guestfs_modprobe_args__init
                     (GuestfsModprobeArgs         *message);
size_t guestfs_modprobe_args__get_packed_size
                     (const GuestfsModprobeArgs   *message);
size_t guestfs_modprobe_args__pack
                     (const GuestfsModprobeArgs   *message,
                      uint8_t             *out);
size_t guestfs_modprobe_args__pack_to_buffer
                     (const GuestfsModprobeArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsModprobeArgs *
       guestfs_modprobe_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_modprobe_args__free_unpacked
                     (GuestfsModprobeArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsEchoDaemonArgs methods */
void   guestfs_echo_daemon_args__init
                     (GuestfsEchoDaemonArgs         *message);
size_t guestfs_echo_daemon_args__get_packed_size
                     (const GuestfsEchoDaemonArgs   *message);
size_t guestfs_echo_daemon_args__pack
                     (const GuestfsEchoDaemonArgs   *message,
                      uint8_t             *out);
size_t guestfs_echo_daemon_args__pack_to_buffer
                     (const GuestfsEchoDaemonArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsEchoDaemonArgs *
       guestfs_echo_daemon_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_echo_daemon_args__free_unpacked
                     (GuestfsEchoDaemonArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsEchoDaemonRet methods */
void   guestfs_echo_daemon_ret__init
                     (GuestfsEchoDaemonRet         *message);
size_t guestfs_echo_daemon_ret__get_packed_size
                     (const GuestfsEchoDaemonRet   *message);
size_t guestfs_echo_daemon_ret__pack
                     (const GuestfsEchoDaemonRet   *message,
                      uint8_t             *out);
size_t guestfs_echo_daemon_ret__pack_to_buffer
                     (const GuestfsEchoDaemonRet   *message,
                      ProtobufCBuffer     *buffer);
GuestfsEchoDaemonRet *
       guestfs_echo_daemon_ret__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_echo_daemon_ret__free_unpacked
                     (GuestfsEchoDaemonRet *message,
                      ProtobufCAllocator *allocator);
/* GuestfsFind0Args methods */
void   guestfs_find0_args__init
                     (GuestfsFind0Args         *message);
size_t guestfs_find0_args__get_packed_size
                     (const GuestfsFind0Args   *message);
size_t guestfs_find0_args__pack
                     (const GuestfsFind0Args   *message,
                      uint8_t             *out);
size_t guestfs_find0_args__pack_to_buffer
                     (const GuestfsFind0Args   *message,
                      ProtobufCBuffer     *buffer);
GuestfsFind0Args *
       guestfs_find0_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_find0_args__free_unpacked
                     (GuestfsFind0Args *message,
                      ProtobufCAllocator *allocator);
/* GuestfsCaseSensitivePathArgs methods */
void   guestfs_case_sensitive_path_args__init
                     (GuestfsCaseSensitivePathArgs         *message);
size_t guestfs_case_sensitive_path_args__get_packed_size
                     (const GuestfsCaseSensitivePathArgs   *message);
size_t guestfs_case_sensitive_path_args__pack
                     (const GuestfsCaseSensitivePathArgs   *message,
                      uint8_t             *out);
size_t guestfs_case_sensitive_path_args__pack_to_buffer
                     (const GuestfsCaseSensitivePathArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsCaseSensitivePathArgs *
       guestfs_case_sensitive_path_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_case_sensitive_path_args__free_unpacked
                     (GuestfsCaseSensitivePathArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsCaseSensitivePathRet methods */
void   guestfs_case_sensitive_path_ret__init
                     (GuestfsCaseSensitivePathRet         *message);
size_t guestfs_case_sensitive_path_ret__get_packed_size
                     (const GuestfsCaseSensitivePathRet   *message);
size_t guestfs_case_sensitive_path_ret__pack
                     (const GuestfsCaseSensitivePathRet   *message,
                      uint8_t             *out);
size_t guestfs_case_sensitive_path_ret__pack_to_buffer
                     (const GuestfsCaseSensitivePathRet   *message,
                      ProtobufCBuffer     *buffer);
GuestfsCaseSensitivePathRet *
       guestfs_case_sensitive_path_ret__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_case_sensitive_path_ret__free_unpacked
                     (GuestfsCaseSensitivePathRet *message,
                      ProtobufCAllocator *allocator);
/* GuestfsVfsTypeArgs methods */
void   guestfs_vfs_type_args__init
                     (GuestfsVfsTypeArgs         *message);
size_t guestfs_vfs_type_args__get_packed_size
                     (const GuestfsVfsTypeArgs   *message);
size_t guestfs_vfs_type_args__pack
                     (const GuestfsVfsTypeArgs   *message,
                      uint8_t             *out);
size_t guestfs_vfs_type_args__pack_to_buffer
                     (const GuestfsVfsTypeArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsVfsTypeArgs *
       guestfs_vfs_type_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_vfs_type_args__free_unpacked
                     (GuestfsVfsTypeArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsVfsTypeRet methods */
void   guestfs_vfs_type_ret__init
                     (GuestfsVfsTypeRet         *message);
size_t guestfs_vfs_type_ret__get_packed_size
                     (const GuestfsVfsTypeRet   *message);
size_t guestfs_vfs_type_ret__pack
                     (const GuestfsVfsTypeRet   *message,
                      uint8_t             *out);
size_t guestfs_vfs_type_ret__pack_to_buffer
                     (const GuestfsVfsTypeRet   *message,
                      ProtobufCBuffer     *buffer);
GuestfsVfsTypeRet *
       guestfs_vfs_type_ret__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_vfs_type_ret__free_unpacked
                     (GuestfsVfsTypeRet *message,
                      ProtobufCAllocator *allocator);
/* GuestfsTruncateArgs methods */
void   guestfs_truncate_args__init
                     (GuestfsTruncateArgs         *message);
size_t guestfs_truncate_args__get_packed_size
                     (const GuestfsTruncateArgs   *message);
size_t guestfs_truncate_args__pack
                     (const GuestfsTruncateArgs   *message,
                      uint8_t             *out);
size_t guestfs_truncate_args__pack_to_buffer
                     (const GuestfsTruncateArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsTruncateArgs *
       guestfs_truncate_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_truncate_args__free_unpacked
                     (GuestfsTruncateArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsTruncateSizeArgs methods */
void   guestfs_truncate_size_args__init
                     (GuestfsTruncateSizeArgs         *message);
size_t guestfs_truncate_size_args__get_packed_size
                     (const GuestfsTruncateSizeArgs   *message);
size_t guestfs_truncate_size_args__pack
                     (const GuestfsTruncateSizeArgs   *message,
                      uint8_t             *out);
size_t guestfs_truncate_size_args__pack_to_buffer
                     (const GuestfsTruncateSizeArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsTruncateSizeArgs *
       guestfs_truncate_size_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_truncate_size_args__free_unpacked
                     (GuestfsTruncateSizeArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsUtimensArgs methods */
void   guestfs_utimens_args__init
                     (GuestfsUtimensArgs         *message);
size_t guestfs_utimens_args__get_packed_size
                     (const GuestfsUtimensArgs   *message);
size_t guestfs_utimens_args__pack
                     (const GuestfsUtimensArgs   *message,
                      uint8_t             *out);
size_t guestfs_utimens_args__pack_to_buffer
                     (const GuestfsUtimensArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsUtimensArgs *
       guestfs_utimens_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_utimens_args__free_unpacked
                     (GuestfsUtimensArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsMkdirModeArgs methods */
void   guestfs_mkdir_mode_args__init
                     (GuestfsMkdirModeArgs         *message);
size_t guestfs_mkdir_mode_args__get_packed_size
                     (const GuestfsMkdirModeArgs   *message);
size_t guestfs_mkdir_mode_args__pack
                     (const GuestfsMkdirModeArgs   *message,
                      uint8_t             *out);
size_t guestfs_mkdir_mode_args__pack_to_buffer
                     (const GuestfsMkdirModeArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsMkdirModeArgs *
       guestfs_mkdir_mode_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_mkdir_mode_args__free_unpacked
                     (GuestfsMkdirModeArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsLchownArgs methods */
void   guestfs_lchown_args__init
                     (GuestfsLchownArgs         *message);
size_t guestfs_lchown_args__get_packed_size
                     (const GuestfsLchownArgs   *message);
size_t guestfs_lchown_args__pack
                     (const GuestfsLchownArgs   *message,
                      uint8_t             *out);
size_t guestfs_lchown_args__pack_to_buffer
                     (const GuestfsLchownArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsLchownArgs *
       guestfs_lchown_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_lchown_args__free_unpacked
                     (GuestfsLchownArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsInternalLxattrlistArgs methods */
void   guestfs_internal_lxattrlist_args__init
                     (GuestfsInternalLxattrlistArgs         *message);
size_t guestfs_internal_lxattrlist_args__get_packed_size
                     (const GuestfsInternalLxattrlistArgs   *message);
size_t guestfs_internal_lxattrlist_args__pack
                     (const GuestfsInternalLxattrlistArgs   *message,
                      uint8_t             *out);
size_t guestfs_internal_lxattrlist_args__pack_to_buffer
                     (const GuestfsInternalLxattrlistArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsInternalLxattrlistArgs *
       guestfs_internal_lxattrlist_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_internal_lxattrlist_args__free_unpacked
                     (GuestfsInternalLxattrlistArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsInternalLxattrlistRet methods */
void   guestfs_internal_lxattrlist_ret__init
                     (GuestfsInternalLxattrlistRet         *message);
size_t guestfs_internal_lxattrlist_ret__get_packed_size
                     (const GuestfsInternalLxattrlistRet   *message);
size_t guestfs_internal_lxattrlist_ret__pack
                     (const GuestfsInternalLxattrlistRet   *message,
                      uint8_t             *out);
size_t guestfs_internal_lxattrlist_ret__pack_to_buffer
                     (const GuestfsInternalLxattrlistRet   *message,
                      ProtobufCBuffer     *buffer);
GuestfsInternalLxattrlistRet *
       guestfs_internal_lxattrlist_ret__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_internal_lxattrlist_ret__free_unpacked
                     (GuestfsInternalLxattrlistRet *message,
                      ProtobufCAllocator *allocator);
/* GuestfsInternalReadlinklistArgs methods */
void   guestfs_internal_readlinklist_args__init
                     (GuestfsInternalReadlinklistArgs         *message);
size_t guestfs_internal_readlinklist_args__get_packed_size
                     (const GuestfsInternalReadlinklistArgs   *message);
size_t guestfs_internal_readlinklist_args__pack
                     (const GuestfsInternalReadlinklistArgs   *message,
                      uint8_t             *out);
size_t guestfs_internal_readlinklist_args__pack_to_buffer
                     (const GuestfsInternalReadlinklistArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsInternalReadlinklistArgs *
       guestfs_internal_readlinklist_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_internal_readlinklist_args__free_unpacked
                     (GuestfsInternalReadlinklistArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsInternalReadlinklistRet methods */
void   guestfs_internal_readlinklist_ret__init
                     (GuestfsInternalReadlinklistRet         *message);
size_t guestfs_internal_readlinklist_ret__get_packed_size
                     (const GuestfsInternalReadlinklistRet   *message);
size_t guestfs_internal_readlinklist_ret__pack
                     (const GuestfsInternalReadlinklistRet   *message,
                      uint8_t             *out);
size_t guestfs_internal_readlinklist_ret__pack_to_buffer
                     (const GuestfsInternalReadlinklistRet   *message,
                      ProtobufCBuffer     *buffer);
GuestfsInternalReadlinklistRet *
       guestfs_internal_readlinklist_ret__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_internal_readlinklist_ret__free_unpacked
                     (GuestfsInternalReadlinklistRet *message,
                      ProtobufCAllocator *allocator);
/* GuestfsPreadArgs methods */
void   guestfs_pread_args__init
                     (GuestfsPreadArgs         *message);
size_t guestfs_pread_args__get_packed_size
                     (const GuestfsPreadArgs   *message);
size_t guestfs_pread_args__pack
                     (const GuestfsPreadArgs   *message,
                      uint8_t             *out);
size_t guestfs_pread_args__pack_to_buffer
                     (const GuestfsPreadArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsPreadArgs *
       guestfs_pread_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_pread_args__free_unpacked
                     (GuestfsPreadArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsPreadRet methods */
void   guestfs_pread_ret__init
                     (GuestfsPreadRet         *message);
size_t guestfs_pread_ret__get_packed_size
                     (const GuestfsPreadRet   *message);
size_t guestfs_pread_ret__pack
                     (const GuestfsPreadRet   *message,
                      uint8_t             *out);
size_t guestfs_pread_ret__pack_to_buffer
                     (const GuestfsPreadRet   *message,
                      ProtobufCBuffer     *buffer);
GuestfsPreadRet *
       guestfs_pread_ret__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_pread_ret__free_unpacked
                     (GuestfsPreadRet *message,
                      ProtobufCAllocator *allocator);
/* GuestfsPartInitArgs methods */
void   guestfs_part_init_args__init
                     (GuestfsPartInitArgs         *message);
size_t guestfs_part_init_args__get_packed_size
                     (const GuestfsPartInitArgs   *message);
size_t guestfs_part_init_args__pack
                     (const GuestfsPartInitArgs   *message,
                      uint8_t             *out);
size_t guestfs_part_init_args__pack_to_buffer
                     (const GuestfsPartInitArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsPartInitArgs *
       guestfs_part_init_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_part_init_args__free_unpacked
                     (GuestfsPartInitArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsPartAddArgs methods */
void   guestfs_part_add_args__init
                     (GuestfsPartAddArgs         *message);
size_t guestfs_part_add_args__get_packed_size
                     (const GuestfsPartAddArgs   *message);
size_t guestfs_part_add_args__pack
                     (const GuestfsPartAddArgs   *message,
                      uint8_t             *out);
size_t guestfs_part_add_args__pack_to_buffer
                     (const GuestfsPartAddArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsPartAddArgs *
       guestfs_part_add_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_part_add_args__free_unpacked
                     (GuestfsPartAddArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsPartDiskArgs methods */
void   guestfs_part_disk_args__init
                     (GuestfsPartDiskArgs         *message);
size_t guestfs_part_disk_args__get_packed_size
                     (const GuestfsPartDiskArgs   *message);
size_t guestfs_part_disk_args__pack
                     (const GuestfsPartDiskArgs   *message,
                      uint8_t             *out);
size_t guestfs_part_disk_args__pack_to_buffer
                     (const GuestfsPartDiskArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsPartDiskArgs *
       guestfs_part_disk_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_part_disk_args__free_unpacked
                     (GuestfsPartDiskArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsPartSetBootableArgs methods */
void   guestfs_part_set_bootable_args__init
                     (GuestfsPartSetBootableArgs         *message);
size_t guestfs_part_set_bootable_args__get_packed_size
                     (const GuestfsPartSetBootableArgs   *message);
size_t guestfs_part_set_bootable_args__pack
                     (const GuestfsPartSetBootableArgs   *message,
                      uint8_t             *out);
size_t guestfs_part_set_bootable_args__pack_to_buffer
                     (const GuestfsPartSetBootableArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsPartSetBootableArgs *
       guestfs_part_set_bootable_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_part_set_bootable_args__free_unpacked
                     (GuestfsPartSetBootableArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsPartSetNameArgs methods */
void   guestfs_part_set_name_args__init
                     (GuestfsPartSetNameArgs         *message);
size_t guestfs_part_set_name_args__get_packed_size
                     (const GuestfsPartSetNameArgs   *message);
size_t guestfs_part_set_name_args__pack
                     (const GuestfsPartSetNameArgs   *message,
                      uint8_t             *out);
size_t guestfs_part_set_name_args__pack_to_buffer
                     (const GuestfsPartSetNameArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsPartSetNameArgs *
       guestfs_part_set_name_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_part_set_name_args__free_unpacked
                     (GuestfsPartSetNameArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsPartListArgs methods */
void   guestfs_part_list_args__init
                     (GuestfsPartListArgs         *message);
size_t guestfs_part_list_args__get_packed_size
                     (const GuestfsPartListArgs   *message);
size_t guestfs_part_list_args__pack
                     (const GuestfsPartListArgs   *message,
                      uint8_t             *out);
size_t guestfs_part_list_args__pack_to_buffer
                     (const GuestfsPartListArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsPartListArgs *
       guestfs_part_list_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_part_list_args__free_unpacked
                     (GuestfsPartListArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsPartListRet methods */
void   guestfs_part_list_ret__init
                     (GuestfsPartListRet         *message);
size_t guestfs_part_list_ret__get_packed_size
                     (const GuestfsPartListRet   *message);
size_t guestfs_part_list_ret__pack
                     (const GuestfsPartListRet   *message,
                      uint8_t             *out);
size_t guestfs_part_list_ret__pack_to_buffer
                     (const GuestfsPartListRet   *message,
                      ProtobufCBuffer     *buffer);
GuestfsPartListRet *
       guestfs_part_list_ret__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_part_list_ret__free_unpacked
                     (GuestfsPartListRet *message,
                      ProtobufCAllocator *allocator);
/* GuestfsPartGetParttypeArgs methods */
void   guestfs_part_get_parttype_args__init
                     (GuestfsPartGetParttypeArgs         *message);
size_t guestfs_part_get_parttype_args__get_packed_size
                     (const GuestfsPartGetParttypeArgs   *message);
size_t guestfs_part_get_parttype_args__pack
                     (const GuestfsPartGetParttypeArgs   *message,
                      uint8_t             *out);
size_t guestfs_part_get_parttype_args__pack_to_buffer
                     (const GuestfsPartGetParttypeArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsPartGetParttypeArgs *
       guestfs_part_get_parttype_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_part_get_parttype_args__free_unpacked
                     (GuestfsPartGetParttypeArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsPartGetParttypeRet methods */
void   guestfs_part_get_parttype_ret__init
                     (GuestfsPartGetParttypeRet         *message);
size_t guestfs_part_get_parttype_ret__get_packed_size
                     (const GuestfsPartGetParttypeRet   *message);
size_t guestfs_part_get_parttype_ret__pack
                     (const GuestfsPartGetParttypeRet   *message,
                      uint8_t             *out);
size_t guestfs_part_get_parttype_ret__pack_to_buffer
                     (const GuestfsPartGetParttypeRet   *message,
                      ProtobufCBuffer     *buffer);
GuestfsPartGetParttypeRet *
       guestfs_part_get_parttype_ret__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_part_get_parttype_ret__free_unpacked
                     (GuestfsPartGetParttypeRet *message,
                      ProtobufCAllocator *allocator);
/* GuestfsFillArgs methods */
void   guestfs_fill_args__init
                     (GuestfsFillArgs         *message);
size_t guestfs_fill_args__get_packed_size
                     (const GuestfsFillArgs   *message);
size_t guestfs_fill_args__pack
                     (const GuestfsFillArgs   *message,
                      uint8_t             *out);
size_t guestfs_fill_args__pack_to_buffer
                     (const GuestfsFillArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsFillArgs *
       guestfs_fill_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_fill_args__free_unpacked
                     (GuestfsFillArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsAvailableArgs methods */
void   guestfs_available_args__init
                     (GuestfsAvailableArgs         *message);
size_t guestfs_available_args__get_packed_size
                     (const GuestfsAvailableArgs   *message);
size_t guestfs_available_args__pack
                     (const GuestfsAvailableArgs   *message,
                      uint8_t             *out);
size_t guestfs_available_args__pack_to_buffer
                     (const GuestfsAvailableArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsAvailableArgs *
       guestfs_available_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_available_args__free_unpacked
                     (GuestfsAvailableArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsDdArgs methods */
void   guestfs_dd_args__init
                     (GuestfsDdArgs         *message);
size_t guestfs_dd_args__get_packed_size
                     (const GuestfsDdArgs   *message);
size_t guestfs_dd_args__pack
                     (const GuestfsDdArgs   *message,
                      uint8_t             *out);
size_t guestfs_dd_args__pack_to_buffer
                     (const GuestfsDdArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsDdArgs *
       guestfs_dd_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_dd_args__free_unpacked
                     (GuestfsDdArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsFilesizeArgs methods */
void   guestfs_filesize_args__init
                     (GuestfsFilesizeArgs         *message);
size_t guestfs_filesize_args__get_packed_size
                     (const GuestfsFilesizeArgs   *message);
size_t guestfs_filesize_args__pack
                     (const GuestfsFilesizeArgs   *message,
                      uint8_t             *out);
size_t guestfs_filesize_args__pack_to_buffer
                     (const GuestfsFilesizeArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsFilesizeArgs *
       guestfs_filesize_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_filesize_args__free_unpacked
                     (GuestfsFilesizeArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsFilesizeRet methods */
void   guestfs_filesize_ret__init
                     (GuestfsFilesizeRet         *message);
size_t guestfs_filesize_ret__get_packed_size
                     (const GuestfsFilesizeRet   *message);
size_t guestfs_filesize_ret__pack
                     (const GuestfsFilesizeRet   *message,
                      uint8_t             *out);
size_t guestfs_filesize_ret__pack_to_buffer
                     (const GuestfsFilesizeRet   *message,
                      ProtobufCBuffer     *buffer);
GuestfsFilesizeRet *
       guestfs_filesize_ret__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_filesize_ret__free_unpacked
                     (GuestfsFilesizeRet *message,
                      ProtobufCAllocator *allocator);
/* GuestfsLvrenameArgs methods */
void   guestfs_lvrename_args__init
                     (GuestfsLvrenameArgs         *message);
size_t guestfs_lvrename_args__get_packed_size
                     (const GuestfsLvrenameArgs   *message);
size_t guestfs_lvrename_args__pack
                     (const GuestfsLvrenameArgs   *message,
                      uint8_t             *out);
size_t guestfs_lvrename_args__pack_to_buffer
                     (const GuestfsLvrenameArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsLvrenameArgs *
       guestfs_lvrename_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_lvrename_args__free_unpacked
                     (GuestfsLvrenameArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsVgrenameArgs methods */
void   guestfs_vgrename_args__init
                     (GuestfsVgrenameArgs         *message);
size_t guestfs_vgrename_args__get_packed_size
                     (const GuestfsVgrenameArgs   *message);
size_t guestfs_vgrename_args__pack
                     (const GuestfsVgrenameArgs   *message,
                      uint8_t             *out);
size_t guestfs_vgrename_args__pack_to_buffer
                     (const GuestfsVgrenameArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsVgrenameArgs *
       guestfs_vgrename_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_vgrename_args__free_unpacked
                     (GuestfsVgrenameArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsInitrdCatArgs methods */
void   guestfs_initrd_cat_args__init
                     (GuestfsInitrdCatArgs         *message);
size_t guestfs_initrd_cat_args__get_packed_size
                     (const GuestfsInitrdCatArgs   *message);
size_t guestfs_initrd_cat_args__pack
                     (const GuestfsInitrdCatArgs   *message,
                      uint8_t             *out);
size_t guestfs_initrd_cat_args__pack_to_buffer
                     (const GuestfsInitrdCatArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsInitrdCatArgs *
       guestfs_initrd_cat_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_initrd_cat_args__free_unpacked
                     (GuestfsInitrdCatArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsInitrdCatRet methods */
void   guestfs_initrd_cat_ret__init
                     (GuestfsInitrdCatRet         *message);
size_t guestfs_initrd_cat_ret__get_packed_size
                     (const GuestfsInitrdCatRet   *message);
size_t guestfs_initrd_cat_ret__pack
                     (const GuestfsInitrdCatRet   *message,
                      uint8_t             *out);
size_t guestfs_initrd_cat_ret__pack_to_buffer
                     (const GuestfsInitrdCatRet   *message,
                      ProtobufCBuffer     *buffer);
GuestfsInitrdCatRet *
       guestfs_initrd_cat_ret__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_initrd_cat_ret__free_unpacked
                     (GuestfsInitrdCatRet *message,
                      ProtobufCAllocator *allocator);
/* GuestfsPvuuidArgs methods */
void   guestfs_pvuuid_args__init
                     (GuestfsPvuuidArgs         *message);
size_t guestfs_pvuuid_args__get_packed_size
                     (const GuestfsPvuuidArgs   *message);
size_t guestfs_pvuuid_args__pack
                     (const GuestfsPvuuidArgs   *message,
                      uint8_t             *out);
size_t guestfs_pvuuid_args__pack_to_buffer
                     (const GuestfsPvuuidArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsPvuuidArgs *
       guestfs_pvuuid_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_pvuuid_args__free_unpacked
                     (GuestfsPvuuidArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsPvuuidRet methods */
void   guestfs_pvuuid_ret__init
                     (GuestfsPvuuidRet         *message);
size_t guestfs_pvuuid_ret__get_packed_size
                     (const GuestfsPvuuidRet   *message);
size_t guestfs_pvuuid_ret__pack
                     (const GuestfsPvuuidRet   *message,
                      uint8_t             *out);
size_t guestfs_pvuuid_ret__pack_to_buffer
                     (const GuestfsPvuuidRet   *message,
                      ProtobufCBuffer     *buffer);
GuestfsPvuuidRet *
       guestfs_pvuuid_ret__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_pvuuid_ret__free_unpacked
                     (GuestfsPvuuidRet *message,
                      ProtobufCAllocator *allocator);
/* GuestfsVguuidArgs methods */
void   guestfs_vguuid_args__init
                     (GuestfsVguuidArgs         *message);
size_t guestfs_vguuid_args__get_packed_size
                     (const GuestfsVguuidArgs   *message);
size_t guestfs_vguuid_args__pack
                     (const GuestfsVguuidArgs   *message,
                      uint8_t             *out);
size_t guestfs_vguuid_args__pack_to_buffer
                     (const GuestfsVguuidArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsVguuidArgs *
       guestfs_vguuid_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_vguuid_args__free_unpacked
                     (GuestfsVguuidArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsVguuidRet methods */
void   guestfs_vguuid_ret__init
                     (GuestfsVguuidRet         *message);
size_t guestfs_vguuid_ret__get_packed_size
                     (const GuestfsVguuidRet   *message);
size_t guestfs_vguuid_ret__pack
                     (const GuestfsVguuidRet   *message,
                      uint8_t             *out);
size_t guestfs_vguuid_ret__pack_to_buffer
                     (const GuestfsVguuidRet   *message,
                      ProtobufCBuffer     *buffer);
GuestfsVguuidRet *
       guestfs_vguuid_ret__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_vguuid_ret__free_unpacked
                     (GuestfsVguuidRet *message,
                      ProtobufCAllocator *allocator);
/* GuestfsLvuuidArgs methods */
void   guestfs_lvuuid_args__init
                     (GuestfsLvuuidArgs         *message);
size_t guestfs_lvuuid_args__get_packed_size
                     (const GuestfsLvuuidArgs   *message);
size_t guestfs_lvuuid_args__pack
                     (const GuestfsLvuuidArgs   *message,
                      uint8_t             *out);
size_t guestfs_lvuuid_args__pack_to_buffer
                     (const GuestfsLvuuidArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsLvuuidArgs *
       guestfs_lvuuid_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_lvuuid_args__free_unpacked
                     (GuestfsLvuuidArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsLvuuidRet methods */
void   guestfs_lvuuid_ret__init
                     (GuestfsLvuuidRet         *message);
size_t guestfs_lvuuid_ret__get_packed_size
                     (const GuestfsLvuuidRet   *message);
size_t guestfs_lvuuid_ret__pack
                     (const GuestfsLvuuidRet   *message,
                      uint8_t             *out);
size_t guestfs_lvuuid_ret__pack_to_buffer
                     (const GuestfsLvuuidRet   *message,
                      ProtobufCBuffer     *buffer);
GuestfsLvuuidRet *
       guestfs_lvuuid_ret__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_lvuuid_ret__free_unpacked
                     (GuestfsLvuuidRet *message,
                      ProtobufCAllocator *allocator);
/* GuestfsVgpvuuidsArgs methods */
void   guestfs_vgpvuuids_args__init
                     (GuestfsVgpvuuidsArgs         *message);
size_t guestfs_vgpvuuids_args__get_packed_size
                     (const GuestfsVgpvuuidsArgs   *message);
size_t guestfs_vgpvuuids_args__pack
                     (const GuestfsVgpvuuidsArgs   *message,
                      uint8_t             *out);
size_t guestfs_vgpvuuids_args__pack_to_buffer
                     (const GuestfsVgpvuuidsArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsVgpvuuidsArgs *
       guestfs_vgpvuuids_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_vgpvuuids_args__free_unpacked
                     (GuestfsVgpvuuidsArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsVgpvuuidsRet methods */
void   guestfs_vgpvuuids_ret__init
                     (GuestfsVgpvuuidsRet         *message);
size_t guestfs_vgpvuuids_ret__get_packed_size
                     (const GuestfsVgpvuuidsRet   *message);
size_t guestfs_vgpvuuids_ret__pack
                     (const GuestfsVgpvuuidsRet   *message,
                      uint8_t             *out);
size_t guestfs_vgpvuuids_ret__pack_to_buffer
                     (const GuestfsVgpvuuidsRet   *message,
                      ProtobufCBuffer     *buffer);
GuestfsVgpvuuidsRet *
       guestfs_vgpvuuids_ret__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_vgpvuuids_ret__free_unpacked
                     (GuestfsVgpvuuidsRet *message,
                      ProtobufCAllocator *allocator);
/* GuestfsVglvuuidsArgs methods */
void   guestfs_vglvuuids_args__init
                     (GuestfsVglvuuidsArgs         *message);
size_t guestfs_vglvuuids_args__get_packed_size
                     (const GuestfsVglvuuidsArgs   *message);
size_t guestfs_vglvuuids_args__pack
                     (const GuestfsVglvuuidsArgs   *message,
                      uint8_t             *out);
size_t guestfs_vglvuuids_args__pack_to_buffer
                     (const GuestfsVglvuuidsArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsVglvuuidsArgs *
       guestfs_vglvuuids_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_vglvuuids_args__free_unpacked
                     (GuestfsVglvuuidsArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsVglvuuidsRet methods */
void   guestfs_vglvuuids_ret__init
                     (GuestfsVglvuuidsRet         *message);
size_t guestfs_vglvuuids_ret__get_packed_size
                     (const GuestfsVglvuuidsRet   *message);
size_t guestfs_vglvuuids_ret__pack
                     (const GuestfsVglvuuidsRet   *message,
                      uint8_t             *out);
size_t guestfs_vglvuuids_ret__pack_to_buffer
                     (const GuestfsVglvuuidsRet   *message,
                      ProtobufCBuffer     *buffer);
GuestfsVglvuuidsRet *
       guestfs_vglvuuids_ret__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_vglvuuids_ret__free_unpacked
                     (GuestfsVglvuuidsRet *message,
                      ProtobufCAllocator *allocator);
/* GuestfsCopySizeArgs methods */
void   guestfs_copy_size_args__init
                     (GuestfsCopySizeArgs         *message);
size_t guestfs_copy_size_args__get_packed_size
                     (const GuestfsCopySizeArgs   *message);
size_t guestfs_copy_size_args__pack
                     (const GuestfsCopySizeArgs   *message,
                      uint8_t             *out);
size_t guestfs_copy_size_args__pack_to_buffer
                     (const GuestfsCopySizeArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsCopySizeArgs *
       guestfs_copy_size_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_copy_size_args__free_unpacked
                     (GuestfsCopySizeArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsZeroDeviceArgs methods */
void   guestfs_zero_device_args__init
                     (GuestfsZeroDeviceArgs         *message);
size_t guestfs_zero_device_args__get_packed_size
                     (const GuestfsZeroDeviceArgs   *message);
size_t guestfs_zero_device_args__pack
                     (const GuestfsZeroDeviceArgs   *message,
                      uint8_t             *out);
size_t guestfs_zero_device_args__pack_to_buffer
                     (const GuestfsZeroDeviceArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsZeroDeviceArgs *
       guestfs_zero_device_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_zero_device_args__free_unpacked
                     (GuestfsZeroDeviceArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsTxzInArgs methods */
void   guestfs_txz_in_args__init
                     (GuestfsTxzInArgs         *message);
size_t guestfs_txz_in_args__get_packed_size
                     (const GuestfsTxzInArgs   *message);
size_t guestfs_txz_in_args__pack
                     (const GuestfsTxzInArgs   *message,
                      uint8_t             *out);
size_t guestfs_txz_in_args__pack_to_buffer
                     (const GuestfsTxzInArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsTxzInArgs *
       guestfs_txz_in_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_txz_in_args__free_unpacked
                     (GuestfsTxzInArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsTxzOutArgs methods */
void   guestfs_txz_out_args__init
                     (GuestfsTxzOutArgs         *message);
size_t guestfs_txz_out_args__get_packed_size
                     (const GuestfsTxzOutArgs   *message);
size_t guestfs_txz_out_args__pack
                     (const GuestfsTxzOutArgs   *message,
                      uint8_t             *out);
size_t guestfs_txz_out_args__pack_to_buffer
                     (const GuestfsTxzOutArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsTxzOutArgs *
       guestfs_txz_out_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_txz_out_args__free_unpacked
                     (GuestfsTxzOutArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsPartDelArgs methods */
void   guestfs_part_del_args__init
                     (GuestfsPartDelArgs         *message);
size_t guestfs_part_del_args__get_packed_size
                     (const GuestfsPartDelArgs   *message);
size_t guestfs_part_del_args__pack
                     (const GuestfsPartDelArgs   *message,
                      uint8_t             *out);
size_t guestfs_part_del_args__pack_to_buffer
                     (const GuestfsPartDelArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsPartDelArgs *
       guestfs_part_del_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_part_del_args__free_unpacked
                     (GuestfsPartDelArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsPartGetBootableArgs methods */
void   guestfs_part_get_bootable_args__init
                     (GuestfsPartGetBootableArgs         *message);
size_t guestfs_part_get_bootable_args__get_packed_size
                     (const GuestfsPartGetBootableArgs   *message);
size_t guestfs_part_get_bootable_args__pack
                     (const GuestfsPartGetBootableArgs   *message,
                      uint8_t             *out);
size_t guestfs_part_get_bootable_args__pack_to_buffer
                     (const GuestfsPartGetBootableArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsPartGetBootableArgs *
       guestfs_part_get_bootable_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_part_get_bootable_args__free_unpacked
                     (GuestfsPartGetBootableArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsPartGetBootableRet methods */
void   guestfs_part_get_bootable_ret__init
                     (GuestfsPartGetBootableRet         *message);
size_t guestfs_part_get_bootable_ret__get_packed_size
                     (const GuestfsPartGetBootableRet   *message);
size_t guestfs_part_get_bootable_ret__pack
                     (const GuestfsPartGetBootableRet   *message,
                      uint8_t             *out);
size_t guestfs_part_get_bootable_ret__pack_to_buffer
                     (const GuestfsPartGetBootableRet   *message,
                      ProtobufCBuffer     *buffer);
GuestfsPartGetBootableRet *
       guestfs_part_get_bootable_ret__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_part_get_bootable_ret__free_unpacked
                     (GuestfsPartGetBootableRet *message,
                      ProtobufCAllocator *allocator);
/* GuestfsPartGetMbrIdArgs methods */
void   guestfs_part_get_mbr_id_args__init
                     (GuestfsPartGetMbrIdArgs         *message);
size_t guestfs_part_get_mbr_id_args__get_packed_size
                     (const GuestfsPartGetMbrIdArgs   *message);
size_t guestfs_part_get_mbr_id_args__pack
                     (const GuestfsPartGetMbrIdArgs   *message,
                      uint8_t             *out);
size_t guestfs_part_get_mbr_id_args__pack_to_buffer
                     (const GuestfsPartGetMbrIdArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsPartGetMbrIdArgs *
       guestfs_part_get_mbr_id_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_part_get_mbr_id_args__free_unpacked
                     (GuestfsPartGetMbrIdArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsPartGetMbrIdRet methods */
void   guestfs_part_get_mbr_id_ret__init
                     (GuestfsPartGetMbrIdRet         *message);
size_t guestfs_part_get_mbr_id_ret__get_packed_size
                     (const GuestfsPartGetMbrIdRet   *message);
size_t guestfs_part_get_mbr_id_ret__pack
                     (const GuestfsPartGetMbrIdRet   *message,
                      uint8_t             *out);
size_t guestfs_part_get_mbr_id_ret__pack_to_buffer
                     (const GuestfsPartGetMbrIdRet   *message,
                      ProtobufCBuffer     *buffer);
GuestfsPartGetMbrIdRet *
       guestfs_part_get_mbr_id_ret__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_part_get_mbr_id_ret__free_unpacked
                     (GuestfsPartGetMbrIdRet *message,
                      ProtobufCAllocator *allocator);
/* GuestfsPartSetMbrIdArgs methods */
void   guestfs_part_set_mbr_id_args__init
                     (GuestfsPartSetMbrIdArgs         *message);
size_t guestfs_part_set_mbr_id_args__get_packed_size
                     (const GuestfsPartSetMbrIdArgs   *message);
size_t guestfs_part_set_mbr_id_args__pack
                     (const GuestfsPartSetMbrIdArgs   *message,
                      uint8_t             *out);
size_t guestfs_part_set_mbr_id_args__pack_to_buffer
                     (const GuestfsPartSetMbrIdArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsPartSetMbrIdArgs *
       guestfs_part_set_mbr_id_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_part_set_mbr_id_args__free_unpacked
                     (GuestfsPartSetMbrIdArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsChecksumDeviceArgs methods */
void   guestfs_checksum_device_args__init
                     (GuestfsChecksumDeviceArgs         *message);
size_t guestfs_checksum_device_args__get_packed_size
                     (const GuestfsChecksumDeviceArgs   *message);
size_t guestfs_checksum_device_args__pack
                     (const GuestfsChecksumDeviceArgs   *message,
                      uint8_t             *out);
size_t guestfs_checksum_device_args__pack_to_buffer
                     (const GuestfsChecksumDeviceArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsChecksumDeviceArgs *
       guestfs_checksum_device_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_checksum_device_args__free_unpacked
                     (GuestfsChecksumDeviceArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsChecksumDeviceRet methods */
void   guestfs_checksum_device_ret__init
                     (GuestfsChecksumDeviceRet         *message);
size_t guestfs_checksum_device_ret__get_packed_size
                     (const GuestfsChecksumDeviceRet   *message);
size_t guestfs_checksum_device_ret__pack
                     (const GuestfsChecksumDeviceRet   *message,
                      uint8_t             *out);
size_t guestfs_checksum_device_ret__pack_to_buffer
                     (const GuestfsChecksumDeviceRet   *message,
                      ProtobufCBuffer     *buffer);
GuestfsChecksumDeviceRet *
       guestfs_checksum_device_ret__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_checksum_device_ret__free_unpacked
                     (GuestfsChecksumDeviceRet *message,
                      ProtobufCAllocator *allocator);
/* GuestfsLvresizeFreeArgs methods */
void   guestfs_lvresize_free_args__init
                     (GuestfsLvresizeFreeArgs         *message);
size_t guestfs_lvresize_free_args__get_packed_size
                     (const GuestfsLvresizeFreeArgs   *message);
size_t guestfs_lvresize_free_args__pack
                     (const GuestfsLvresizeFreeArgs   *message,
                      uint8_t             *out);
size_t guestfs_lvresize_free_args__pack_to_buffer
                     (const GuestfsLvresizeFreeArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsLvresizeFreeArgs *
       guestfs_lvresize_free_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_lvresize_free_args__free_unpacked
                     (GuestfsLvresizeFreeArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsAugClearArgs methods */
void   guestfs_aug_clear_args__init
                     (GuestfsAugClearArgs         *message);
size_t guestfs_aug_clear_args__get_packed_size
                     (const GuestfsAugClearArgs   *message);
size_t guestfs_aug_clear_args__pack
                     (const GuestfsAugClearArgs   *message,
                      uint8_t             *out);
size_t guestfs_aug_clear_args__pack_to_buffer
                     (const GuestfsAugClearArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsAugClearArgs *
       guestfs_aug_clear_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_aug_clear_args__free_unpacked
                     (GuestfsAugClearArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsGetUmaskRet methods */
void   guestfs_get_umask_ret__init
                     (GuestfsGetUmaskRet         *message);
size_t guestfs_get_umask_ret__get_packed_size
                     (const GuestfsGetUmaskRet   *message);
size_t guestfs_get_umask_ret__pack
                     (const GuestfsGetUmaskRet   *message,
                      uint8_t             *out);
size_t guestfs_get_umask_ret__pack_to_buffer
                     (const GuestfsGetUmaskRet   *message,
                      ProtobufCBuffer     *buffer);
GuestfsGetUmaskRet *
       guestfs_get_umask_ret__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_get_umask_ret__free_unpacked
                     (GuestfsGetUmaskRet *message,
                      ProtobufCAllocator *allocator);
/* GuestfsDebugUploadArgs methods */
void   guestfs_debug_upload_args__init
                     (GuestfsDebugUploadArgs         *message);
size_t guestfs_debug_upload_args__get_packed_size
                     (const GuestfsDebugUploadArgs   *message);
size_t guestfs_debug_upload_args__pack
                     (const GuestfsDebugUploadArgs   *message,
                      uint8_t             *out);
size_t guestfs_debug_upload_args__pack_to_buffer
                     (const GuestfsDebugUploadArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsDebugUploadArgs *
       guestfs_debug_upload_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_debug_upload_args__free_unpacked
                     (GuestfsDebugUploadArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsBase64InArgs methods */
void   guestfs_base64_in_args__init
                     (GuestfsBase64InArgs         *message);
size_t guestfs_base64_in_args__get_packed_size
                     (const GuestfsBase64InArgs   *message);
size_t guestfs_base64_in_args__pack
                     (const GuestfsBase64InArgs   *message,
                      uint8_t             *out);
size_t guestfs_base64_in_args__pack_to_buffer
                     (const GuestfsBase64InArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsBase64InArgs *
       guestfs_base64_in_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_base64_in_args__free_unpacked
                     (GuestfsBase64InArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsBase64OutArgs methods */
void   guestfs_base64_out_args__init
                     (GuestfsBase64OutArgs         *message);
size_t guestfs_base64_out_args__get_packed_size
                     (const GuestfsBase64OutArgs   *message);
size_t guestfs_base64_out_args__pack
                     (const GuestfsBase64OutArgs   *message,
                      uint8_t             *out);
size_t guestfs_base64_out_args__pack_to_buffer
                     (const GuestfsBase64OutArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsBase64OutArgs *
       guestfs_base64_out_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_base64_out_args__free_unpacked
                     (GuestfsBase64OutArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsChecksumsOutArgs methods */
void   guestfs_checksums_out_args__init
                     (GuestfsChecksumsOutArgs         *message);
size_t guestfs_checksums_out_args__get_packed_size
                     (const GuestfsChecksumsOutArgs   *message);
size_t guestfs_checksums_out_args__pack
                     (const GuestfsChecksumsOutArgs   *message,
                      uint8_t             *out);
size_t guestfs_checksums_out_args__pack_to_buffer
                     (const GuestfsChecksumsOutArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsChecksumsOutArgs *
       guestfs_checksums_out_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_checksums_out_args__free_unpacked
                     (GuestfsChecksumsOutArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsFillPatternArgs methods */
void   guestfs_fill_pattern_args__init
                     (GuestfsFillPatternArgs         *message);
size_t guestfs_fill_pattern_args__get_packed_size
                     (const GuestfsFillPatternArgs   *message);
size_t guestfs_fill_pattern_args__pack
                     (const GuestfsFillPatternArgs   *message,
                      uint8_t             *out);
size_t guestfs_fill_pattern_args__pack_to_buffer
                     (const GuestfsFillPatternArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsFillPatternArgs *
       guestfs_fill_pattern_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_fill_pattern_args__free_unpacked
                     (GuestfsFillPatternArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsInternalWriteArgs methods */
void   guestfs_internal_write_args__init
                     (GuestfsInternalWriteArgs         *message);
size_t guestfs_internal_write_args__get_packed_size
                     (const GuestfsInternalWriteArgs   *message);
size_t guestfs_internal_write_args__pack
                     (const GuestfsInternalWriteArgs   *message,
                      uint8_t             *out);
size_t guestfs_internal_write_args__pack_to_buffer
                     (const GuestfsInternalWriteArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsInternalWriteArgs *
       guestfs_internal_write_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_internal_write_args__free_unpacked
                     (GuestfsInternalWriteArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsPwriteArgs methods */
void   guestfs_pwrite_args__init
                     (GuestfsPwriteArgs         *message);
size_t guestfs_pwrite_args__get_packed_size
                     (const GuestfsPwriteArgs   *message);
size_t guestfs_pwrite_args__pack
                     (const GuestfsPwriteArgs   *message,
                      uint8_t             *out);
size_t guestfs_pwrite_args__pack_to_buffer
                     (const GuestfsPwriteArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsPwriteArgs *
       guestfs_pwrite_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_pwrite_args__free_unpacked
                     (GuestfsPwriteArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsPwriteRet methods */
void   guestfs_pwrite_ret__init
                     (GuestfsPwriteRet         *message);
size_t guestfs_pwrite_ret__get_packed_size
                     (const GuestfsPwriteRet   *message);
size_t guestfs_pwrite_ret__pack
                     (const GuestfsPwriteRet   *message,
                      uint8_t             *out);
size_t guestfs_pwrite_ret__pack_to_buffer
                     (const GuestfsPwriteRet   *message,
                      ProtobufCBuffer     *buffer);
GuestfsPwriteRet *
       guestfs_pwrite_ret__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_pwrite_ret__free_unpacked
                     (GuestfsPwriteRet *message,
                      ProtobufCAllocator *allocator);
/* GuestfsResize2fsSizeArgs methods */
void   guestfs_resize2fs_size_args__init
                     (GuestfsResize2fsSizeArgs         *message);
size_t guestfs_resize2fs_size_args__get_packed_size
                     (const GuestfsResize2fsSizeArgs   *message);
size_t guestfs_resize2fs_size_args__pack
                     (const GuestfsResize2fsSizeArgs   *message,
                      uint8_t             *out);
size_t guestfs_resize2fs_size_args__pack_to_buffer
                     (const GuestfsResize2fsSizeArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsResize2fsSizeArgs *
       guestfs_resize2fs_size_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_resize2fs_size_args__free_unpacked
                     (GuestfsResize2fsSizeArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsPvresizeSizeArgs methods */
void   guestfs_pvresize_size_args__init
                     (GuestfsPvresizeSizeArgs         *message);
size_t guestfs_pvresize_size_args__get_packed_size
                     (const GuestfsPvresizeSizeArgs   *message);
size_t guestfs_pvresize_size_args__pack
                     (const GuestfsPvresizeSizeArgs   *message,
                      uint8_t             *out);
size_t guestfs_pvresize_size_args__pack_to_buffer
                     (const GuestfsPvresizeSizeArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsPvresizeSizeArgs *
       guestfs_pvresize_size_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_pvresize_size_args__free_unpacked
                     (GuestfsPvresizeSizeArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsNtfsresizeSizeArgs methods */
void   guestfs_ntfsresize_size_args__init
                     (GuestfsNtfsresizeSizeArgs         *message);
size_t guestfs_ntfsresize_size_args__get_packed_size
                     (const GuestfsNtfsresizeSizeArgs   *message);
size_t guestfs_ntfsresize_size_args__pack
                     (const GuestfsNtfsresizeSizeArgs   *message,
                      uint8_t             *out);
size_t guestfs_ntfsresize_size_args__pack_to_buffer
                     (const GuestfsNtfsresizeSizeArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsNtfsresizeSizeArgs *
       guestfs_ntfsresize_size_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_ntfsresize_size_args__free_unpacked
                     (GuestfsNtfsresizeSizeArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsAvailableAllGroupsRet methods */
void   guestfs_available_all_groups_ret__init
                     (GuestfsAvailableAllGroupsRet         *message);
size_t guestfs_available_all_groups_ret__get_packed_size
                     (const GuestfsAvailableAllGroupsRet   *message);
size_t guestfs_available_all_groups_ret__pack
                     (const GuestfsAvailableAllGroupsRet   *message,
                      uint8_t             *out);
size_t guestfs_available_all_groups_ret__pack_to_buffer
                     (const GuestfsAvailableAllGroupsRet   *message,
                      ProtobufCBuffer     *buffer);
GuestfsAvailableAllGroupsRet *
       guestfs_available_all_groups_ret__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_available_all_groups_ret__free_unpacked
                     (GuestfsAvailableAllGroupsRet *message,
                      ProtobufCAllocator *allocator);
/* GuestfsFallocate64Args methods */
void   guestfs_fallocate64_args__init
                     (GuestfsFallocate64Args         *message);
size_t guestfs_fallocate64_args__get_packed_size
                     (const GuestfsFallocate64Args   *message);
size_t guestfs_fallocate64_args__pack
                     (const GuestfsFallocate64Args   *message,
                      uint8_t             *out);
size_t guestfs_fallocate64_args__pack_to_buffer
                     (const GuestfsFallocate64Args   *message,
                      ProtobufCBuffer     *buffer);
GuestfsFallocate64Args *
       guestfs_fallocate64_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_fallocate64_args__free_unpacked
                     (GuestfsFallocate64Args *message,
                      ProtobufCAllocator *allocator);
/* GuestfsVfsLabelArgs methods */
void   guestfs_vfs_label_args__init
                     (GuestfsVfsLabelArgs         *message);
size_t guestfs_vfs_label_args__get_packed_size
                     (const GuestfsVfsLabelArgs   *message);
size_t guestfs_vfs_label_args__pack
                     (const GuestfsVfsLabelArgs   *message,
                      uint8_t             *out);
size_t guestfs_vfs_label_args__pack_to_buffer
                     (const GuestfsVfsLabelArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsVfsLabelArgs *
       guestfs_vfs_label_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_vfs_label_args__free_unpacked
                     (GuestfsVfsLabelArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsVfsLabelRet methods */
void   guestfs_vfs_label_ret__init
                     (GuestfsVfsLabelRet         *message);
size_t guestfs_vfs_label_ret__get_packed_size
                     (const GuestfsVfsLabelRet   *message);
size_t guestfs_vfs_label_ret__pack
                     (const GuestfsVfsLabelRet   *message,
                      uint8_t             *out);
size_t guestfs_vfs_label_ret__pack_to_buffer
                     (const GuestfsVfsLabelRet   *message,
                      ProtobufCBuffer     *buffer);
GuestfsVfsLabelRet *
       guestfs_vfs_label_ret__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_vfs_label_ret__free_unpacked
                     (GuestfsVfsLabelRet *message,
                      ProtobufCAllocator *allocator);
/* GuestfsVfsUuidArgs methods */
void   guestfs_vfs_uuid_args__init
                     (GuestfsVfsUuidArgs         *message);
size_t guestfs_vfs_uuid_args__get_packed_size
                     (const GuestfsVfsUuidArgs   *message);
size_t guestfs_vfs_uuid_args__pack
                     (const GuestfsVfsUuidArgs   *message,
                      uint8_t             *out);
size_t guestfs_vfs_uuid_args__pack_to_buffer
                     (const GuestfsVfsUuidArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsVfsUuidArgs *
       guestfs_vfs_uuid_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_vfs_uuid_args__free_unpacked
                     (GuestfsVfsUuidArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsVfsUuidRet methods */
void   guestfs_vfs_uuid_ret__init
                     (GuestfsVfsUuidRet         *message);
size_t guestfs_vfs_uuid_ret__get_packed_size
                     (const GuestfsVfsUuidRet   *message);
size_t guestfs_vfs_uuid_ret__pack
                     (const GuestfsVfsUuidRet   *message,
                      uint8_t             *out);
size_t guestfs_vfs_uuid_ret__pack_to_buffer
                     (const GuestfsVfsUuidRet   *message,
                      ProtobufCBuffer     *buffer);
GuestfsVfsUuidRet *
       guestfs_vfs_uuid_ret__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_vfs_uuid_ret__free_unpacked
                     (GuestfsVfsUuidRet *message,
                      ProtobufCAllocator *allocator);
/* GuestfsLvmSetFilterArgs methods */
void   guestfs_lvm_set_filter_args__init
                     (GuestfsLvmSetFilterArgs         *message);
size_t guestfs_lvm_set_filter_args__get_packed_size
                     (const GuestfsLvmSetFilterArgs   *message);
size_t guestfs_lvm_set_filter_args__pack
                     (const GuestfsLvmSetFilterArgs   *message,
                      uint8_t             *out);
size_t guestfs_lvm_set_filter_args__pack_to_buffer
                     (const GuestfsLvmSetFilterArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsLvmSetFilterArgs *
       guestfs_lvm_set_filter_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_lvm_set_filter_args__free_unpacked
                     (GuestfsLvmSetFilterArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsLuksOpenArgs methods */
void   guestfs_luks_open_args__init
                     (GuestfsLuksOpenArgs         *message);
size_t guestfs_luks_open_args__get_packed_size
                     (const GuestfsLuksOpenArgs   *message);
size_t guestfs_luks_open_args__pack
                     (const GuestfsLuksOpenArgs   *message,
                      uint8_t             *out);
size_t guestfs_luks_open_args__pack_to_buffer
                     (const GuestfsLuksOpenArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsLuksOpenArgs *
       guestfs_luks_open_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_luks_open_args__free_unpacked
                     (GuestfsLuksOpenArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsLuksOpenRoArgs methods */
void   guestfs_luks_open_ro_args__init
                     (GuestfsLuksOpenRoArgs         *message);
size_t guestfs_luks_open_ro_args__get_packed_size
                     (const GuestfsLuksOpenRoArgs   *message);
size_t guestfs_luks_open_ro_args__pack
                     (const GuestfsLuksOpenRoArgs   *message,
                      uint8_t             *out);
size_t guestfs_luks_open_ro_args__pack_to_buffer
                     (const GuestfsLuksOpenRoArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsLuksOpenRoArgs *
       guestfs_luks_open_ro_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_luks_open_ro_args__free_unpacked
                     (GuestfsLuksOpenRoArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsLuksCloseArgs methods */
void   guestfs_luks_close_args__init
                     (GuestfsLuksCloseArgs         *message);
size_t guestfs_luks_close_args__get_packed_size
                     (const GuestfsLuksCloseArgs   *message);
size_t guestfs_luks_close_args__pack
                     (const GuestfsLuksCloseArgs   *message,
                      uint8_t             *out);
size_t guestfs_luks_close_args__pack_to_buffer
                     (const GuestfsLuksCloseArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsLuksCloseArgs *
       guestfs_luks_close_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_luks_close_args__free_unpacked
                     (GuestfsLuksCloseArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsLuksFormatArgs methods */
void   guestfs_luks_format_args__init
                     (GuestfsLuksFormatArgs         *message);
size_t guestfs_luks_format_args__get_packed_size
                     (const GuestfsLuksFormatArgs   *message);
size_t guestfs_luks_format_args__pack
                     (const GuestfsLuksFormatArgs   *message,
                      uint8_t             *out);
size_t guestfs_luks_format_args__pack_to_buffer
                     (const GuestfsLuksFormatArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsLuksFormatArgs *
       guestfs_luks_format_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_luks_format_args__free_unpacked
                     (GuestfsLuksFormatArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsLuksFormatCipherArgs methods */
void   guestfs_luks_format_cipher_args__init
                     (GuestfsLuksFormatCipherArgs         *message);
size_t guestfs_luks_format_cipher_args__get_packed_size
                     (const GuestfsLuksFormatCipherArgs   *message);
size_t guestfs_luks_format_cipher_args__pack
                     (const GuestfsLuksFormatCipherArgs   *message,
                      uint8_t             *out);
size_t guestfs_luks_format_cipher_args__pack_to_buffer
                     (const GuestfsLuksFormatCipherArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsLuksFormatCipherArgs *
       guestfs_luks_format_cipher_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_luks_format_cipher_args__free_unpacked
                     (GuestfsLuksFormatCipherArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsLuksAddKeyArgs methods */
void   guestfs_luks_add_key_args__init
                     (GuestfsLuksAddKeyArgs         *message);
size_t guestfs_luks_add_key_args__get_packed_size
                     (const GuestfsLuksAddKeyArgs   *message);
size_t guestfs_luks_add_key_args__pack
                     (const GuestfsLuksAddKeyArgs   *message,
                      uint8_t             *out);
size_t guestfs_luks_add_key_args__pack_to_buffer
                     (const GuestfsLuksAddKeyArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsLuksAddKeyArgs *
       guestfs_luks_add_key_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_luks_add_key_args__free_unpacked
                     (GuestfsLuksAddKeyArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsLuksKillSlotArgs methods */
void   guestfs_luks_kill_slot_args__init
                     (GuestfsLuksKillSlotArgs         *message);
size_t guestfs_luks_kill_slot_args__get_packed_size
                     (const GuestfsLuksKillSlotArgs   *message);
size_t guestfs_luks_kill_slot_args__pack
                     (const GuestfsLuksKillSlotArgs   *message,
                      uint8_t             *out);
size_t guestfs_luks_kill_slot_args__pack_to_buffer
                     (const GuestfsLuksKillSlotArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsLuksKillSlotArgs *
       guestfs_luks_kill_slot_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_luks_kill_slot_args__free_unpacked
                     (GuestfsLuksKillSlotArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsIsLvArgs methods */
void   guestfs_is_lv_args__init
                     (GuestfsIsLvArgs         *message);
size_t guestfs_is_lv_args__get_packed_size
                     (const GuestfsIsLvArgs   *message);
size_t guestfs_is_lv_args__pack
                     (const GuestfsIsLvArgs   *message,
                      uint8_t             *out);
size_t guestfs_is_lv_args__pack_to_buffer
                     (const GuestfsIsLvArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsIsLvArgs *
       guestfs_is_lv_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_is_lv_args__free_unpacked
                     (GuestfsIsLvArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsIsLvRet methods */
void   guestfs_is_lv_ret__init
                     (GuestfsIsLvRet         *message);
size_t guestfs_is_lv_ret__get_packed_size
                     (const GuestfsIsLvRet   *message);
size_t guestfs_is_lv_ret__pack
                     (const GuestfsIsLvRet   *message,
                      uint8_t             *out);
size_t guestfs_is_lv_ret__pack_to_buffer
                     (const GuestfsIsLvRet   *message,
                      ProtobufCBuffer     *buffer);
GuestfsIsLvRet *
       guestfs_is_lv_ret__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_is_lv_ret__free_unpacked
                     (GuestfsIsLvRet *message,
                      ProtobufCAllocator *allocator);
/* GuestfsFindfsUuidArgs methods */
void   guestfs_findfs_uuid_args__init
                     (GuestfsFindfsUuidArgs         *message);
size_t guestfs_findfs_uuid_args__get_packed_size
                     (const GuestfsFindfsUuidArgs   *message);
size_t guestfs_findfs_uuid_args__pack
                     (const GuestfsFindfsUuidArgs   *message,
                      uint8_t             *out);
size_t guestfs_findfs_uuid_args__pack_to_buffer
                     (const GuestfsFindfsUuidArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsFindfsUuidArgs *
       guestfs_findfs_uuid_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_findfs_uuid_args__free_unpacked
                     (GuestfsFindfsUuidArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsFindfsUuidRet methods */
void   guestfs_findfs_uuid_ret__init
                     (GuestfsFindfsUuidRet         *message);
size_t guestfs_findfs_uuid_ret__get_packed_size
                     (const GuestfsFindfsUuidRet   *message);
size_t guestfs_findfs_uuid_ret__pack
                     (const GuestfsFindfsUuidRet   *message,
                      uint8_t             *out);
size_t guestfs_findfs_uuid_ret__pack_to_buffer
                     (const GuestfsFindfsUuidRet   *message,
                      ProtobufCBuffer     *buffer);
GuestfsFindfsUuidRet *
       guestfs_findfs_uuid_ret__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_findfs_uuid_ret__free_unpacked
                     (GuestfsFindfsUuidRet *message,
                      ProtobufCAllocator *allocator);
/* GuestfsFindfsLabelArgs methods */
void   guestfs_findfs_label_args__init
                     (GuestfsFindfsLabelArgs         *message);
size_t guestfs_findfs_label_args__get_packed_size
                     (const GuestfsFindfsLabelArgs   *message);
size_t guestfs_findfs_label_args__pack
                     (const GuestfsFindfsLabelArgs   *message,
                      uint8_t             *out);
size_t guestfs_findfs_label_args__pack_to_buffer
                     (const GuestfsFindfsLabelArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsFindfsLabelArgs *
       guestfs_findfs_label_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_findfs_label_args__free_unpacked
                     (GuestfsFindfsLabelArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsFindfsLabelRet methods */
void   guestfs_findfs_label_ret__init
                     (GuestfsFindfsLabelRet         *message);
size_t guestfs_findfs_label_ret__get_packed_size
                     (const GuestfsFindfsLabelRet   *message);
size_t guestfs_findfs_label_ret__pack
                     (const GuestfsFindfsLabelRet   *message,
                      uint8_t             *out);
size_t guestfs_findfs_label_ret__pack_to_buffer
                     (const GuestfsFindfsLabelRet   *message,
                      ProtobufCBuffer     *buffer);
GuestfsFindfsLabelRet *
       guestfs_findfs_label_ret__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_findfs_label_ret__free_unpacked
                     (GuestfsFindfsLabelRet *message,
                      ProtobufCAllocator *allocator);
/* GuestfsIsChardevArgs methods */
void   guestfs_is_chardev_args__init
                     (GuestfsIsChardevArgs         *message);
size_t guestfs_is_chardev_args__get_packed_size
                     (const GuestfsIsChardevArgs   *message);
size_t guestfs_is_chardev_args__pack
                     (const GuestfsIsChardevArgs   *message,
                      uint8_t             *out);
size_t guestfs_is_chardev_args__pack_to_buffer
                     (const GuestfsIsChardevArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsIsChardevArgs *
       guestfs_is_chardev_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_is_chardev_args__free_unpacked
                     (GuestfsIsChardevArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsIsChardevRet methods */
void   guestfs_is_chardev_ret__init
                     (GuestfsIsChardevRet         *message);
size_t guestfs_is_chardev_ret__get_packed_size
                     (const GuestfsIsChardevRet   *message);
size_t guestfs_is_chardev_ret__pack
                     (const GuestfsIsChardevRet   *message,
                      uint8_t             *out);
size_t guestfs_is_chardev_ret__pack_to_buffer
                     (const GuestfsIsChardevRet   *message,
                      ProtobufCBuffer     *buffer);
GuestfsIsChardevRet *
       guestfs_is_chardev_ret__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_is_chardev_ret__free_unpacked
                     (GuestfsIsChardevRet *message,
                      ProtobufCAllocator *allocator);
/* GuestfsIsBlockdevArgs methods */
void   guestfs_is_blockdev_args__init
                     (GuestfsIsBlockdevArgs         *message);
size_t guestfs_is_blockdev_args__get_packed_size
                     (const GuestfsIsBlockdevArgs   *message);
size_t guestfs_is_blockdev_args__pack
                     (const GuestfsIsBlockdevArgs   *message,
                      uint8_t             *out);
size_t guestfs_is_blockdev_args__pack_to_buffer
                     (const GuestfsIsBlockdevArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsIsBlockdevArgs *
       guestfs_is_blockdev_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_is_blockdev_args__free_unpacked
                     (GuestfsIsBlockdevArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsIsBlockdevRet methods */
void   guestfs_is_blockdev_ret__init
                     (GuestfsIsBlockdevRet         *message);
size_t guestfs_is_blockdev_ret__get_packed_size
                     (const GuestfsIsBlockdevRet   *message);
size_t guestfs_is_blockdev_ret__pack
                     (const GuestfsIsBlockdevRet   *message,
                      uint8_t             *out);
size_t guestfs_is_blockdev_ret__pack_to_buffer
                     (const GuestfsIsBlockdevRet   *message,
                      ProtobufCBuffer     *buffer);
GuestfsIsBlockdevRet *
       guestfs_is_blockdev_ret__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_is_blockdev_ret__free_unpacked
                     (GuestfsIsBlockdevRet *message,
                      ProtobufCAllocator *allocator);
/* GuestfsIsFifoArgs methods */
void   guestfs_is_fifo_args__init
                     (GuestfsIsFifoArgs         *message);
size_t guestfs_is_fifo_args__get_packed_size
                     (const GuestfsIsFifoArgs   *message);
size_t guestfs_is_fifo_args__pack
                     (const GuestfsIsFifoArgs   *message,
                      uint8_t             *out);
size_t guestfs_is_fifo_args__pack_to_buffer
                     (const GuestfsIsFifoArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsIsFifoArgs *
       guestfs_is_fifo_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_is_fifo_args__free_unpacked
                     (GuestfsIsFifoArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsIsFifoRet methods */
void   guestfs_is_fifo_ret__init
                     (GuestfsIsFifoRet         *message);
size_t guestfs_is_fifo_ret__get_packed_size
                     (const GuestfsIsFifoRet   *message);
size_t guestfs_is_fifo_ret__pack
                     (const GuestfsIsFifoRet   *message,
                      uint8_t             *out);
size_t guestfs_is_fifo_ret__pack_to_buffer
                     (const GuestfsIsFifoRet   *message,
                      ProtobufCBuffer     *buffer);
GuestfsIsFifoRet *
       guestfs_is_fifo_ret__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_is_fifo_ret__free_unpacked
                     (GuestfsIsFifoRet *message,
                      ProtobufCAllocator *allocator);
/* GuestfsIsSymlinkArgs methods */
void   guestfs_is_symlink_args__init
                     (GuestfsIsSymlinkArgs         *message);
size_t guestfs_is_symlink_args__get_packed_size
                     (const GuestfsIsSymlinkArgs   *message);
size_t guestfs_is_symlink_args__pack
                     (const GuestfsIsSymlinkArgs   *message,
                      uint8_t             *out);
size_t guestfs_is_symlink_args__pack_to_buffer
                     (const GuestfsIsSymlinkArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsIsSymlinkArgs *
       guestfs_is_symlink_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_is_symlink_args__free_unpacked
                     (GuestfsIsSymlinkArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsIsSymlinkRet methods */
void   guestfs_is_symlink_ret__init
                     (GuestfsIsSymlinkRet         *message);
size_t guestfs_is_symlink_ret__get_packed_size
                     (const GuestfsIsSymlinkRet   *message);
size_t guestfs_is_symlink_ret__pack
                     (const GuestfsIsSymlinkRet   *message,
                      uint8_t             *out);
size_t guestfs_is_symlink_ret__pack_to_buffer
                     (const GuestfsIsSymlinkRet   *message,
                      ProtobufCBuffer     *buffer);
GuestfsIsSymlinkRet *
       guestfs_is_symlink_ret__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_is_symlink_ret__free_unpacked
                     (GuestfsIsSymlinkRet *message,
                      ProtobufCAllocator *allocator);
/* GuestfsIsSocketArgs methods */
void   guestfs_is_socket_args__init
                     (GuestfsIsSocketArgs         *message);
size_t guestfs_is_socket_args__get_packed_size
                     (const GuestfsIsSocketArgs   *message);
size_t guestfs_is_socket_args__pack
                     (const GuestfsIsSocketArgs   *message,
                      uint8_t             *out);
size_t guestfs_is_socket_args__pack_to_buffer
                     (const GuestfsIsSocketArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsIsSocketArgs *
       guestfs_is_socket_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_is_socket_args__free_unpacked
                     (GuestfsIsSocketArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsIsSocketRet methods */
void   guestfs_is_socket_ret__init
                     (GuestfsIsSocketRet         *message);
size_t guestfs_is_socket_ret__get_packed_size
                     (const GuestfsIsSocketRet   *message);
size_t guestfs_is_socket_ret__pack
                     (const GuestfsIsSocketRet   *message,
                      uint8_t             *out);
size_t guestfs_is_socket_ret__pack_to_buffer
                     (const GuestfsIsSocketRet   *message,
                      ProtobufCBuffer     *buffer);
GuestfsIsSocketRet *
       guestfs_is_socket_ret__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_is_socket_ret__free_unpacked
                     (GuestfsIsSocketRet *message,
                      ProtobufCAllocator *allocator);
/* GuestfsPartToDevArgs methods */
void   guestfs_part_to_dev_args__init
                     (GuestfsPartToDevArgs         *message);
size_t guestfs_part_to_dev_args__get_packed_size
                     (const GuestfsPartToDevArgs   *message);
size_t guestfs_part_to_dev_args__pack
                     (const GuestfsPartToDevArgs   *message,
                      uint8_t             *out);
size_t guestfs_part_to_dev_args__pack_to_buffer
                     (const GuestfsPartToDevArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsPartToDevArgs *
       guestfs_part_to_dev_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_part_to_dev_args__free_unpacked
                     (GuestfsPartToDevArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsPartToDevRet methods */
void   guestfs_part_to_dev_ret__init
                     (GuestfsPartToDevRet         *message);
size_t guestfs_part_to_dev_ret__get_packed_size
                     (const GuestfsPartToDevRet   *message);
size_t guestfs_part_to_dev_ret__pack
                     (const GuestfsPartToDevRet   *message,
                      uint8_t             *out);
size_t guestfs_part_to_dev_ret__pack_to_buffer
                     (const GuestfsPartToDevRet   *message,
                      ProtobufCBuffer     *buffer);
GuestfsPartToDevRet *
       guestfs_part_to_dev_ret__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_part_to_dev_ret__free_unpacked
                     (GuestfsPartToDevRet *message,
                      ProtobufCAllocator *allocator);
/* GuestfsUploadOffsetArgs methods */
void   guestfs_upload_offset_args__init
                     (GuestfsUploadOffsetArgs         *message);
size_t guestfs_upload_offset_args__get_packed_size
                     (const GuestfsUploadOffsetArgs   *message);
size_t guestfs_upload_offset_args__pack
                     (const GuestfsUploadOffsetArgs   *message,
                      uint8_t             *out);
size_t guestfs_upload_offset_args__pack_to_buffer
                     (const GuestfsUploadOffsetArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsUploadOffsetArgs *
       guestfs_upload_offset_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_upload_offset_args__free_unpacked
                     (GuestfsUploadOffsetArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsDownloadOffsetArgs methods */
void   guestfs_download_offset_args__init
                     (GuestfsDownloadOffsetArgs         *message);
size_t guestfs_download_offset_args__get_packed_size
                     (const GuestfsDownloadOffsetArgs   *message);
size_t guestfs_download_offset_args__pack
                     (const GuestfsDownloadOffsetArgs   *message,
                      uint8_t             *out);
size_t guestfs_download_offset_args__pack_to_buffer
                     (const GuestfsDownloadOffsetArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsDownloadOffsetArgs *
       guestfs_download_offset_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_download_offset_args__free_unpacked
                     (GuestfsDownloadOffsetArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsPwriteDeviceArgs methods */
void   guestfs_pwrite_device_args__init
                     (GuestfsPwriteDeviceArgs         *message);
size_t guestfs_pwrite_device_args__get_packed_size
                     (const GuestfsPwriteDeviceArgs   *message);
size_t guestfs_pwrite_device_args__pack
                     (const GuestfsPwriteDeviceArgs   *message,
                      uint8_t             *out);
size_t guestfs_pwrite_device_args__pack_to_buffer
                     (const GuestfsPwriteDeviceArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsPwriteDeviceArgs *
       guestfs_pwrite_device_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_pwrite_device_args__free_unpacked
                     (GuestfsPwriteDeviceArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsPwriteDeviceRet methods */
void   guestfs_pwrite_device_ret__init
                     (GuestfsPwriteDeviceRet         *message);
size_t guestfs_pwrite_device_ret__get_packed_size
                     (const GuestfsPwriteDeviceRet   *message);
size_t guestfs_pwrite_device_ret__pack
                     (const GuestfsPwriteDeviceRet   *message,
                      uint8_t             *out);
size_t guestfs_pwrite_device_ret__pack_to_buffer
                     (const GuestfsPwriteDeviceRet   *message,
                      ProtobufCBuffer     *buffer);
GuestfsPwriteDeviceRet *
       guestfs_pwrite_device_ret__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_pwrite_device_ret__free_unpacked
                     (GuestfsPwriteDeviceRet *message,
                      ProtobufCAllocator *allocator);
/* GuestfsPreadDeviceArgs methods */
void   guestfs_pread_device_args__init
                     (GuestfsPreadDeviceArgs         *message);
size_t guestfs_pread_device_args__get_packed_size
                     (const GuestfsPreadDeviceArgs   *message);
size_t guestfs_pread_device_args__pack
                     (const GuestfsPreadDeviceArgs   *message,
                      uint8_t             *out);
size_t guestfs_pread_device_args__pack_to_buffer
                     (const GuestfsPreadDeviceArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsPreadDeviceArgs *
       guestfs_pread_device_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_pread_device_args__free_unpacked
                     (GuestfsPreadDeviceArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsPreadDeviceRet methods */
void   guestfs_pread_device_ret__init
                     (GuestfsPreadDeviceRet         *message);
size_t guestfs_pread_device_ret__get_packed_size
                     (const GuestfsPreadDeviceRet   *message);
size_t guestfs_pread_device_ret__pack
                     (const GuestfsPreadDeviceRet   *message,
                      uint8_t             *out);
size_t guestfs_pread_device_ret__pack_to_buffer
                     (const GuestfsPreadDeviceRet   *message,
                      ProtobufCBuffer     *buffer);
GuestfsPreadDeviceRet *
       guestfs_pread_device_ret__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_pread_device_ret__free_unpacked
                     (GuestfsPreadDeviceRet *message,
                      ProtobufCAllocator *allocator);
/* GuestfsLvmCanonicalLvNameArgs methods */
void   guestfs_lvm_canonical_lv_name_args__init
                     (GuestfsLvmCanonicalLvNameArgs         *message);
size_t guestfs_lvm_canonical_lv_name_args__get_packed_size
                     (const GuestfsLvmCanonicalLvNameArgs   *message);
size_t guestfs_lvm_canonical_lv_name_args__pack
                     (const GuestfsLvmCanonicalLvNameArgs   *message,
                      uint8_t             *out);
size_t guestfs_lvm_canonical_lv_name_args__pack_to_buffer
                     (const GuestfsLvmCanonicalLvNameArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsLvmCanonicalLvNameArgs *
       guestfs_lvm_canonical_lv_name_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_lvm_canonical_lv_name_args__free_unpacked
                     (GuestfsLvmCanonicalLvNameArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsLvmCanonicalLvNameRet methods */
void   guestfs_lvm_canonical_lv_name_ret__init
                     (GuestfsLvmCanonicalLvNameRet         *message);
size_t guestfs_lvm_canonical_lv_name_ret__get_packed_size
                     (const GuestfsLvmCanonicalLvNameRet   *message);
size_t guestfs_lvm_canonical_lv_name_ret__pack
                     (const GuestfsLvmCanonicalLvNameRet   *message,
                      uint8_t             *out);
size_t guestfs_lvm_canonical_lv_name_ret__pack_to_buffer
                     (const GuestfsLvmCanonicalLvNameRet   *message,
                      ProtobufCBuffer     *buffer);
GuestfsLvmCanonicalLvNameRet *
       guestfs_lvm_canonical_lv_name_ret__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_lvm_canonical_lv_name_ret__free_unpacked
                     (GuestfsLvmCanonicalLvNameRet *message,
                      ProtobufCAllocator *allocator);
/* GuestfsMkfsArgs methods */
void   guestfs_mkfs_args__init
                     (GuestfsMkfsArgs         *message);
size_t guestfs_mkfs_args__get_packed_size
                     (const GuestfsMkfsArgs   *message);
size_t guestfs_mkfs_args__pack
                     (const GuestfsMkfsArgs   *message,
                      uint8_t             *out);
size_t guestfs_mkfs_args__pack_to_buffer
                     (const GuestfsMkfsArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsMkfsArgs *
       guestfs_mkfs_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_mkfs_args__free_unpacked
                     (GuestfsMkfsArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsGetxattrArgs methods */
void   guestfs_getxattr_args__init
                     (GuestfsGetxattrArgs         *message);
size_t guestfs_getxattr_args__get_packed_size
                     (const GuestfsGetxattrArgs   *message);
size_t guestfs_getxattr_args__pack
                     (const GuestfsGetxattrArgs   *message,
                      uint8_t             *out);
size_t guestfs_getxattr_args__pack_to_buffer
                     (const GuestfsGetxattrArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsGetxattrArgs *
       guestfs_getxattr_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_getxattr_args__free_unpacked
                     (GuestfsGetxattrArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsGetxattrRet methods */
void   guestfs_getxattr_ret__init
                     (GuestfsGetxattrRet         *message);
size_t guestfs_getxattr_ret__get_packed_size
                     (const GuestfsGetxattrRet   *message);
size_t guestfs_getxattr_ret__pack
                     (const GuestfsGetxattrRet   *message,
                      uint8_t             *out);
size_t guestfs_getxattr_ret__pack_to_buffer
                     (const GuestfsGetxattrRet   *message,
                      ProtobufCBuffer     *buffer);
GuestfsGetxattrRet *
       guestfs_getxattr_ret__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_getxattr_ret__free_unpacked
                     (GuestfsGetxattrRet *message,
                      ProtobufCAllocator *allocator);
/* GuestfsLgetxattrArgs methods */
void   guestfs_lgetxattr_args__init
                     (GuestfsLgetxattrArgs         *message);
size_t guestfs_lgetxattr_args__get_packed_size
                     (const GuestfsLgetxattrArgs   *message);
size_t guestfs_lgetxattr_args__pack
                     (const GuestfsLgetxattrArgs   *message,
                      uint8_t             *out);
size_t guestfs_lgetxattr_args__pack_to_buffer
                     (const GuestfsLgetxattrArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsLgetxattrArgs *
       guestfs_lgetxattr_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_lgetxattr_args__free_unpacked
                     (GuestfsLgetxattrArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsLgetxattrRet methods */
void   guestfs_lgetxattr_ret__init
                     (GuestfsLgetxattrRet         *message);
size_t guestfs_lgetxattr_ret__get_packed_size
                     (const GuestfsLgetxattrRet   *message);
size_t guestfs_lgetxattr_ret__pack
                     (const GuestfsLgetxattrRet   *message,
                      uint8_t             *out);
size_t guestfs_lgetxattr_ret__pack_to_buffer
                     (const GuestfsLgetxattrRet   *message,
                      ProtobufCBuffer     *buffer);
GuestfsLgetxattrRet *
       guestfs_lgetxattr_ret__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_lgetxattr_ret__free_unpacked
                     (GuestfsLgetxattrRet *message,
                      ProtobufCAllocator *allocator);
/* GuestfsResize2fsmArgs methods */
void   guestfs_resize2fsm_args__init
                     (GuestfsResize2fsmArgs         *message);
size_t guestfs_resize2fsm_args__get_packed_size
                     (const GuestfsResize2fsmArgs   *message);
size_t guestfs_resize2fsm_args__pack
                     (const GuestfsResize2fsmArgs   *message,
                      uint8_t             *out);
size_t guestfs_resize2fsm_args__pack_to_buffer
                     (const GuestfsResize2fsmArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsResize2fsmArgs *
       guestfs_resize2fsm_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_resize2fsm_args__free_unpacked
                     (GuestfsResize2fsmArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsIsZeroArgs methods */
void   guestfs_is_zero_args__init
                     (GuestfsIsZeroArgs         *message);
size_t guestfs_is_zero_args__get_packed_size
                     (const GuestfsIsZeroArgs   *message);
size_t guestfs_is_zero_args__pack
                     (const GuestfsIsZeroArgs   *message,
                      uint8_t             *out);
size_t guestfs_is_zero_args__pack_to_buffer
                     (const GuestfsIsZeroArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsIsZeroArgs *
       guestfs_is_zero_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_is_zero_args__free_unpacked
                     (GuestfsIsZeroArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsIsZeroRet methods */
void   guestfs_is_zero_ret__init
                     (GuestfsIsZeroRet         *message);
size_t guestfs_is_zero_ret__get_packed_size
                     (const GuestfsIsZeroRet   *message);
size_t guestfs_is_zero_ret__pack
                     (const GuestfsIsZeroRet   *message,
                      uint8_t             *out);
size_t guestfs_is_zero_ret__pack_to_buffer
                     (const GuestfsIsZeroRet   *message,
                      ProtobufCBuffer     *buffer);
GuestfsIsZeroRet *
       guestfs_is_zero_ret__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_is_zero_ret__free_unpacked
                     (GuestfsIsZeroRet *message,
                      ProtobufCAllocator *allocator);
/* GuestfsIsZeroDeviceArgs methods */
void   guestfs_is_zero_device_args__init
                     (GuestfsIsZeroDeviceArgs         *message);
size_t guestfs_is_zero_device_args__get_packed_size
                     (const GuestfsIsZeroDeviceArgs   *message);
size_t guestfs_is_zero_device_args__pack
                     (const GuestfsIsZeroDeviceArgs   *message,
                      uint8_t             *out);
size_t guestfs_is_zero_device_args__pack_to_buffer
                     (const GuestfsIsZeroDeviceArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsIsZeroDeviceArgs *
       guestfs_is_zero_device_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_is_zero_device_args__free_unpacked
                     (GuestfsIsZeroDeviceArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsIsZeroDeviceRet methods */
void   guestfs_is_zero_device_ret__init
                     (GuestfsIsZeroDeviceRet         *message);
size_t guestfs_is_zero_device_ret__get_packed_size
                     (const GuestfsIsZeroDeviceRet   *message);
size_t guestfs_is_zero_device_ret__pack
                     (const GuestfsIsZeroDeviceRet   *message,
                      uint8_t             *out);
size_t guestfs_is_zero_device_ret__pack_to_buffer
                     (const GuestfsIsZeroDeviceRet   *message,
                      ProtobufCBuffer     *buffer);
GuestfsIsZeroDeviceRet *
       guestfs_is_zero_device_ret__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_is_zero_device_ret__free_unpacked
                     (GuestfsIsZeroDeviceRet *message,
                      ProtobufCAllocator *allocator);
/* GuestfsList9pRet methods */
void   guestfs_list9p_ret__init
                     (GuestfsList9pRet         *message);
size_t guestfs_list9p_ret__get_packed_size
                     (const GuestfsList9pRet   *message);
size_t guestfs_list9p_ret__pack
                     (const GuestfsList9pRet   *message,
                      uint8_t             *out);
size_t guestfs_list9p_ret__pack_to_buffer
                     (const GuestfsList9pRet   *message,
                      ProtobufCBuffer     *buffer);
GuestfsList9pRet *
       guestfs_list9p_ret__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_list9p_ret__free_unpacked
                     (GuestfsList9pRet *message,
                      ProtobufCAllocator *allocator);
/* GuestfsMount9pArgs methods */
void   guestfs_mount9p_args__init
                     (GuestfsMount9pArgs         *message);
size_t guestfs_mount9p_args__get_packed_size
                     (const GuestfsMount9pArgs   *message);
size_t guestfs_mount9p_args__pack
                     (const GuestfsMount9pArgs   *message,
                      uint8_t             *out);
size_t guestfs_mount9p_args__pack_to_buffer
                     (const GuestfsMount9pArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsMount9pArgs *
       guestfs_mount9p_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_mount9p_args__free_unpacked
                     (GuestfsMount9pArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsListDmDevicesRet methods */
void   guestfs_list_dm_devices_ret__init
                     (GuestfsListDmDevicesRet         *message);
size_t guestfs_list_dm_devices_ret__get_packed_size
                     (const GuestfsListDmDevicesRet   *message);
size_t guestfs_list_dm_devices_ret__pack
                     (const GuestfsListDmDevicesRet   *message,
                      uint8_t             *out);
size_t guestfs_list_dm_devices_ret__pack_to_buffer
                     (const GuestfsListDmDevicesRet   *message,
                      ProtobufCBuffer     *buffer);
GuestfsListDmDevicesRet *
       guestfs_list_dm_devices_ret__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_list_dm_devices_ret__free_unpacked
                     (GuestfsListDmDevicesRet *message,
                      ProtobufCAllocator *allocator);
/* GuestfsNTFSResizeArgs methods */
void   guestfs_ntfsresize_args__init
                     (GuestfsNTFSResizeArgs         *message);
size_t guestfs_ntfsresize_args__get_packed_size
                     (const GuestfsNTFSResizeArgs   *message);
size_t guestfs_ntfsresize_args__pack
                     (const GuestfsNTFSResizeArgs   *message,
                      uint8_t             *out);
size_t guestfs_ntfsresize_args__pack_to_buffer
                     (const GuestfsNTFSResizeArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsNTFSResizeArgs *
       guestfs_ntfsresize_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_ntfsresize_args__free_unpacked
                     (GuestfsNTFSResizeArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsBtrfsFilesystemResizeArgs methods */
void   guestfs_btrfs_filesystem_resize_args__init
                     (GuestfsBtrfsFilesystemResizeArgs         *message);
size_t guestfs_btrfs_filesystem_resize_args__get_packed_size
                     (const GuestfsBtrfsFilesystemResizeArgs   *message);
size_t guestfs_btrfs_filesystem_resize_args__pack
                     (const GuestfsBtrfsFilesystemResizeArgs   *message,
                      uint8_t             *out);
size_t guestfs_btrfs_filesystem_resize_args__pack_to_buffer
                     (const GuestfsBtrfsFilesystemResizeArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsBtrfsFilesystemResizeArgs *
       guestfs_btrfs_filesystem_resize_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_btrfs_filesystem_resize_args__free_unpacked
                     (GuestfsBtrfsFilesystemResizeArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsInternalWriteAppendArgs methods */
void   guestfs_internal_write_append_args__init
                     (GuestfsInternalWriteAppendArgs         *message);
size_t guestfs_internal_write_append_args__get_packed_size
                     (const GuestfsInternalWriteAppendArgs   *message);
size_t guestfs_internal_write_append_args__pack
                     (const GuestfsInternalWriteAppendArgs   *message,
                      uint8_t             *out);
size_t guestfs_internal_write_append_args__pack_to_buffer
                     (const GuestfsInternalWriteAppendArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsInternalWriteAppendArgs *
       guestfs_internal_write_append_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_internal_write_append_args__free_unpacked
                     (GuestfsInternalWriteAppendArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsCompressOutArgs methods */
void   guestfs_compress_out_args__init
                     (GuestfsCompressOutArgs         *message);
size_t guestfs_compress_out_args__get_packed_size
                     (const GuestfsCompressOutArgs   *message);
size_t guestfs_compress_out_args__pack
                     (const GuestfsCompressOutArgs   *message,
                      uint8_t             *out);
size_t guestfs_compress_out_args__pack_to_buffer
                     (const GuestfsCompressOutArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsCompressOutArgs *
       guestfs_compress_out_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_compress_out_args__free_unpacked
                     (GuestfsCompressOutArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsCompressDeviceOutArgs methods */
void   guestfs_compress_device_out_args__init
                     (GuestfsCompressDeviceOutArgs         *message);
size_t guestfs_compress_device_out_args__get_packed_size
                     (const GuestfsCompressDeviceOutArgs   *message);
size_t guestfs_compress_device_out_args__pack
                     (const GuestfsCompressDeviceOutArgs   *message,
                      uint8_t             *out);
size_t guestfs_compress_device_out_args__pack_to_buffer
                     (const GuestfsCompressDeviceOutArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsCompressDeviceOutArgs *
       guestfs_compress_device_out_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_compress_device_out_args__free_unpacked
                     (GuestfsCompressDeviceOutArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsPartToPartnumArgs methods */
void   guestfs_part_to_partnum_args__init
                     (GuestfsPartToPartnumArgs         *message);
size_t guestfs_part_to_partnum_args__get_packed_size
                     (const GuestfsPartToPartnumArgs   *message);
size_t guestfs_part_to_partnum_args__pack
                     (const GuestfsPartToPartnumArgs   *message,
                      uint8_t             *out);
size_t guestfs_part_to_partnum_args__pack_to_buffer
                     (const GuestfsPartToPartnumArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsPartToPartnumArgs *
       guestfs_part_to_partnum_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_part_to_partnum_args__free_unpacked
                     (GuestfsPartToPartnumArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsPartToPartnumRet methods */
void   guestfs_part_to_partnum_ret__init
                     (GuestfsPartToPartnumRet         *message);
size_t guestfs_part_to_partnum_ret__get_packed_size
                     (const GuestfsPartToPartnumRet   *message);
size_t guestfs_part_to_partnum_ret__pack
                     (const GuestfsPartToPartnumRet   *message,
                      uint8_t             *out);
size_t guestfs_part_to_partnum_ret__pack_to_buffer
                     (const GuestfsPartToPartnumRet   *message,
                      ProtobufCBuffer     *buffer);
GuestfsPartToPartnumRet *
       guestfs_part_to_partnum_ret__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_part_to_partnum_ret__free_unpacked
                     (GuestfsPartToPartnumRet *message,
                      ProtobufCAllocator *allocator);
/* GuestfsCopyDeviceToDeviceArgs methods */
void   guestfs_copy_device_to_device_args__init
                     (GuestfsCopyDeviceToDeviceArgs         *message);
size_t guestfs_copy_device_to_device_args__get_packed_size
                     (const GuestfsCopyDeviceToDeviceArgs   *message);
size_t guestfs_copy_device_to_device_args__pack
                     (const GuestfsCopyDeviceToDeviceArgs   *message,
                      uint8_t             *out);
size_t guestfs_copy_device_to_device_args__pack_to_buffer
                     (const GuestfsCopyDeviceToDeviceArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsCopyDeviceToDeviceArgs *
       guestfs_copy_device_to_device_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_copy_device_to_device_args__free_unpacked
                     (GuestfsCopyDeviceToDeviceArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsCopyDeviceToFileArgs methods */
void   guestfs_copy_device_to_file_args__init
                     (GuestfsCopyDeviceToFileArgs         *message);
size_t guestfs_copy_device_to_file_args__get_packed_size
                     (const GuestfsCopyDeviceToFileArgs   *message);
size_t guestfs_copy_device_to_file_args__pack
                     (const GuestfsCopyDeviceToFileArgs   *message,
                      uint8_t             *out);
size_t guestfs_copy_device_to_file_args__pack_to_buffer
                     (const GuestfsCopyDeviceToFileArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsCopyDeviceToFileArgs *
       guestfs_copy_device_to_file_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_copy_device_to_file_args__free_unpacked
                     (GuestfsCopyDeviceToFileArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsCopyFileToDeviceArgs methods */
void   guestfs_copy_file_to_device_args__init
                     (GuestfsCopyFileToDeviceArgs         *message);
size_t guestfs_copy_file_to_device_args__get_packed_size
                     (const GuestfsCopyFileToDeviceArgs   *message);
size_t guestfs_copy_file_to_device_args__pack
                     (const GuestfsCopyFileToDeviceArgs   *message,
                      uint8_t             *out);
size_t guestfs_copy_file_to_device_args__pack_to_buffer
                     (const GuestfsCopyFileToDeviceArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsCopyFileToDeviceArgs *
       guestfs_copy_file_to_device_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_copy_file_to_device_args__free_unpacked
                     (GuestfsCopyFileToDeviceArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsCopyFileToFileArgs methods */
void   guestfs_copy_file_to_file_args__init
                     (GuestfsCopyFileToFileArgs         *message);
size_t guestfs_copy_file_to_file_args__get_packed_size
                     (const GuestfsCopyFileToFileArgs   *message);
size_t guestfs_copy_file_to_file_args__pack
                     (const GuestfsCopyFileToFileArgs   *message,
                      uint8_t             *out);
size_t guestfs_copy_file_to_file_args__pack_to_buffer
                     (const GuestfsCopyFileToFileArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsCopyFileToFileArgs *
       guestfs_copy_file_to_file_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_copy_file_to_file_args__free_unpacked
                     (GuestfsCopyFileToFileArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsTune2fsArgs methods */
void   guestfs_tune2fs_args__init
                     (GuestfsTune2fsArgs         *message);
size_t guestfs_tune2fs_args__get_packed_size
                     (const GuestfsTune2fsArgs   *message);
size_t guestfs_tune2fs_args__pack
                     (const GuestfsTune2fsArgs   *message,
                      uint8_t             *out);
size_t guestfs_tune2fs_args__pack_to_buffer
                     (const GuestfsTune2fsArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsTune2fsArgs *
       guestfs_tune2fs_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_tune2fs_args__free_unpacked
                     (GuestfsTune2fsArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsMdCreateArgs methods */
void   guestfs_md_create_args__init
                     (GuestfsMdCreateArgs         *message);
size_t guestfs_md_create_args__get_packed_size
                     (const GuestfsMdCreateArgs   *message);
size_t guestfs_md_create_args__pack
                     (const GuestfsMdCreateArgs   *message,
                      uint8_t             *out);
size_t guestfs_md_create_args__pack_to_buffer
                     (const GuestfsMdCreateArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsMdCreateArgs *
       guestfs_md_create_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_md_create_args__free_unpacked
                     (GuestfsMdCreateArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsListMdDevicesRet methods */
void   guestfs_list_md_devices_ret__init
                     (GuestfsListMdDevicesRet         *message);
size_t guestfs_list_md_devices_ret__get_packed_size
                     (const GuestfsListMdDevicesRet   *message);
size_t guestfs_list_md_devices_ret__pack
                     (const GuestfsListMdDevicesRet   *message,
                      uint8_t             *out);
size_t guestfs_list_md_devices_ret__pack_to_buffer
                     (const GuestfsListMdDevicesRet   *message,
                      ProtobufCBuffer     *buffer);
GuestfsListMdDevicesRet *
       guestfs_list_md_devices_ret__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_list_md_devices_ret__free_unpacked
                     (GuestfsListMdDevicesRet *message,
                      ProtobufCAllocator *allocator);
/* GuestfsMdDetailArgs methods */
void   guestfs_md_detail_args__init
                     (GuestfsMdDetailArgs         *message);
size_t guestfs_md_detail_args__get_packed_size
                     (const GuestfsMdDetailArgs   *message);
size_t guestfs_md_detail_args__pack
                     (const GuestfsMdDetailArgs   *message,
                      uint8_t             *out);
size_t guestfs_md_detail_args__pack_to_buffer
                     (const GuestfsMdDetailArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsMdDetailArgs *
       guestfs_md_detail_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_md_detail_args__free_unpacked
                     (GuestfsMdDetailArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsMdDetailRet methods */
void   guestfs_md_detail_ret__init
                     (GuestfsMdDetailRet         *message);
size_t guestfs_md_detail_ret__get_packed_size
                     (const GuestfsMdDetailRet   *message);
size_t guestfs_md_detail_ret__pack
                     (const GuestfsMdDetailRet   *message,
                      uint8_t             *out);
size_t guestfs_md_detail_ret__pack_to_buffer
                     (const GuestfsMdDetailRet   *message,
                      ProtobufCBuffer     *buffer);
GuestfsMdDetailRet *
       guestfs_md_detail_ret__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_md_detail_ret__free_unpacked
                     (GuestfsMdDetailRet *message,
                      ProtobufCAllocator *allocator);
/* GuestfsMdStopArgs methods */
void   guestfs_md_stop_args__init
                     (GuestfsMdStopArgs         *message);
size_t guestfs_md_stop_args__get_packed_size
                     (const GuestfsMdStopArgs   *message);
size_t guestfs_md_stop_args__pack
                     (const GuestfsMdStopArgs   *message,
                      uint8_t             *out);
size_t guestfs_md_stop_args__pack_to_buffer
                     (const GuestfsMdStopArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsMdStopArgs *
       guestfs_md_stop_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_md_stop_args__free_unpacked
                     (GuestfsMdStopArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsBlkidArgs methods */
void   guestfs_blkid_args__init
                     (GuestfsBlkidArgs         *message);
size_t guestfs_blkid_args__get_packed_size
                     (const GuestfsBlkidArgs   *message);
size_t guestfs_blkid_args__pack
                     (const GuestfsBlkidArgs   *message,
                      uint8_t             *out);
size_t guestfs_blkid_args__pack_to_buffer
                     (const GuestfsBlkidArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsBlkidArgs *
       guestfs_blkid_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_blkid_args__free_unpacked
                     (GuestfsBlkidArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsBlkidRet methods */
void   guestfs_blkid_ret__init
                     (GuestfsBlkidRet         *message);
size_t guestfs_blkid_ret__get_packed_size
                     (const GuestfsBlkidRet   *message);
size_t guestfs_blkid_ret__pack
                     (const GuestfsBlkidRet   *message,
                      uint8_t             *out);
size_t guestfs_blkid_ret__pack_to_buffer
                     (const GuestfsBlkidRet   *message,
                      ProtobufCBuffer     *buffer);
GuestfsBlkidRet *
       guestfs_blkid_ret__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_blkid_ret__free_unpacked
                     (GuestfsBlkidRet *message,
                      ProtobufCAllocator *allocator);
/* GuestfsE2fsckArgs methods */
void   guestfs_e2fsck_args__init
                     (GuestfsE2fsckArgs         *message);
size_t guestfs_e2fsck_args__get_packed_size
                     (const GuestfsE2fsckArgs   *message);
size_t guestfs_e2fsck_args__pack
                     (const GuestfsE2fsckArgs   *message,
                      uint8_t             *out);
size_t guestfs_e2fsck_args__pack_to_buffer
                     (const GuestfsE2fsckArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsE2fsckArgs *
       guestfs_e2fsck_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_e2fsck_args__free_unpacked
                     (GuestfsE2fsckArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsLlzArgs methods */
void   guestfs_llz_args__init
                     (GuestfsLlzArgs         *message);
size_t guestfs_llz_args__get_packed_size
                     (const GuestfsLlzArgs   *message);
size_t guestfs_llz_args__pack
                     (const GuestfsLlzArgs   *message,
                      uint8_t             *out);
size_t guestfs_llz_args__pack_to_buffer
                     (const GuestfsLlzArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsLlzArgs *
       guestfs_llz_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_llz_args__free_unpacked
                     (GuestfsLlzArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsLlzRet methods */
void   guestfs_llz_ret__init
                     (GuestfsLlzRet         *message);
size_t guestfs_llz_ret__get_packed_size
                     (const GuestfsLlzRet   *message);
size_t guestfs_llz_ret__pack
                     (const GuestfsLlzRet   *message,
                      uint8_t             *out);
size_t guestfs_llz_ret__pack_to_buffer
                     (const GuestfsLlzRet   *message,
                      ProtobufCBuffer     *buffer);
GuestfsLlzRet *
       guestfs_llz_ret__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_llz_ret__free_unpacked
                     (GuestfsLlzRet *message,
                      ProtobufCAllocator *allocator);
/* GuestfsWipefsArgs methods */
void   guestfs_wipefs_args__init
                     (GuestfsWipefsArgs         *message);
size_t guestfs_wipefs_args__get_packed_size
                     (const GuestfsWipefsArgs   *message);
size_t guestfs_wipefs_args__pack
                     (const GuestfsWipefsArgs   *message,
                      uint8_t             *out);
size_t guestfs_wipefs_args__pack_to_buffer
                     (const GuestfsWipefsArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsWipefsArgs *
       guestfs_wipefs_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_wipefs_args__free_unpacked
                     (GuestfsWipefsArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsNtfsfixArgs methods */
void   guestfs_ntfsfix_args__init
                     (GuestfsNtfsfixArgs         *message);
size_t guestfs_ntfsfix_args__get_packed_size
                     (const GuestfsNtfsfixArgs   *message);
size_t guestfs_ntfsfix_args__pack
                     (const GuestfsNtfsfixArgs   *message,
                      uint8_t             *out);
size_t guestfs_ntfsfix_args__pack_to_buffer
                     (const GuestfsNtfsfixArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsNtfsfixArgs *
       guestfs_ntfsfix_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_ntfsfix_args__free_unpacked
                     (GuestfsNtfsfixArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsNtfscloneOutArgs methods */
void   guestfs_ntfsclone_out_args__init
                     (GuestfsNtfscloneOutArgs         *message);
size_t guestfs_ntfsclone_out_args__get_packed_size
                     (const GuestfsNtfscloneOutArgs   *message);
size_t guestfs_ntfsclone_out_args__pack
                     (const GuestfsNtfscloneOutArgs   *message,
                      uint8_t             *out);
size_t guestfs_ntfsclone_out_args__pack_to_buffer
                     (const GuestfsNtfscloneOutArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsNtfscloneOutArgs *
       guestfs_ntfsclone_out_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_ntfsclone_out_args__free_unpacked
                     (GuestfsNtfscloneOutArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsNtfscloneInArgs methods */
void   guestfs_ntfsclone_in_args__init
                     (GuestfsNtfscloneInArgs         *message);
size_t guestfs_ntfsclone_in_args__get_packed_size
                     (const GuestfsNtfscloneInArgs   *message);
size_t guestfs_ntfsclone_in_args__pack
                     (const GuestfsNtfscloneInArgs   *message,
                      uint8_t             *out);
size_t guestfs_ntfsclone_in_args__pack_to_buffer
                     (const GuestfsNtfscloneInArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsNtfscloneInArgs *
       guestfs_ntfsclone_in_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_ntfsclone_in_args__free_unpacked
                     (GuestfsNtfscloneInArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsSetLabelArgs methods */
void   guestfs_set_label_args__init
                     (GuestfsSetLabelArgs         *message);
size_t guestfs_set_label_args__get_packed_size
                     (const GuestfsSetLabelArgs   *message);
size_t guestfs_set_label_args__pack
                     (const GuestfsSetLabelArgs   *message,
                      uint8_t             *out);
size_t guestfs_set_label_args__pack_to_buffer
                     (const GuestfsSetLabelArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsSetLabelArgs *
       guestfs_set_label_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_set_label_args__free_unpacked
                     (GuestfsSetLabelArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsZeroFreeSpaceArgs methods */
void   guestfs_zero_free_space_args__init
                     (GuestfsZeroFreeSpaceArgs         *message);
size_t guestfs_zero_free_space_args__get_packed_size
                     (const GuestfsZeroFreeSpaceArgs   *message);
size_t guestfs_zero_free_space_args__pack
                     (const GuestfsZeroFreeSpaceArgs   *message,
                      uint8_t             *out);
size_t guestfs_zero_free_space_args__pack_to_buffer
                     (const GuestfsZeroFreeSpaceArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsZeroFreeSpaceArgs *
       guestfs_zero_free_space_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_zero_free_space_args__free_unpacked
                     (GuestfsZeroFreeSpaceArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsLvcreateFreeArgs methods */
void   guestfs_lvcreate_free_args__init
                     (GuestfsLvcreateFreeArgs         *message);
size_t guestfs_lvcreate_free_args__get_packed_size
                     (const GuestfsLvcreateFreeArgs   *message);
size_t guestfs_lvcreate_free_args__pack
                     (const GuestfsLvcreateFreeArgs   *message,
                      uint8_t             *out);
size_t guestfs_lvcreate_free_args__pack_to_buffer
                     (const GuestfsLvcreateFreeArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsLvcreateFreeArgs *
       guestfs_lvcreate_free_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_lvcreate_free_args__free_unpacked
                     (GuestfsLvcreateFreeArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsIsoinfoDeviceArgs methods */
void   guestfs_isoinfo_device_args__init
                     (GuestfsIsoinfoDeviceArgs         *message);
size_t guestfs_isoinfo_device_args__get_packed_size
                     (const GuestfsIsoinfoDeviceArgs   *message);
size_t guestfs_isoinfo_device_args__pack
                     (const GuestfsIsoinfoDeviceArgs   *message,
                      uint8_t             *out);
size_t guestfs_isoinfo_device_args__pack_to_buffer
                     (const GuestfsIsoinfoDeviceArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsIsoinfoDeviceArgs *
       guestfs_isoinfo_device_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_isoinfo_device_args__free_unpacked
                     (GuestfsIsoinfoDeviceArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsIsoinfoDeviceRet methods */
void   guestfs_isoinfo_device_ret__init
                     (GuestfsIsoinfoDeviceRet         *message);
size_t guestfs_isoinfo_device_ret__get_packed_size
                     (const GuestfsIsoinfoDeviceRet   *message);
size_t guestfs_isoinfo_device_ret__pack
                     (const GuestfsIsoinfoDeviceRet   *message,
                      uint8_t             *out);
size_t guestfs_isoinfo_device_ret__pack_to_buffer
                     (const GuestfsIsoinfoDeviceRet   *message,
                      ProtobufCBuffer     *buffer);
GuestfsIsoinfoDeviceRet *
       guestfs_isoinfo_device_ret__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_isoinfo_device_ret__free_unpacked
                     (GuestfsIsoinfoDeviceRet *message,
                      ProtobufCAllocator *allocator);
/* GuestfsIsoinfoArgs methods */
void   guestfs_isoinfo_args__init
                     (GuestfsIsoinfoArgs         *message);
size_t guestfs_isoinfo_args__get_packed_size
                     (const GuestfsIsoinfoArgs   *message);
size_t guestfs_isoinfo_args__pack
                     (const GuestfsIsoinfoArgs   *message,
                      uint8_t             *out);
size_t guestfs_isoinfo_args__pack_to_buffer
                     (const GuestfsIsoinfoArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsIsoinfoArgs *
       guestfs_isoinfo_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_isoinfo_args__free_unpacked
                     (GuestfsIsoinfoArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsIsoinfoRet methods */
void   guestfs_isoinfo_ret__init
                     (GuestfsIsoinfoRet         *message);
size_t guestfs_isoinfo_ret__get_packed_size
                     (const GuestfsIsoinfoRet   *message);
size_t guestfs_isoinfo_ret__pack
                     (const GuestfsIsoinfoRet   *message,
                      uint8_t             *out);
size_t guestfs_isoinfo_ret__pack_to_buffer
                     (const GuestfsIsoinfoRet   *message,
                      ProtobufCBuffer     *buffer);
GuestfsIsoinfoRet *
       guestfs_isoinfo_ret__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_isoinfo_ret__free_unpacked
                     (GuestfsIsoinfoRet *message,
                      ProtobufCAllocator *allocator);
/* GuestfsVgmetaArgs methods */
void   guestfs_vgmeta_args__init
                     (GuestfsVgmetaArgs         *message);
size_t guestfs_vgmeta_args__get_packed_size
                     (const GuestfsVgmetaArgs   *message);
size_t guestfs_vgmeta_args__pack
                     (const GuestfsVgmetaArgs   *message,
                      uint8_t             *out);
size_t guestfs_vgmeta_args__pack_to_buffer
                     (const GuestfsVgmetaArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsVgmetaArgs *
       guestfs_vgmeta_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_vgmeta_args__free_unpacked
                     (GuestfsVgmetaArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsVgmetaRet methods */
void   guestfs_vgmeta_ret__init
                     (GuestfsVgmetaRet         *message);
size_t guestfs_vgmeta_ret__get_packed_size
                     (const GuestfsVgmetaRet   *message);
size_t guestfs_vgmeta_ret__pack
                     (const GuestfsVgmetaRet   *message,
                      uint8_t             *out);
size_t guestfs_vgmeta_ret__pack_to_buffer
                     (const GuestfsVgmetaRet   *message,
                      ProtobufCBuffer     *buffer);
GuestfsVgmetaRet *
       guestfs_vgmeta_ret__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_vgmeta_ret__free_unpacked
                     (GuestfsVgmetaRet *message,
                      ProtobufCAllocator *allocator);
/* GuestfsMdStatArgs methods */
void   guestfs_md_stat_args__init
                     (GuestfsMdStatArgs         *message);
size_t guestfs_md_stat_args__get_packed_size
                     (const GuestfsMdStatArgs   *message);
size_t guestfs_md_stat_args__pack
                     (const GuestfsMdStatArgs   *message,
                      uint8_t             *out);
size_t guestfs_md_stat_args__pack_to_buffer
                     (const GuestfsMdStatArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsMdStatArgs *
       guestfs_md_stat_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_md_stat_args__free_unpacked
                     (GuestfsMdStatArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsMdStatRet methods */
void   guestfs_md_stat_ret__init
                     (GuestfsMdStatRet         *message);
size_t guestfs_md_stat_ret__get_packed_size
                     (const GuestfsMdStatRet   *message);
size_t guestfs_md_stat_ret__pack
                     (const GuestfsMdStatRet   *message,
                      uint8_t             *out);
size_t guestfs_md_stat_ret__pack_to_buffer
                     (const GuestfsMdStatRet   *message,
                      ProtobufCBuffer     *buffer);
GuestfsMdStatRet *
       guestfs_md_stat_ret__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_md_stat_ret__free_unpacked
                     (GuestfsMdStatRet *message,
                      ProtobufCAllocator *allocator);
/* GuestfsMkfsBtrfsArgs methods */
void   guestfs_mkfs_btrfs_args__init
                     (GuestfsMkfsBtrfsArgs         *message);
size_t guestfs_mkfs_btrfs_args__get_packed_size
                     (const GuestfsMkfsBtrfsArgs   *message);
size_t guestfs_mkfs_btrfs_args__pack
                     (const GuestfsMkfsBtrfsArgs   *message,
                      uint8_t             *out);
size_t guestfs_mkfs_btrfs_args__pack_to_buffer
                     (const GuestfsMkfsBtrfsArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsMkfsBtrfsArgs *
       guestfs_mkfs_btrfs_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_mkfs_btrfs_args__free_unpacked
                     (GuestfsMkfsBtrfsArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsGetE2attrsArgs methods */
void   guestfs_get_e2attrs_args__init
                     (GuestfsGetE2attrsArgs         *message);
size_t guestfs_get_e2attrs_args__get_packed_size
                     (const GuestfsGetE2attrsArgs   *message);
size_t guestfs_get_e2attrs_args__pack
                     (const GuestfsGetE2attrsArgs   *message,
                      uint8_t             *out);
size_t guestfs_get_e2attrs_args__pack_to_buffer
                     (const GuestfsGetE2attrsArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsGetE2attrsArgs *
       guestfs_get_e2attrs_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_get_e2attrs_args__free_unpacked
                     (GuestfsGetE2attrsArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsGetE2attrsRet methods */
void   guestfs_get_e2attrs_ret__init
                     (GuestfsGetE2attrsRet         *message);
size_t guestfs_get_e2attrs_ret__get_packed_size
                     (const GuestfsGetE2attrsRet   *message);
size_t guestfs_get_e2attrs_ret__pack
                     (const GuestfsGetE2attrsRet   *message,
                      uint8_t             *out);
size_t guestfs_get_e2attrs_ret__pack_to_buffer
                     (const GuestfsGetE2attrsRet   *message,
                      ProtobufCBuffer     *buffer);
GuestfsGetE2attrsRet *
       guestfs_get_e2attrs_ret__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_get_e2attrs_ret__free_unpacked
                     (GuestfsGetE2attrsRet *message,
                      ProtobufCAllocator *allocator);
/* GuestfsSetE2attrsArgs methods */
void   guestfs_set_e2attrs_args__init
                     (GuestfsSetE2attrsArgs         *message);
size_t guestfs_set_e2attrs_args__get_packed_size
                     (const GuestfsSetE2attrsArgs   *message);
size_t guestfs_set_e2attrs_args__pack
                     (const GuestfsSetE2attrsArgs   *message,
                      uint8_t             *out);
size_t guestfs_set_e2attrs_args__pack_to_buffer
                     (const GuestfsSetE2attrsArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsSetE2attrsArgs *
       guestfs_set_e2attrs_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_set_e2attrs_args__free_unpacked
                     (GuestfsSetE2attrsArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsGetE2generationArgs methods */
void   guestfs_get_e2generation_args__init
                     (GuestfsGetE2generationArgs         *message);
size_t guestfs_get_e2generation_args__get_packed_size
                     (const GuestfsGetE2generationArgs   *message);
size_t guestfs_get_e2generation_args__pack
                     (const GuestfsGetE2generationArgs   *message,
                      uint8_t             *out);
size_t guestfs_get_e2generation_args__pack_to_buffer
                     (const GuestfsGetE2generationArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsGetE2generationArgs *
       guestfs_get_e2generation_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_get_e2generation_args__free_unpacked
                     (GuestfsGetE2generationArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsGetE2generationRet methods */
void   guestfs_get_e2generation_ret__init
                     (GuestfsGetE2generationRet         *message);
size_t guestfs_get_e2generation_ret__get_packed_size
                     (const GuestfsGetE2generationRet   *message);
size_t guestfs_get_e2generation_ret__pack
                     (const GuestfsGetE2generationRet   *message,
                      uint8_t             *out);
size_t guestfs_get_e2generation_ret__pack_to_buffer
                     (const GuestfsGetE2generationRet   *message,
                      ProtobufCBuffer     *buffer);
GuestfsGetE2generationRet *
       guestfs_get_e2generation_ret__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_get_e2generation_ret__free_unpacked
                     (GuestfsGetE2generationRet *message,
                      ProtobufCAllocator *allocator);
/* GuestfsSetE2generationArgs methods */
void   guestfs_set_e2generation_args__init
                     (GuestfsSetE2generationArgs         *message);
size_t guestfs_set_e2generation_args__get_packed_size
                     (const GuestfsSetE2generationArgs   *message);
size_t guestfs_set_e2generation_args__pack
                     (const GuestfsSetE2generationArgs   *message,
                      uint8_t             *out);
size_t guestfs_set_e2generation_args__pack_to_buffer
                     (const GuestfsSetE2generationArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsSetE2generationArgs *
       guestfs_set_e2generation_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_set_e2generation_args__free_unpacked
                     (GuestfsSetE2generationArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsBtrfsSubvolumeSnapshotArgs methods */
void   guestfs_btrfs_subvolume_snapshot_args__init
                     (GuestfsBtrfsSubvolumeSnapshotArgs         *message);
size_t guestfs_btrfs_subvolume_snapshot_args__get_packed_size
                     (const GuestfsBtrfsSubvolumeSnapshotArgs   *message);
size_t guestfs_btrfs_subvolume_snapshot_args__pack
                     (const GuestfsBtrfsSubvolumeSnapshotArgs   *message,
                      uint8_t             *out);
size_t guestfs_btrfs_subvolume_snapshot_args__pack_to_buffer
                     (const GuestfsBtrfsSubvolumeSnapshotArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsBtrfsSubvolumeSnapshotArgs *
       guestfs_btrfs_subvolume_snapshot_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_btrfs_subvolume_snapshot_args__free_unpacked
                     (GuestfsBtrfsSubvolumeSnapshotArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsBtrfsSubvolumeDeleteArgs methods */
void   guestfs_btrfs_subvolume_delete_args__init
                     (GuestfsBtrfsSubvolumeDeleteArgs         *message);
size_t guestfs_btrfs_subvolume_delete_args__get_packed_size
                     (const GuestfsBtrfsSubvolumeDeleteArgs   *message);
size_t guestfs_btrfs_subvolume_delete_args__pack
                     (const GuestfsBtrfsSubvolumeDeleteArgs   *message,
                      uint8_t             *out);
size_t guestfs_btrfs_subvolume_delete_args__pack_to_buffer
                     (const GuestfsBtrfsSubvolumeDeleteArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsBtrfsSubvolumeDeleteArgs *
       guestfs_btrfs_subvolume_delete_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_btrfs_subvolume_delete_args__free_unpacked
                     (GuestfsBtrfsSubvolumeDeleteArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsBtrfsSubvolumeCreateArgs methods */
void   guestfs_btrfs_subvolume_create_args__init
                     (GuestfsBtrfsSubvolumeCreateArgs         *message);
size_t guestfs_btrfs_subvolume_create_args__get_packed_size
                     (const GuestfsBtrfsSubvolumeCreateArgs   *message);
size_t guestfs_btrfs_subvolume_create_args__pack
                     (const GuestfsBtrfsSubvolumeCreateArgs   *message,
                      uint8_t             *out);
size_t guestfs_btrfs_subvolume_create_args__pack_to_buffer
                     (const GuestfsBtrfsSubvolumeCreateArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsBtrfsSubvolumeCreateArgs *
       guestfs_btrfs_subvolume_create_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_btrfs_subvolume_create_args__free_unpacked
                     (GuestfsBtrfsSubvolumeCreateArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsBtrfsSubvolumeListArgs methods */
void   guestfs_btrfs_subvolume_list_args__init
                     (GuestfsBtrfsSubvolumeListArgs         *message);
size_t guestfs_btrfs_subvolume_list_args__get_packed_size
                     (const GuestfsBtrfsSubvolumeListArgs   *message);
size_t guestfs_btrfs_subvolume_list_args__pack
                     (const GuestfsBtrfsSubvolumeListArgs   *message,
                      uint8_t             *out);
size_t guestfs_btrfs_subvolume_list_args__pack_to_buffer
                     (const GuestfsBtrfsSubvolumeListArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsBtrfsSubvolumeListArgs *
       guestfs_btrfs_subvolume_list_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_btrfs_subvolume_list_args__free_unpacked
                     (GuestfsBtrfsSubvolumeListArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsBtrfsSubvolumeListRet methods */
void   guestfs_btrfs_subvolume_list_ret__init
                     (GuestfsBtrfsSubvolumeListRet         *message);
size_t guestfs_btrfs_subvolume_list_ret__get_packed_size
                     (const GuestfsBtrfsSubvolumeListRet   *message);
size_t guestfs_btrfs_subvolume_list_ret__pack
                     (const GuestfsBtrfsSubvolumeListRet   *message,
                      uint8_t             *out);
size_t guestfs_btrfs_subvolume_list_ret__pack_to_buffer
                     (const GuestfsBtrfsSubvolumeListRet   *message,
                      ProtobufCBuffer     *buffer);
GuestfsBtrfsSubvolumeListRet *
       guestfs_btrfs_subvolume_list_ret__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_btrfs_subvolume_list_ret__free_unpacked
                     (GuestfsBtrfsSubvolumeListRet *message,
                      ProtobufCAllocator *allocator);
/* GuestfsBtrfsSubvolumeSetDefaultArgs methods */
void   guestfs_btrfs_subvolume_set_default_args__init
                     (GuestfsBtrfsSubvolumeSetDefaultArgs         *message);
size_t guestfs_btrfs_subvolume_set_default_args__get_packed_size
                     (const GuestfsBtrfsSubvolumeSetDefaultArgs   *message);
size_t guestfs_btrfs_subvolume_set_default_args__pack
                     (const GuestfsBtrfsSubvolumeSetDefaultArgs   *message,
                      uint8_t             *out);
size_t guestfs_btrfs_subvolume_set_default_args__pack_to_buffer
                     (const GuestfsBtrfsSubvolumeSetDefaultArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsBtrfsSubvolumeSetDefaultArgs *
       guestfs_btrfs_subvolume_set_default_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_btrfs_subvolume_set_default_args__free_unpacked
                     (GuestfsBtrfsSubvolumeSetDefaultArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsBtrfsFilesystemSyncArgs methods */
void   guestfs_btrfs_filesystem_sync_args__init
                     (GuestfsBtrfsFilesystemSyncArgs         *message);
size_t guestfs_btrfs_filesystem_sync_args__get_packed_size
                     (const GuestfsBtrfsFilesystemSyncArgs   *message);
size_t guestfs_btrfs_filesystem_sync_args__pack
                     (const GuestfsBtrfsFilesystemSyncArgs   *message,
                      uint8_t             *out);
size_t guestfs_btrfs_filesystem_sync_args__pack_to_buffer
                     (const GuestfsBtrfsFilesystemSyncArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsBtrfsFilesystemSyncArgs *
       guestfs_btrfs_filesystem_sync_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_btrfs_filesystem_sync_args__free_unpacked
                     (GuestfsBtrfsFilesystemSyncArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsBtrfsFilesystemBalanceArgs methods */
void   guestfs_btrfs_filesystem_balance_args__init
                     (GuestfsBtrfsFilesystemBalanceArgs         *message);
size_t guestfs_btrfs_filesystem_balance_args__get_packed_size
                     (const GuestfsBtrfsFilesystemBalanceArgs   *message);
size_t guestfs_btrfs_filesystem_balance_args__pack
                     (const GuestfsBtrfsFilesystemBalanceArgs   *message,
                      uint8_t             *out);
size_t guestfs_btrfs_filesystem_balance_args__pack_to_buffer
                     (const GuestfsBtrfsFilesystemBalanceArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsBtrfsFilesystemBalanceArgs *
       guestfs_btrfs_filesystem_balance_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_btrfs_filesystem_balance_args__free_unpacked
                     (GuestfsBtrfsFilesystemBalanceArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsBtrfsDeviceAddArgs methods */
void   guestfs_btrfs_device_add_args__init
                     (GuestfsBtrfsDeviceAddArgs         *message);
size_t guestfs_btrfs_device_add_args__get_packed_size
                     (const GuestfsBtrfsDeviceAddArgs   *message);
size_t guestfs_btrfs_device_add_args__pack
                     (const GuestfsBtrfsDeviceAddArgs   *message,
                      uint8_t             *out);
size_t guestfs_btrfs_device_add_args__pack_to_buffer
                     (const GuestfsBtrfsDeviceAddArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsBtrfsDeviceAddArgs *
       guestfs_btrfs_device_add_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_btrfs_device_add_args__free_unpacked
                     (GuestfsBtrfsDeviceAddArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsBtrfsDeviceDeleteArgs methods */
void   guestfs_btrfs_device_delete_args__init
                     (GuestfsBtrfsDeviceDeleteArgs         *message);
size_t guestfs_btrfs_device_delete_args__get_packed_size
                     (const GuestfsBtrfsDeviceDeleteArgs   *message);
size_t guestfs_btrfs_device_delete_args__pack
                     (const GuestfsBtrfsDeviceDeleteArgs   *message,
                      uint8_t             *out);
size_t guestfs_btrfs_device_delete_args__pack_to_buffer
                     (const GuestfsBtrfsDeviceDeleteArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsBtrfsDeviceDeleteArgs *
       guestfs_btrfs_device_delete_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_btrfs_device_delete_args__free_unpacked
                     (GuestfsBtrfsDeviceDeleteArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsBtrfsSetSeedingArgs methods */
void   guestfs_btrfs_set_seeding_args__init
                     (GuestfsBtrfsSetSeedingArgs         *message);
size_t guestfs_btrfs_set_seeding_args__get_packed_size
                     (const GuestfsBtrfsSetSeedingArgs   *message);
size_t guestfs_btrfs_set_seeding_args__pack
                     (const GuestfsBtrfsSetSeedingArgs   *message,
                      uint8_t             *out);
size_t guestfs_btrfs_set_seeding_args__pack_to_buffer
                     (const GuestfsBtrfsSetSeedingArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsBtrfsSetSeedingArgs *
       guestfs_btrfs_set_seeding_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_btrfs_set_seeding_args__free_unpacked
                     (GuestfsBtrfsSetSeedingArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsBtrfsFsckArgs methods */
void   guestfs_btrfs_fsck_args__init
                     (GuestfsBtrfsFsckArgs         *message);
size_t guestfs_btrfs_fsck_args__get_packed_size
                     (const GuestfsBtrfsFsckArgs   *message);
size_t guestfs_btrfs_fsck_args__pack
                     (const GuestfsBtrfsFsckArgs   *message,
                      uint8_t             *out);
size_t guestfs_btrfs_fsck_args__pack_to_buffer
                     (const GuestfsBtrfsFsckArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsBtrfsFsckArgs *
       guestfs_btrfs_fsck_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_btrfs_fsck_args__free_unpacked
                     (GuestfsBtrfsFsckArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsFilesystemAvailableArgs methods */
void   guestfs_filesystem_available_args__init
                     (GuestfsFilesystemAvailableArgs         *message);
size_t guestfs_filesystem_available_args__get_packed_size
                     (const GuestfsFilesystemAvailableArgs   *message);
size_t guestfs_filesystem_available_args__pack
                     (const GuestfsFilesystemAvailableArgs   *message,
                      uint8_t             *out);
size_t guestfs_filesystem_available_args__pack_to_buffer
                     (const GuestfsFilesystemAvailableArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsFilesystemAvailableArgs *
       guestfs_filesystem_available_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_filesystem_available_args__free_unpacked
                     (GuestfsFilesystemAvailableArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsFilesystemAvailableRet methods */
void   guestfs_filesystem_available_ret__init
                     (GuestfsFilesystemAvailableRet         *message);
size_t guestfs_filesystem_available_ret__get_packed_size
                     (const GuestfsFilesystemAvailableRet   *message);
size_t guestfs_filesystem_available_ret__pack
                     (const GuestfsFilesystemAvailableRet   *message,
                      uint8_t             *out);
size_t guestfs_filesystem_available_ret__pack_to_buffer
                     (const GuestfsFilesystemAvailableRet   *message,
                      ProtobufCBuffer     *buffer);
GuestfsFilesystemAvailableRet *
       guestfs_filesystem_available_ret__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_filesystem_available_ret__free_unpacked
                     (GuestfsFilesystemAvailableRet *message,
                      ProtobufCAllocator *allocator);
/* GuestfsFstrimArgs methods */
void   guestfs_fstrim_args__init
                     (GuestfsFstrimArgs         *message);
size_t guestfs_fstrim_args__get_packed_size
                     (const GuestfsFstrimArgs   *message);
size_t guestfs_fstrim_args__pack
                     (const GuestfsFstrimArgs   *message,
                      uint8_t             *out);
size_t guestfs_fstrim_args__pack_to_buffer
                     (const GuestfsFstrimArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsFstrimArgs *
       guestfs_fstrim_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_fstrim_args__free_unpacked
                     (GuestfsFstrimArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsDeviceIndexArgs methods */
void   guestfs_device_index_args__init
                     (GuestfsDeviceIndexArgs         *message);
size_t guestfs_device_index_args__get_packed_size
                     (const GuestfsDeviceIndexArgs   *message);
size_t guestfs_device_index_args__pack
                     (const GuestfsDeviceIndexArgs   *message,
                      uint8_t             *out);
size_t guestfs_device_index_args__pack_to_buffer
                     (const GuestfsDeviceIndexArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsDeviceIndexArgs *
       guestfs_device_index_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_device_index_args__free_unpacked
                     (GuestfsDeviceIndexArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsDeviceIndexRet methods */
void   guestfs_device_index_ret__init
                     (GuestfsDeviceIndexRet         *message);
size_t guestfs_device_index_ret__get_packed_size
                     (const GuestfsDeviceIndexRet   *message);
size_t guestfs_device_index_ret__pack
                     (const GuestfsDeviceIndexRet   *message,
                      uint8_t             *out);
size_t guestfs_device_index_ret__pack_to_buffer
                     (const GuestfsDeviceIndexRet   *message,
                      ProtobufCBuffer     *buffer);
GuestfsDeviceIndexRet *
       guestfs_device_index_ret__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_device_index_ret__free_unpacked
                     (GuestfsDeviceIndexRet *message,
                      ProtobufCAllocator *allocator);
/* GuestfsNrDevicesRet methods */
void   guestfs_nr_devices_ret__init
                     (GuestfsNrDevicesRet         *message);
size_t guestfs_nr_devices_ret__get_packed_size
                     (const GuestfsNrDevicesRet   *message);
size_t guestfs_nr_devices_ret__pack
                     (const GuestfsNrDevicesRet   *message,
                      uint8_t             *out);
size_t guestfs_nr_devices_ret__pack_to_buffer
                     (const GuestfsNrDevicesRet   *message,
                      ProtobufCBuffer     *buffer);
GuestfsNrDevicesRet *
       guestfs_nr_devices_ret__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_nr_devices_ret__free_unpacked
                     (GuestfsNrDevicesRet *message,
                      ProtobufCAllocator *allocator);
/* GuestfsXfsInfoArgs methods */
void   guestfs_xfs_info_args__init
                     (GuestfsXfsInfoArgs         *message);
size_t guestfs_xfs_info_args__get_packed_size
                     (const GuestfsXfsInfoArgs   *message);
size_t guestfs_xfs_info_args__pack
                     (const GuestfsXfsInfoArgs   *message,
                      uint8_t             *out);
size_t guestfs_xfs_info_args__pack_to_buffer
                     (const GuestfsXfsInfoArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsXfsInfoArgs *
       guestfs_xfs_info_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_xfs_info_args__free_unpacked
                     (GuestfsXfsInfoArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsXfsInfoRet methods */
void   guestfs_xfs_info_ret__init
                     (GuestfsXfsInfoRet         *message);
size_t guestfs_xfs_info_ret__get_packed_size
                     (const GuestfsXfsInfoRet   *message);
size_t guestfs_xfs_info_ret__pack
                     (const GuestfsXfsInfoRet   *message,
                      uint8_t             *out);
size_t guestfs_xfs_info_ret__pack_to_buffer
                     (const GuestfsXfsInfoRet   *message,
                      ProtobufCBuffer     *buffer);
GuestfsXfsInfoRet *
       guestfs_xfs_info_ret__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_xfs_info_ret__free_unpacked
                     (GuestfsXfsInfoRet *message,
                      ProtobufCAllocator *allocator);
/* GuestfsPvchangeUuidArgs methods */
void   guestfs_pvchange_uuid_args__init
                     (GuestfsPvchangeUuidArgs         *message);
size_t guestfs_pvchange_uuid_args__get_packed_size
                     (const GuestfsPvchangeUuidArgs   *message);
size_t guestfs_pvchange_uuid_args__pack
                     (const GuestfsPvchangeUuidArgs   *message,
                      uint8_t             *out);
size_t guestfs_pvchange_uuid_args__pack_to_buffer
                     (const GuestfsPvchangeUuidArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsPvchangeUuidArgs *
       guestfs_pvchange_uuid_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_pvchange_uuid_args__free_unpacked
                     (GuestfsPvchangeUuidArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsVgchangeUuidArgs methods */
void   guestfs_vgchange_uuid_args__init
                     (GuestfsVgchangeUuidArgs         *message);
size_t guestfs_vgchange_uuid_args__get_packed_size
                     (const GuestfsVgchangeUuidArgs   *message);
size_t guestfs_vgchange_uuid_args__pack
                     (const GuestfsVgchangeUuidArgs   *message,
                      uint8_t             *out);
size_t guestfs_vgchange_uuid_args__pack_to_buffer
                     (const GuestfsVgchangeUuidArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsVgchangeUuidArgs *
       guestfs_vgchange_uuid_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_vgchange_uuid_args__free_unpacked
                     (GuestfsVgchangeUuidArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsUtsnameRet methods */
void   guestfs_utsname_ret__init
                     (GuestfsUtsnameRet         *message);
size_t guestfs_utsname_ret__get_packed_size
                     (const GuestfsUtsnameRet   *message);
size_t guestfs_utsname_ret__pack
                     (const GuestfsUtsnameRet   *message,
                      uint8_t             *out);
size_t guestfs_utsname_ret__pack_to_buffer
                     (const GuestfsUtsnameRet   *message,
                      ProtobufCBuffer     *buffer);
GuestfsUtsnameRet *
       guestfs_utsname_ret__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_utsname_ret__free_unpacked
                     (GuestfsUtsnameRet *message,
                      ProtobufCAllocator *allocator);
/* GuestfsXfsGrowfsArgs methods */
void   guestfs_xfs_growfs_args__init
                     (GuestfsXfsGrowfsArgs         *message);
size_t guestfs_xfs_growfs_args__get_packed_size
                     (const GuestfsXfsGrowfsArgs   *message);
size_t guestfs_xfs_growfs_args__pack
                     (const GuestfsXfsGrowfsArgs   *message,
                      uint8_t             *out);
size_t guestfs_xfs_growfs_args__pack_to_buffer
                     (const GuestfsXfsGrowfsArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsXfsGrowfsArgs *
       guestfs_xfs_growfs_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_xfs_growfs_args__free_unpacked
                     (GuestfsXfsGrowfsArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsRsyncArgs methods */
void   guestfs_rsync_args__init
                     (GuestfsRsyncArgs         *message);
size_t guestfs_rsync_args__get_packed_size
                     (const GuestfsRsyncArgs   *message);
size_t guestfs_rsync_args__pack
                     (const GuestfsRsyncArgs   *message,
                      uint8_t             *out);
size_t guestfs_rsync_args__pack_to_buffer
                     (const GuestfsRsyncArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsRsyncArgs *
       guestfs_rsync_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_rsync_args__free_unpacked
                     (GuestfsRsyncArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsRsyncInArgs methods */
void   guestfs_rsync_in_args__init
                     (GuestfsRsyncInArgs         *message);
size_t guestfs_rsync_in_args__get_packed_size
                     (const GuestfsRsyncInArgs   *message);
size_t guestfs_rsync_in_args__pack
                     (const GuestfsRsyncInArgs   *message,
                      uint8_t             *out);
size_t guestfs_rsync_in_args__pack_to_buffer
                     (const GuestfsRsyncInArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsRsyncInArgs *
       guestfs_rsync_in_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_rsync_in_args__free_unpacked
                     (GuestfsRsyncInArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsRsyncOutArgs methods */
void   guestfs_rsync_out_args__init
                     (GuestfsRsyncOutArgs         *message);
size_t guestfs_rsync_out_args__get_packed_size
                     (const GuestfsRsyncOutArgs   *message);
size_t guestfs_rsync_out_args__pack
                     (const GuestfsRsyncOutArgs   *message,
                      uint8_t             *out);
size_t guestfs_rsync_out_args__pack_to_buffer
                     (const GuestfsRsyncOutArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsRsyncOutArgs *
       guestfs_rsync_out_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_rsync_out_args__free_unpacked
                     (GuestfsRsyncOutArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsLs0Args methods */
void   guestfs_ls0_args__init
                     (GuestfsLs0Args         *message);
size_t guestfs_ls0_args__get_packed_size
                     (const GuestfsLs0Args   *message);
size_t guestfs_ls0_args__pack
                     (const GuestfsLs0Args   *message,
                      uint8_t             *out);
size_t guestfs_ls0_args__pack_to_buffer
                     (const GuestfsLs0Args   *message,
                      ProtobufCBuffer     *buffer);
GuestfsLs0Args *
       guestfs_ls0_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_ls0_args__free_unpacked
                     (GuestfsLs0Args *message,
                      ProtobufCAllocator *allocator);
/* GuestfsFillDirArgs methods */
void   guestfs_fill_dir_args__init
                     (GuestfsFillDirArgs         *message);
size_t guestfs_fill_dir_args__get_packed_size
                     (const GuestfsFillDirArgs   *message);
size_t guestfs_fill_dir_args__pack
                     (const GuestfsFillDirArgs   *message,
                      uint8_t             *out);
size_t guestfs_fill_dir_args__pack_to_buffer
                     (const GuestfsFillDirArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsFillDirArgs *
       guestfs_fill_dir_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_fill_dir_args__free_unpacked
                     (GuestfsFillDirArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsXfsAdminArgs methods */
void   guestfs_xfs_admin_args__init
                     (GuestfsXfsAdminArgs         *message);
size_t guestfs_xfs_admin_args__get_packed_size
                     (const GuestfsXfsAdminArgs   *message);
size_t guestfs_xfs_admin_args__pack
                     (const GuestfsXfsAdminArgs   *message,
                      uint8_t             *out);
size_t guestfs_xfs_admin_args__pack_to_buffer
                     (const GuestfsXfsAdminArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsXfsAdminArgs *
       guestfs_xfs_admin_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_xfs_admin_args__free_unpacked
                     (GuestfsXfsAdminArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsHivexOpenArgs methods */
void   guestfs_hivex_open_args__init
                     (GuestfsHivexOpenArgs         *message);
size_t guestfs_hivex_open_args__get_packed_size
                     (const GuestfsHivexOpenArgs   *message);
size_t guestfs_hivex_open_args__pack
                     (const GuestfsHivexOpenArgs   *message,
                      uint8_t             *out);
size_t guestfs_hivex_open_args__pack_to_buffer
                     (const GuestfsHivexOpenArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsHivexOpenArgs *
       guestfs_hivex_open_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_hivex_open_args__free_unpacked
                     (GuestfsHivexOpenArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsHivexRootRet methods */
void   guestfs_hivex_root_ret__init
                     (GuestfsHivexRootRet         *message);
size_t guestfs_hivex_root_ret__get_packed_size
                     (const GuestfsHivexRootRet   *message);
size_t guestfs_hivex_root_ret__pack
                     (const GuestfsHivexRootRet   *message,
                      uint8_t             *out);
size_t guestfs_hivex_root_ret__pack_to_buffer
                     (const GuestfsHivexRootRet   *message,
                      ProtobufCBuffer     *buffer);
GuestfsHivexRootRet *
       guestfs_hivex_root_ret__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_hivex_root_ret__free_unpacked
                     (GuestfsHivexRootRet *message,
                      ProtobufCAllocator *allocator);
/* GuestfsHivexNodeNameArgs methods */
void   guestfs_hivex_node_name_args__init
                     (GuestfsHivexNodeNameArgs         *message);
size_t guestfs_hivex_node_name_args__get_packed_size
                     (const GuestfsHivexNodeNameArgs   *message);
size_t guestfs_hivex_node_name_args__pack
                     (const GuestfsHivexNodeNameArgs   *message,
                      uint8_t             *out);
size_t guestfs_hivex_node_name_args__pack_to_buffer
                     (const GuestfsHivexNodeNameArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsHivexNodeNameArgs *
       guestfs_hivex_node_name_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_hivex_node_name_args__free_unpacked
                     (GuestfsHivexNodeNameArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsHivexNodeNameRet methods */
void   guestfs_hivex_node_name_ret__init
                     (GuestfsHivexNodeNameRet         *message);
size_t guestfs_hivex_node_name_ret__get_packed_size
                     (const GuestfsHivexNodeNameRet   *message);
size_t guestfs_hivex_node_name_ret__pack
                     (const GuestfsHivexNodeNameRet   *message,
                      uint8_t             *out);
size_t guestfs_hivex_node_name_ret__pack_to_buffer
                     (const GuestfsHivexNodeNameRet   *message,
                      ProtobufCBuffer     *buffer);
GuestfsHivexNodeNameRet *
       guestfs_hivex_node_name_ret__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_hivex_node_name_ret__free_unpacked
                     (GuestfsHivexNodeNameRet *message,
                      ProtobufCAllocator *allocator);
/* GuestfsHivexNodeChildrenArgs methods */
void   guestfs_hivex_node_children_args__init
                     (GuestfsHivexNodeChildrenArgs         *message);
size_t guestfs_hivex_node_children_args__get_packed_size
                     (const GuestfsHivexNodeChildrenArgs   *message);
size_t guestfs_hivex_node_children_args__pack
                     (const GuestfsHivexNodeChildrenArgs   *message,
                      uint8_t             *out);
size_t guestfs_hivex_node_children_args__pack_to_buffer
                     (const GuestfsHivexNodeChildrenArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsHivexNodeChildrenArgs *
       guestfs_hivex_node_children_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_hivex_node_children_args__free_unpacked
                     (GuestfsHivexNodeChildrenArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsHivexNodeChildrenRet methods */
void   guestfs_hivex_node_children_ret__init
                     (GuestfsHivexNodeChildrenRet         *message);
size_t guestfs_hivex_node_children_ret__get_packed_size
                     (const GuestfsHivexNodeChildrenRet   *message);
size_t guestfs_hivex_node_children_ret__pack
                     (const GuestfsHivexNodeChildrenRet   *message,
                      uint8_t             *out);
size_t guestfs_hivex_node_children_ret__pack_to_buffer
                     (const GuestfsHivexNodeChildrenRet   *message,
                      ProtobufCBuffer     *buffer);
GuestfsHivexNodeChildrenRet *
       guestfs_hivex_node_children_ret__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_hivex_node_children_ret__free_unpacked
                     (GuestfsHivexNodeChildrenRet *message,
                      ProtobufCAllocator *allocator);
/* GuestfsHivexNodeGetChildArgs methods */
void   guestfs_hivex_node_get_child_args__init
                     (GuestfsHivexNodeGetChildArgs         *message);
size_t guestfs_hivex_node_get_child_args__get_packed_size
                     (const GuestfsHivexNodeGetChildArgs   *message);
size_t guestfs_hivex_node_get_child_args__pack
                     (const GuestfsHivexNodeGetChildArgs   *message,
                      uint8_t             *out);
size_t guestfs_hivex_node_get_child_args__pack_to_buffer
                     (const GuestfsHivexNodeGetChildArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsHivexNodeGetChildArgs *
       guestfs_hivex_node_get_child_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_hivex_node_get_child_args__free_unpacked
                     (GuestfsHivexNodeGetChildArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsHivexNodeGetChildRet methods */
void   guestfs_hivex_node_get_child_ret__init
                     (GuestfsHivexNodeGetChildRet         *message);
size_t guestfs_hivex_node_get_child_ret__get_packed_size
                     (const GuestfsHivexNodeGetChildRet   *message);
size_t guestfs_hivex_node_get_child_ret__pack
                     (const GuestfsHivexNodeGetChildRet   *message,
                      uint8_t             *out);
size_t guestfs_hivex_node_get_child_ret__pack_to_buffer
                     (const GuestfsHivexNodeGetChildRet   *message,
                      ProtobufCBuffer     *buffer);
GuestfsHivexNodeGetChildRet *
       guestfs_hivex_node_get_child_ret__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_hivex_node_get_child_ret__free_unpacked
                     (GuestfsHivexNodeGetChildRet *message,
                      ProtobufCAllocator *allocator);
/* GuestfsHivexNodeParentArgs methods */
void   guestfs_hivex_node_parent_args__init
                     (GuestfsHivexNodeParentArgs         *message);
size_t guestfs_hivex_node_parent_args__get_packed_size
                     (const GuestfsHivexNodeParentArgs   *message);
size_t guestfs_hivex_node_parent_args__pack
                     (const GuestfsHivexNodeParentArgs   *message,
                      uint8_t             *out);
size_t guestfs_hivex_node_parent_args__pack_to_buffer
                     (const GuestfsHivexNodeParentArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsHivexNodeParentArgs *
       guestfs_hivex_node_parent_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_hivex_node_parent_args__free_unpacked
                     (GuestfsHivexNodeParentArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsHivexNodeParentRet methods */
void   guestfs_hivex_node_parent_ret__init
                     (GuestfsHivexNodeParentRet         *message);
size_t guestfs_hivex_node_parent_ret__get_packed_size
                     (const GuestfsHivexNodeParentRet   *message);
size_t guestfs_hivex_node_parent_ret__pack
                     (const GuestfsHivexNodeParentRet   *message,
                      uint8_t             *out);
size_t guestfs_hivex_node_parent_ret__pack_to_buffer
                     (const GuestfsHivexNodeParentRet   *message,
                      ProtobufCBuffer     *buffer);
GuestfsHivexNodeParentRet *
       guestfs_hivex_node_parent_ret__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_hivex_node_parent_ret__free_unpacked
                     (GuestfsHivexNodeParentRet *message,
                      ProtobufCAllocator *allocator);
/* GuestfsHivexNodeValuesArgs methods */
void   guestfs_hivex_node_values_args__init
                     (GuestfsHivexNodeValuesArgs         *message);
size_t guestfs_hivex_node_values_args__get_packed_size
                     (const GuestfsHivexNodeValuesArgs   *message);
size_t guestfs_hivex_node_values_args__pack
                     (const GuestfsHivexNodeValuesArgs   *message,
                      uint8_t             *out);
size_t guestfs_hivex_node_values_args__pack_to_buffer
                     (const GuestfsHivexNodeValuesArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsHivexNodeValuesArgs *
       guestfs_hivex_node_values_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_hivex_node_values_args__free_unpacked
                     (GuestfsHivexNodeValuesArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsHivexNodeValuesRet methods */
void   guestfs_hivex_node_values_ret__init
                     (GuestfsHivexNodeValuesRet         *message);
size_t guestfs_hivex_node_values_ret__get_packed_size
                     (const GuestfsHivexNodeValuesRet   *message);
size_t guestfs_hivex_node_values_ret__pack
                     (const GuestfsHivexNodeValuesRet   *message,
                      uint8_t             *out);
size_t guestfs_hivex_node_values_ret__pack_to_buffer
                     (const GuestfsHivexNodeValuesRet   *message,
                      ProtobufCBuffer     *buffer);
GuestfsHivexNodeValuesRet *
       guestfs_hivex_node_values_ret__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_hivex_node_values_ret__free_unpacked
                     (GuestfsHivexNodeValuesRet *message,
                      ProtobufCAllocator *allocator);
/* GuestfsHivexNodeGetValueArgs methods */
void   guestfs_hivex_node_get_value_args__init
                     (GuestfsHivexNodeGetValueArgs         *message);
size_t guestfs_hivex_node_get_value_args__get_packed_size
                     (const GuestfsHivexNodeGetValueArgs   *message);
size_t guestfs_hivex_node_get_value_args__pack
                     (const GuestfsHivexNodeGetValueArgs   *message,
                      uint8_t             *out);
size_t guestfs_hivex_node_get_value_args__pack_to_buffer
                     (const GuestfsHivexNodeGetValueArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsHivexNodeGetValueArgs *
       guestfs_hivex_node_get_value_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_hivex_node_get_value_args__free_unpacked
                     (GuestfsHivexNodeGetValueArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsHivexNodeGetValueRet methods */
void   guestfs_hivex_node_get_value_ret__init
                     (GuestfsHivexNodeGetValueRet         *message);
size_t guestfs_hivex_node_get_value_ret__get_packed_size
                     (const GuestfsHivexNodeGetValueRet   *message);
size_t guestfs_hivex_node_get_value_ret__pack
                     (const GuestfsHivexNodeGetValueRet   *message,
                      uint8_t             *out);
size_t guestfs_hivex_node_get_value_ret__pack_to_buffer
                     (const GuestfsHivexNodeGetValueRet   *message,
                      ProtobufCBuffer     *buffer);
GuestfsHivexNodeGetValueRet *
       guestfs_hivex_node_get_value_ret__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_hivex_node_get_value_ret__free_unpacked
                     (GuestfsHivexNodeGetValueRet *message,
                      ProtobufCAllocator *allocator);
/* GuestfsHivexValueKeyArgs methods */
void   guestfs_hivex_value_key_args__init
                     (GuestfsHivexValueKeyArgs         *message);
size_t guestfs_hivex_value_key_args__get_packed_size
                     (const GuestfsHivexValueKeyArgs   *message);
size_t guestfs_hivex_value_key_args__pack
                     (const GuestfsHivexValueKeyArgs   *message,
                      uint8_t             *out);
size_t guestfs_hivex_value_key_args__pack_to_buffer
                     (const GuestfsHivexValueKeyArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsHivexValueKeyArgs *
       guestfs_hivex_value_key_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_hivex_value_key_args__free_unpacked
                     (GuestfsHivexValueKeyArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsHivexValueKeyRet methods */
void   guestfs_hivex_value_key_ret__init
                     (GuestfsHivexValueKeyRet         *message);
size_t guestfs_hivex_value_key_ret__get_packed_size
                     (const GuestfsHivexValueKeyRet   *message);
size_t guestfs_hivex_value_key_ret__pack
                     (const GuestfsHivexValueKeyRet   *message,
                      uint8_t             *out);
size_t guestfs_hivex_value_key_ret__pack_to_buffer
                     (const GuestfsHivexValueKeyRet   *message,
                      ProtobufCBuffer     *buffer);
GuestfsHivexValueKeyRet *
       guestfs_hivex_value_key_ret__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_hivex_value_key_ret__free_unpacked
                     (GuestfsHivexValueKeyRet *message,
                      ProtobufCAllocator *allocator);
/* GuestfsHivexValueTypeArgs methods */
void   guestfs_hivex_value_type_args__init
                     (GuestfsHivexValueTypeArgs         *message);
size_t guestfs_hivex_value_type_args__get_packed_size
                     (const GuestfsHivexValueTypeArgs   *message);
size_t guestfs_hivex_value_type_args__pack
                     (const GuestfsHivexValueTypeArgs   *message,
                      uint8_t             *out);
size_t guestfs_hivex_value_type_args__pack_to_buffer
                     (const GuestfsHivexValueTypeArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsHivexValueTypeArgs *
       guestfs_hivex_value_type_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_hivex_value_type_args__free_unpacked
                     (GuestfsHivexValueTypeArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsHivexValueTypeRet methods */
void   guestfs_hivex_value_type_ret__init
                     (GuestfsHivexValueTypeRet         *message);
size_t guestfs_hivex_value_type_ret__get_packed_size
                     (const GuestfsHivexValueTypeRet   *message);
size_t guestfs_hivex_value_type_ret__pack
                     (const GuestfsHivexValueTypeRet   *message,
                      uint8_t             *out);
size_t guestfs_hivex_value_type_ret__pack_to_buffer
                     (const GuestfsHivexValueTypeRet   *message,
                      ProtobufCBuffer     *buffer);
GuestfsHivexValueTypeRet *
       guestfs_hivex_value_type_ret__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_hivex_value_type_ret__free_unpacked
                     (GuestfsHivexValueTypeRet *message,
                      ProtobufCAllocator *allocator);
/* GuestfsHivexValueValueArgs methods */
void   guestfs_hivex_value_value_args__init
                     (GuestfsHivexValueValueArgs         *message);
size_t guestfs_hivex_value_value_args__get_packed_size
                     (const GuestfsHivexValueValueArgs   *message);
size_t guestfs_hivex_value_value_args__pack
                     (const GuestfsHivexValueValueArgs   *message,
                      uint8_t             *out);
size_t guestfs_hivex_value_value_args__pack_to_buffer
                     (const GuestfsHivexValueValueArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsHivexValueValueArgs *
       guestfs_hivex_value_value_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_hivex_value_value_args__free_unpacked
                     (GuestfsHivexValueValueArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsHivexValueValueRet methods */
void   guestfs_hivex_value_value_ret__init
                     (GuestfsHivexValueValueRet         *message);
size_t guestfs_hivex_value_value_ret__get_packed_size
                     (const GuestfsHivexValueValueRet   *message);
size_t guestfs_hivex_value_value_ret__pack
                     (const GuestfsHivexValueValueRet   *message,
                      uint8_t             *out);
size_t guestfs_hivex_value_value_ret__pack_to_buffer
                     (const GuestfsHivexValueValueRet   *message,
                      ProtobufCBuffer     *buffer);
GuestfsHivexValueValueRet *
       guestfs_hivex_value_value_ret__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_hivex_value_value_ret__free_unpacked
                     (GuestfsHivexValueValueRet *message,
                      ProtobufCAllocator *allocator);
/* GuestfsHivexCommitArgs methods */
void   guestfs_hivex_commit_args__init
                     (GuestfsHivexCommitArgs         *message);
size_t guestfs_hivex_commit_args__get_packed_size
                     (const GuestfsHivexCommitArgs   *message);
size_t guestfs_hivex_commit_args__pack
                     (const GuestfsHivexCommitArgs   *message,
                      uint8_t             *out);
size_t guestfs_hivex_commit_args__pack_to_buffer
                     (const GuestfsHivexCommitArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsHivexCommitArgs *
       guestfs_hivex_commit_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_hivex_commit_args__free_unpacked
                     (GuestfsHivexCommitArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsHivexNodeAddChildArgs methods */
void   guestfs_hivex_node_add_child_args__init
                     (GuestfsHivexNodeAddChildArgs         *message);
size_t guestfs_hivex_node_add_child_args__get_packed_size
                     (const GuestfsHivexNodeAddChildArgs   *message);
size_t guestfs_hivex_node_add_child_args__pack
                     (const GuestfsHivexNodeAddChildArgs   *message,
                      uint8_t             *out);
size_t guestfs_hivex_node_add_child_args__pack_to_buffer
                     (const GuestfsHivexNodeAddChildArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsHivexNodeAddChildArgs *
       guestfs_hivex_node_add_child_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_hivex_node_add_child_args__free_unpacked
                     (GuestfsHivexNodeAddChildArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsHivexNodeAddChildRet methods */
void   guestfs_hivex_node_add_child_ret__init
                     (GuestfsHivexNodeAddChildRet         *message);
size_t guestfs_hivex_node_add_child_ret__get_packed_size
                     (const GuestfsHivexNodeAddChildRet   *message);
size_t guestfs_hivex_node_add_child_ret__pack
                     (const GuestfsHivexNodeAddChildRet   *message,
                      uint8_t             *out);
size_t guestfs_hivex_node_add_child_ret__pack_to_buffer
                     (const GuestfsHivexNodeAddChildRet   *message,
                      ProtobufCBuffer     *buffer);
GuestfsHivexNodeAddChildRet *
       guestfs_hivex_node_add_child_ret__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_hivex_node_add_child_ret__free_unpacked
                     (GuestfsHivexNodeAddChildRet *message,
                      ProtobufCAllocator *allocator);
/* GuestfsHivexNodeDeleteChildArgs methods */
void   guestfs_hivex_node_delete_child_args__init
                     (GuestfsHivexNodeDeleteChildArgs         *message);
size_t guestfs_hivex_node_delete_child_args__get_packed_size
                     (const GuestfsHivexNodeDeleteChildArgs   *message);
size_t guestfs_hivex_node_delete_child_args__pack
                     (const GuestfsHivexNodeDeleteChildArgs   *message,
                      uint8_t             *out);
size_t guestfs_hivex_node_delete_child_args__pack_to_buffer
                     (const GuestfsHivexNodeDeleteChildArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsHivexNodeDeleteChildArgs *
       guestfs_hivex_node_delete_child_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_hivex_node_delete_child_args__free_unpacked
                     (GuestfsHivexNodeDeleteChildArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsHivexNodeSetValueArgs methods */
void   guestfs_hivex_node_set_value_args__init
                     (GuestfsHivexNodeSetValueArgs         *message);
size_t guestfs_hivex_node_set_value_args__get_packed_size
                     (const GuestfsHivexNodeSetValueArgs   *message);
size_t guestfs_hivex_node_set_value_args__pack
                     (const GuestfsHivexNodeSetValueArgs   *message,
                      uint8_t             *out);
size_t guestfs_hivex_node_set_value_args__pack_to_buffer
                     (const GuestfsHivexNodeSetValueArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsHivexNodeSetValueArgs *
       guestfs_hivex_node_set_value_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_hivex_node_set_value_args__free_unpacked
                     (GuestfsHivexNodeSetValueArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsXfsRepairArgs methods */
void   guestfs_xfs_repair_args__init
                     (GuestfsXfsRepairArgs         *message);
size_t guestfs_xfs_repair_args__get_packed_size
                     (const GuestfsXfsRepairArgs   *message);
size_t guestfs_xfs_repair_args__pack
                     (const GuestfsXfsRepairArgs   *message,
                      uint8_t             *out);
size_t guestfs_xfs_repair_args__pack_to_buffer
                     (const GuestfsXfsRepairArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsXfsRepairArgs *
       guestfs_xfs_repair_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_xfs_repair_args__free_unpacked
                     (GuestfsXfsRepairArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsXfsRepairRet methods */
void   guestfs_xfs_repair_ret__init
                     (GuestfsXfsRepairRet         *message);
size_t guestfs_xfs_repair_ret__get_packed_size
                     (const GuestfsXfsRepairRet   *message);
size_t guestfs_xfs_repair_ret__pack
                     (const GuestfsXfsRepairRet   *message,
                      uint8_t             *out);
size_t guestfs_xfs_repair_ret__pack_to_buffer
                     (const GuestfsXfsRepairRet   *message,
                      ProtobufCBuffer     *buffer);
GuestfsXfsRepairRet *
       guestfs_xfs_repair_ret__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_xfs_repair_ret__free_unpacked
                     (GuestfsXfsRepairRet *message,
                      ProtobufCAllocator *allocator);
/* GuestfsRmFfArgs methods */
void   guestfs_rm_ff_args__init
                     (GuestfsRmFfArgs         *message);
size_t guestfs_rm_ff_args__get_packed_size
                     (const GuestfsRmFfArgs   *message);
size_t guestfs_rm_ff_args__pack
                     (const GuestfsRmFfArgs   *message,
                      uint8_t             *out);
size_t guestfs_rm_ff_args__pack_to_buffer
                     (const GuestfsRmFfArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsRmFfArgs *
       guestfs_rm_ff_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_rm_ff_args__free_unpacked
                     (GuestfsRmFfArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsMke2fsArgs methods */
void   guestfs_mke2fs_args__init
                     (GuestfsMke2fsArgs         *message);
size_t guestfs_mke2fs_args__get_packed_size
                     (const GuestfsMke2fsArgs   *message);
size_t guestfs_mke2fs_args__pack
                     (const GuestfsMke2fsArgs   *message,
                      uint8_t             *out);
size_t guestfs_mke2fs_args__pack_to_buffer
                     (const GuestfsMke2fsArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsMke2fsArgs *
       guestfs_mke2fs_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_mke2fs_args__free_unpacked
                     (GuestfsMke2fsArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsListDiskLabelsRet methods */
void   guestfs_list_disk_labels_ret__init
                     (GuestfsListDiskLabelsRet         *message);
size_t guestfs_list_disk_labels_ret__get_packed_size
                     (const GuestfsListDiskLabelsRet   *message);
size_t guestfs_list_disk_labels_ret__pack
                     (const GuestfsListDiskLabelsRet   *message,
                      uint8_t             *out);
size_t guestfs_list_disk_labels_ret__pack_to_buffer
                     (const GuestfsListDiskLabelsRet   *message,
                      ProtobufCBuffer     *buffer);
GuestfsListDiskLabelsRet *
       guestfs_list_disk_labels_ret__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_list_disk_labels_ret__free_unpacked
                     (GuestfsListDiskLabelsRet *message,
                      ProtobufCAllocator *allocator);
/* GuestfsInternalHotAddDriveArgs methods */
void   guestfs_internal_hot_add_drive_args__init
                     (GuestfsInternalHotAddDriveArgs         *message);
size_t guestfs_internal_hot_add_drive_args__get_packed_size
                     (const GuestfsInternalHotAddDriveArgs   *message);
size_t guestfs_internal_hot_add_drive_args__pack
                     (const GuestfsInternalHotAddDriveArgs   *message,
                      uint8_t             *out);
size_t guestfs_internal_hot_add_drive_args__pack_to_buffer
                     (const GuestfsInternalHotAddDriveArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsInternalHotAddDriveArgs *
       guestfs_internal_hot_add_drive_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_internal_hot_add_drive_args__free_unpacked
                     (GuestfsInternalHotAddDriveArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsInternalHotRemoveDrivePrecheckArgs methods */
void   guestfs_internal_hot_remove_drive_precheck_args__init
                     (GuestfsInternalHotRemoveDrivePrecheckArgs         *message);
size_t guestfs_internal_hot_remove_drive_precheck_args__get_packed_size
                     (const GuestfsInternalHotRemoveDrivePrecheckArgs   *message);
size_t guestfs_internal_hot_remove_drive_precheck_args__pack
                     (const GuestfsInternalHotRemoveDrivePrecheckArgs   *message,
                      uint8_t             *out);
size_t guestfs_internal_hot_remove_drive_precheck_args__pack_to_buffer
                     (const GuestfsInternalHotRemoveDrivePrecheckArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsInternalHotRemoveDrivePrecheckArgs *
       guestfs_internal_hot_remove_drive_precheck_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_internal_hot_remove_drive_precheck_args__free_unpacked
                     (GuestfsInternalHotRemoveDrivePrecheckArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsInternalHotRemoveDriveArgs methods */
void   guestfs_internal_hot_remove_drive_args__init
                     (GuestfsInternalHotRemoveDriveArgs         *message);
size_t guestfs_internal_hot_remove_drive_args__get_packed_size
                     (const GuestfsInternalHotRemoveDriveArgs   *message);
size_t guestfs_internal_hot_remove_drive_args__pack
                     (const GuestfsInternalHotRemoveDriveArgs   *message,
                      uint8_t             *out);
size_t guestfs_internal_hot_remove_drive_args__pack_to_buffer
                     (const GuestfsInternalHotRemoveDriveArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsInternalHotRemoveDriveArgs *
       guestfs_internal_hot_remove_drive_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_internal_hot_remove_drive_args__free_unpacked
                     (GuestfsInternalHotRemoveDriveArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsMktempArgs methods */
void   guestfs_mktemp_args__init
                     (GuestfsMktempArgs         *message);
size_t guestfs_mktemp_args__get_packed_size
                     (const GuestfsMktempArgs   *message);
size_t guestfs_mktemp_args__pack
                     (const GuestfsMktempArgs   *message,
                      uint8_t             *out);
size_t guestfs_mktemp_args__pack_to_buffer
                     (const GuestfsMktempArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsMktempArgs *
       guestfs_mktemp_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_mktemp_args__free_unpacked
                     (GuestfsMktempArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsMktempRet methods */
void   guestfs_mktemp_ret__init
                     (GuestfsMktempRet         *message);
size_t guestfs_mktemp_ret__get_packed_size
                     (const GuestfsMktempRet   *message);
size_t guestfs_mktemp_ret__pack
                     (const GuestfsMktempRet   *message,
                      uint8_t             *out);
size_t guestfs_mktemp_ret__pack_to_buffer
                     (const GuestfsMktempRet   *message,
                      ProtobufCBuffer     *buffer);
GuestfsMktempRet *
       guestfs_mktemp_ret__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_mktemp_ret__free_unpacked
                     (GuestfsMktempRet *message,
                      ProtobufCAllocator *allocator);
/* GuestfsMklostAndFoundArgs methods */
void   guestfs_mklost_and_found_args__init
                     (GuestfsMklostAndFoundArgs         *message);
size_t guestfs_mklost_and_found_args__get_packed_size
                     (const GuestfsMklostAndFoundArgs   *message);
size_t guestfs_mklost_and_found_args__pack
                     (const GuestfsMklostAndFoundArgs   *message,
                      uint8_t             *out);
size_t guestfs_mklost_and_found_args__pack_to_buffer
                     (const GuestfsMklostAndFoundArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsMklostAndFoundArgs *
       guestfs_mklost_and_found_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_mklost_and_found_args__free_unpacked
                     (GuestfsMklostAndFoundArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsAclGetFileArgs methods */
void   guestfs_acl_get_file_args__init
                     (GuestfsAclGetFileArgs         *message);
size_t guestfs_acl_get_file_args__get_packed_size
                     (const GuestfsAclGetFileArgs   *message);
size_t guestfs_acl_get_file_args__pack
                     (const GuestfsAclGetFileArgs   *message,
                      uint8_t             *out);
size_t guestfs_acl_get_file_args__pack_to_buffer
                     (const GuestfsAclGetFileArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsAclGetFileArgs *
       guestfs_acl_get_file_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_acl_get_file_args__free_unpacked
                     (GuestfsAclGetFileArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsAclGetFileRet methods */
void   guestfs_acl_get_file_ret__init
                     (GuestfsAclGetFileRet         *message);
size_t guestfs_acl_get_file_ret__get_packed_size
                     (const GuestfsAclGetFileRet   *message);
size_t guestfs_acl_get_file_ret__pack
                     (const GuestfsAclGetFileRet   *message,
                      uint8_t             *out);
size_t guestfs_acl_get_file_ret__pack_to_buffer
                     (const GuestfsAclGetFileRet   *message,
                      ProtobufCBuffer     *buffer);
GuestfsAclGetFileRet *
       guestfs_acl_get_file_ret__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_acl_get_file_ret__free_unpacked
                     (GuestfsAclGetFileRet *message,
                      ProtobufCAllocator *allocator);
/* GuestfsAclSetFileArgs methods */
void   guestfs_acl_set_file_args__init
                     (GuestfsAclSetFileArgs         *message);
size_t guestfs_acl_set_file_args__get_packed_size
                     (const GuestfsAclSetFileArgs   *message);
size_t guestfs_acl_set_file_args__pack
                     (const GuestfsAclSetFileArgs   *message,
                      uint8_t             *out);
size_t guestfs_acl_set_file_args__pack_to_buffer
                     (const GuestfsAclSetFileArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsAclSetFileArgs *
       guestfs_acl_set_file_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_acl_set_file_args__free_unpacked
                     (GuestfsAclSetFileArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsAclDeleteDefFileArgs methods */
void   guestfs_acl_delete_def_file_args__init
                     (GuestfsAclDeleteDefFileArgs         *message);
size_t guestfs_acl_delete_def_file_args__get_packed_size
                     (const GuestfsAclDeleteDefFileArgs   *message);
size_t guestfs_acl_delete_def_file_args__pack
                     (const GuestfsAclDeleteDefFileArgs   *message,
                      uint8_t             *out);
size_t guestfs_acl_delete_def_file_args__pack_to_buffer
                     (const GuestfsAclDeleteDefFileArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsAclDeleteDefFileArgs *
       guestfs_acl_delete_def_file_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_acl_delete_def_file_args__free_unpacked
                     (GuestfsAclDeleteDefFileArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsCapGetFileArgs methods */
void   guestfs_cap_get_file_args__init
                     (GuestfsCapGetFileArgs         *message);
size_t guestfs_cap_get_file_args__get_packed_size
                     (const GuestfsCapGetFileArgs   *message);
size_t guestfs_cap_get_file_args__pack
                     (const GuestfsCapGetFileArgs   *message,
                      uint8_t             *out);
size_t guestfs_cap_get_file_args__pack_to_buffer
                     (const GuestfsCapGetFileArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsCapGetFileArgs *
       guestfs_cap_get_file_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_cap_get_file_args__free_unpacked
                     (GuestfsCapGetFileArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsCapGetFileRet methods */
void   guestfs_cap_get_file_ret__init
                     (GuestfsCapGetFileRet         *message);
size_t guestfs_cap_get_file_ret__get_packed_size
                     (const GuestfsCapGetFileRet   *message);
size_t guestfs_cap_get_file_ret__pack
                     (const GuestfsCapGetFileRet   *message,
                      uint8_t             *out);
size_t guestfs_cap_get_file_ret__pack_to_buffer
                     (const GuestfsCapGetFileRet   *message,
                      ProtobufCBuffer     *buffer);
GuestfsCapGetFileRet *
       guestfs_cap_get_file_ret__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_cap_get_file_ret__free_unpacked
                     (GuestfsCapGetFileRet *message,
                      ProtobufCAllocator *allocator);
/* GuestfsCapSetFileArgs methods */
void   guestfs_cap_set_file_args__init
                     (GuestfsCapSetFileArgs         *message);
size_t guestfs_cap_set_file_args__get_packed_size
                     (const GuestfsCapSetFileArgs   *message);
size_t guestfs_cap_set_file_args__pack
                     (const GuestfsCapSetFileArgs   *message,
                      uint8_t             *out);
size_t guestfs_cap_set_file_args__pack_to_buffer
                     (const GuestfsCapSetFileArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsCapSetFileArgs *
       guestfs_cap_set_file_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_cap_set_file_args__free_unpacked
                     (GuestfsCapSetFileArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsListLdmVolumesRet methods */
void   guestfs_list_ldm_volumes_ret__init
                     (GuestfsListLdmVolumesRet         *message);
size_t guestfs_list_ldm_volumes_ret__get_packed_size
                     (const GuestfsListLdmVolumesRet   *message);
size_t guestfs_list_ldm_volumes_ret__pack
                     (const GuestfsListLdmVolumesRet   *message,
                      uint8_t             *out);
size_t guestfs_list_ldm_volumes_ret__pack_to_buffer
                     (const GuestfsListLdmVolumesRet   *message,
                      ProtobufCBuffer     *buffer);
GuestfsListLdmVolumesRet *
       guestfs_list_ldm_volumes_ret__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_list_ldm_volumes_ret__free_unpacked
                     (GuestfsListLdmVolumesRet *message,
                      ProtobufCAllocator *allocator);
/* GuestfsListLdmPartitionsRet methods */
void   guestfs_list_ldm_partitions_ret__init
                     (GuestfsListLdmPartitionsRet         *message);
size_t guestfs_list_ldm_partitions_ret__get_packed_size
                     (const GuestfsListLdmPartitionsRet   *message);
size_t guestfs_list_ldm_partitions_ret__pack
                     (const GuestfsListLdmPartitionsRet   *message,
                      uint8_t             *out);
size_t guestfs_list_ldm_partitions_ret__pack_to_buffer
                     (const GuestfsListLdmPartitionsRet   *message,
                      ProtobufCBuffer     *buffer);
GuestfsListLdmPartitionsRet *
       guestfs_list_ldm_partitions_ret__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_list_ldm_partitions_ret__free_unpacked
                     (GuestfsListLdmPartitionsRet *message,
                      ProtobufCAllocator *allocator);
/* GuestfsLdmtoolScanRet methods */
void   guestfs_ldmtool_scan_ret__init
                     (GuestfsLdmtoolScanRet         *message);
size_t guestfs_ldmtool_scan_ret__get_packed_size
                     (const GuestfsLdmtoolScanRet   *message);
size_t guestfs_ldmtool_scan_ret__pack
                     (const GuestfsLdmtoolScanRet   *message,
                      uint8_t             *out);
size_t guestfs_ldmtool_scan_ret__pack_to_buffer
                     (const GuestfsLdmtoolScanRet   *message,
                      ProtobufCBuffer     *buffer);
GuestfsLdmtoolScanRet *
       guestfs_ldmtool_scan_ret__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_ldmtool_scan_ret__free_unpacked
                     (GuestfsLdmtoolScanRet *message,
                      ProtobufCAllocator *allocator);
/* GuestfsLdmtoolScanDevicesArgs methods */
void   guestfs_ldmtool_scan_devices_args__init
                     (GuestfsLdmtoolScanDevicesArgs         *message);
size_t guestfs_ldmtool_scan_devices_args__get_packed_size
                     (const GuestfsLdmtoolScanDevicesArgs   *message);
size_t guestfs_ldmtool_scan_devices_args__pack
                     (const GuestfsLdmtoolScanDevicesArgs   *message,
                      uint8_t             *out);
size_t guestfs_ldmtool_scan_devices_args__pack_to_buffer
                     (const GuestfsLdmtoolScanDevicesArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsLdmtoolScanDevicesArgs *
       guestfs_ldmtool_scan_devices_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_ldmtool_scan_devices_args__free_unpacked
                     (GuestfsLdmtoolScanDevicesArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsLdmtoolScanDevicesRet methods */
void   guestfs_ldmtool_scan_devices_ret__init
                     (GuestfsLdmtoolScanDevicesRet         *message);
size_t guestfs_ldmtool_scan_devices_ret__get_packed_size
                     (const GuestfsLdmtoolScanDevicesRet   *message);
size_t guestfs_ldmtool_scan_devices_ret__pack
                     (const GuestfsLdmtoolScanDevicesRet   *message,
                      uint8_t             *out);
size_t guestfs_ldmtool_scan_devices_ret__pack_to_buffer
                     (const GuestfsLdmtoolScanDevicesRet   *message,
                      ProtobufCBuffer     *buffer);
GuestfsLdmtoolScanDevicesRet *
       guestfs_ldmtool_scan_devices_ret__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_ldmtool_scan_devices_ret__free_unpacked
                     (GuestfsLdmtoolScanDevicesRet *message,
                      ProtobufCAllocator *allocator);
/* GuestfsLdmtoolDiskgroupNameArgs methods */
void   guestfs_ldmtool_diskgroup_name_args__init
                     (GuestfsLdmtoolDiskgroupNameArgs         *message);
size_t guestfs_ldmtool_diskgroup_name_args__get_packed_size
                     (const GuestfsLdmtoolDiskgroupNameArgs   *message);
size_t guestfs_ldmtool_diskgroup_name_args__pack
                     (const GuestfsLdmtoolDiskgroupNameArgs   *message,
                      uint8_t             *out);
size_t guestfs_ldmtool_diskgroup_name_args__pack_to_buffer
                     (const GuestfsLdmtoolDiskgroupNameArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsLdmtoolDiskgroupNameArgs *
       guestfs_ldmtool_diskgroup_name_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_ldmtool_diskgroup_name_args__free_unpacked
                     (GuestfsLdmtoolDiskgroupNameArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsLdmtoolDiskgroupNameRet methods */
void   guestfs_ldmtool_diskgroup_name_ret__init
                     (GuestfsLdmtoolDiskgroupNameRet         *message);
size_t guestfs_ldmtool_diskgroup_name_ret__get_packed_size
                     (const GuestfsLdmtoolDiskgroupNameRet   *message);
size_t guestfs_ldmtool_diskgroup_name_ret__pack
                     (const GuestfsLdmtoolDiskgroupNameRet   *message,
                      uint8_t             *out);
size_t guestfs_ldmtool_diskgroup_name_ret__pack_to_buffer
                     (const GuestfsLdmtoolDiskgroupNameRet   *message,
                      ProtobufCBuffer     *buffer);
GuestfsLdmtoolDiskgroupNameRet *
       guestfs_ldmtool_diskgroup_name_ret__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_ldmtool_diskgroup_name_ret__free_unpacked
                     (GuestfsLdmtoolDiskgroupNameRet *message,
                      ProtobufCAllocator *allocator);
/* GuestfsLdmtoolDiskgroupVolumesArgs methods */
void   guestfs_ldmtool_diskgroup_volumes_args__init
                     (GuestfsLdmtoolDiskgroupVolumesArgs         *message);
size_t guestfs_ldmtool_diskgroup_volumes_args__get_packed_size
                     (const GuestfsLdmtoolDiskgroupVolumesArgs   *message);
size_t guestfs_ldmtool_diskgroup_volumes_args__pack
                     (const GuestfsLdmtoolDiskgroupVolumesArgs   *message,
                      uint8_t             *out);
size_t guestfs_ldmtool_diskgroup_volumes_args__pack_to_buffer
                     (const GuestfsLdmtoolDiskgroupVolumesArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsLdmtoolDiskgroupVolumesArgs *
       guestfs_ldmtool_diskgroup_volumes_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_ldmtool_diskgroup_volumes_args__free_unpacked
                     (GuestfsLdmtoolDiskgroupVolumesArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsLdmtoolDiskgroupVolumesRet methods */
void   guestfs_ldmtool_diskgroup_volumes_ret__init
                     (GuestfsLdmtoolDiskgroupVolumesRet         *message);
size_t guestfs_ldmtool_diskgroup_volumes_ret__get_packed_size
                     (const GuestfsLdmtoolDiskgroupVolumesRet   *message);
size_t guestfs_ldmtool_diskgroup_volumes_ret__pack
                     (const GuestfsLdmtoolDiskgroupVolumesRet   *message,
                      uint8_t             *out);
size_t guestfs_ldmtool_diskgroup_volumes_ret__pack_to_buffer
                     (const GuestfsLdmtoolDiskgroupVolumesRet   *message,
                      ProtobufCBuffer     *buffer);
GuestfsLdmtoolDiskgroupVolumesRet *
       guestfs_ldmtool_diskgroup_volumes_ret__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_ldmtool_diskgroup_volumes_ret__free_unpacked
                     (GuestfsLdmtoolDiskgroupVolumesRet *message,
                      ProtobufCAllocator *allocator);
/* GuestfsLdmtoolDiskgroupDisksArgs methods */
void   guestfs_ldmtool_diskgroup_disks_args__init
                     (GuestfsLdmtoolDiskgroupDisksArgs         *message);
size_t guestfs_ldmtool_diskgroup_disks_args__get_packed_size
                     (const GuestfsLdmtoolDiskgroupDisksArgs   *message);
size_t guestfs_ldmtool_diskgroup_disks_args__pack
                     (const GuestfsLdmtoolDiskgroupDisksArgs   *message,
                      uint8_t             *out);
size_t guestfs_ldmtool_diskgroup_disks_args__pack_to_buffer
                     (const GuestfsLdmtoolDiskgroupDisksArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsLdmtoolDiskgroupDisksArgs *
       guestfs_ldmtool_diskgroup_disks_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_ldmtool_diskgroup_disks_args__free_unpacked
                     (GuestfsLdmtoolDiskgroupDisksArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsLdmtoolDiskgroupDisksRet methods */
void   guestfs_ldmtool_diskgroup_disks_ret__init
                     (GuestfsLdmtoolDiskgroupDisksRet         *message);
size_t guestfs_ldmtool_diskgroup_disks_ret__get_packed_size
                     (const GuestfsLdmtoolDiskgroupDisksRet   *message);
size_t guestfs_ldmtool_diskgroup_disks_ret__pack
                     (const GuestfsLdmtoolDiskgroupDisksRet   *message,
                      uint8_t             *out);
size_t guestfs_ldmtool_diskgroup_disks_ret__pack_to_buffer
                     (const GuestfsLdmtoolDiskgroupDisksRet   *message,
                      ProtobufCBuffer     *buffer);
GuestfsLdmtoolDiskgroupDisksRet *
       guestfs_ldmtool_diskgroup_disks_ret__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_ldmtool_diskgroup_disks_ret__free_unpacked
                     (GuestfsLdmtoolDiskgroupDisksRet *message,
                      ProtobufCAllocator *allocator);
/* GuestfsLdmtoolVolumeTypeArgs methods */
void   guestfs_ldmtool_volume_type_args__init
                     (GuestfsLdmtoolVolumeTypeArgs         *message);
size_t guestfs_ldmtool_volume_type_args__get_packed_size
                     (const GuestfsLdmtoolVolumeTypeArgs   *message);
size_t guestfs_ldmtool_volume_type_args__pack
                     (const GuestfsLdmtoolVolumeTypeArgs   *message,
                      uint8_t             *out);
size_t guestfs_ldmtool_volume_type_args__pack_to_buffer
                     (const GuestfsLdmtoolVolumeTypeArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsLdmtoolVolumeTypeArgs *
       guestfs_ldmtool_volume_type_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_ldmtool_volume_type_args__free_unpacked
                     (GuestfsLdmtoolVolumeTypeArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsLdmtoolVolumeTypeRet methods */
void   guestfs_ldmtool_volume_type_ret__init
                     (GuestfsLdmtoolVolumeTypeRet         *message);
size_t guestfs_ldmtool_volume_type_ret__get_packed_size
                     (const GuestfsLdmtoolVolumeTypeRet   *message);
size_t guestfs_ldmtool_volume_type_ret__pack
                     (const GuestfsLdmtoolVolumeTypeRet   *message,
                      uint8_t             *out);
size_t guestfs_ldmtool_volume_type_ret__pack_to_buffer
                     (const GuestfsLdmtoolVolumeTypeRet   *message,
                      ProtobufCBuffer     *buffer);
GuestfsLdmtoolVolumeTypeRet *
       guestfs_ldmtool_volume_type_ret__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_ldmtool_volume_type_ret__free_unpacked
                     (GuestfsLdmtoolVolumeTypeRet *message,
                      ProtobufCAllocator *allocator);
/* GuestfsLdmtoolVolumeHintArgs methods */
void   guestfs_ldmtool_volume_hint_args__init
                     (GuestfsLdmtoolVolumeHintArgs         *message);
size_t guestfs_ldmtool_volume_hint_args__get_packed_size
                     (const GuestfsLdmtoolVolumeHintArgs   *message);
size_t guestfs_ldmtool_volume_hint_args__pack
                     (const GuestfsLdmtoolVolumeHintArgs   *message,
                      uint8_t             *out);
size_t guestfs_ldmtool_volume_hint_args__pack_to_buffer
                     (const GuestfsLdmtoolVolumeHintArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsLdmtoolVolumeHintArgs *
       guestfs_ldmtool_volume_hint_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_ldmtool_volume_hint_args__free_unpacked
                     (GuestfsLdmtoolVolumeHintArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsLdmtoolVolumeHintRet methods */
void   guestfs_ldmtool_volume_hint_ret__init
                     (GuestfsLdmtoolVolumeHintRet         *message);
size_t guestfs_ldmtool_volume_hint_ret__get_packed_size
                     (const GuestfsLdmtoolVolumeHintRet   *message);
size_t guestfs_ldmtool_volume_hint_ret__pack
                     (const GuestfsLdmtoolVolumeHintRet   *message,
                      uint8_t             *out);
size_t guestfs_ldmtool_volume_hint_ret__pack_to_buffer
                     (const GuestfsLdmtoolVolumeHintRet   *message,
                      ProtobufCBuffer     *buffer);
GuestfsLdmtoolVolumeHintRet *
       guestfs_ldmtool_volume_hint_ret__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_ldmtool_volume_hint_ret__free_unpacked
                     (GuestfsLdmtoolVolumeHintRet *message,
                      ProtobufCAllocator *allocator);
/* GuestfsLdmtoolVolumePartitionsArgs methods */
void   guestfs_ldmtool_volume_partitions_args__init
                     (GuestfsLdmtoolVolumePartitionsArgs         *message);
size_t guestfs_ldmtool_volume_partitions_args__get_packed_size
                     (const GuestfsLdmtoolVolumePartitionsArgs   *message);
size_t guestfs_ldmtool_volume_partitions_args__pack
                     (const GuestfsLdmtoolVolumePartitionsArgs   *message,
                      uint8_t             *out);
size_t guestfs_ldmtool_volume_partitions_args__pack_to_buffer
                     (const GuestfsLdmtoolVolumePartitionsArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsLdmtoolVolumePartitionsArgs *
       guestfs_ldmtool_volume_partitions_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_ldmtool_volume_partitions_args__free_unpacked
                     (GuestfsLdmtoolVolumePartitionsArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsLdmtoolVolumePartitionsRet methods */
void   guestfs_ldmtool_volume_partitions_ret__init
                     (GuestfsLdmtoolVolumePartitionsRet         *message);
size_t guestfs_ldmtool_volume_partitions_ret__get_packed_size
                     (const GuestfsLdmtoolVolumePartitionsRet   *message);
size_t guestfs_ldmtool_volume_partitions_ret__pack
                     (const GuestfsLdmtoolVolumePartitionsRet   *message,
                      uint8_t             *out);
size_t guestfs_ldmtool_volume_partitions_ret__pack_to_buffer
                     (const GuestfsLdmtoolVolumePartitionsRet   *message,
                      ProtobufCBuffer     *buffer);
GuestfsLdmtoolVolumePartitionsRet *
       guestfs_ldmtool_volume_partitions_ret__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_ldmtool_volume_partitions_ret__free_unpacked
                     (GuestfsLdmtoolVolumePartitionsRet *message,
                      ProtobufCAllocator *allocator);
/* GuestfsPartSetGptTypeArgs methods */
void   guestfs_part_set_gpt_type_args__init
                     (GuestfsPartSetGptTypeArgs         *message);
size_t guestfs_part_set_gpt_type_args__get_packed_size
                     (const GuestfsPartSetGptTypeArgs   *message);
size_t guestfs_part_set_gpt_type_args__pack
                     (const GuestfsPartSetGptTypeArgs   *message,
                      uint8_t             *out);
size_t guestfs_part_set_gpt_type_args__pack_to_buffer
                     (const GuestfsPartSetGptTypeArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsPartSetGptTypeArgs *
       guestfs_part_set_gpt_type_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_part_set_gpt_type_args__free_unpacked
                     (GuestfsPartSetGptTypeArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsPartGetGptTypeArgs methods */
void   guestfs_part_get_gpt_type_args__init
                     (GuestfsPartGetGptTypeArgs         *message);
size_t guestfs_part_get_gpt_type_args__get_packed_size
                     (const GuestfsPartGetGptTypeArgs   *message);
size_t guestfs_part_get_gpt_type_args__pack
                     (const GuestfsPartGetGptTypeArgs   *message,
                      uint8_t             *out);
size_t guestfs_part_get_gpt_type_args__pack_to_buffer
                     (const GuestfsPartGetGptTypeArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsPartGetGptTypeArgs *
       guestfs_part_get_gpt_type_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_part_get_gpt_type_args__free_unpacked
                     (GuestfsPartGetGptTypeArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsPartGetGptTypeRet methods */
void   guestfs_part_get_gpt_type_ret__init
                     (GuestfsPartGetGptTypeRet         *message);
size_t guestfs_part_get_gpt_type_ret__get_packed_size
                     (const GuestfsPartGetGptTypeRet   *message);
size_t guestfs_part_get_gpt_type_ret__pack
                     (const GuestfsPartGetGptTypeRet   *message,
                      uint8_t             *out);
size_t guestfs_part_get_gpt_type_ret__pack_to_buffer
                     (const GuestfsPartGetGptTypeRet   *message,
                      ProtobufCBuffer     *buffer);
GuestfsPartGetGptTypeRet *
       guestfs_part_get_gpt_type_ret__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_part_get_gpt_type_ret__free_unpacked
                     (GuestfsPartGetGptTypeRet *message,
                      ProtobufCAllocator *allocator);
/* GuestfsRenameArgs methods */
void   guestfs_rename_args__init
                     (GuestfsRenameArgs         *message);
size_t guestfs_rename_args__get_packed_size
                     (const GuestfsRenameArgs   *message);
size_t guestfs_rename_args__pack
                     (const GuestfsRenameArgs   *message,
                      uint8_t             *out);
size_t guestfs_rename_args__pack_to_buffer
                     (const GuestfsRenameArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsRenameArgs *
       guestfs_rename_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_rename_args__free_unpacked
                     (GuestfsRenameArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsIsWholeDeviceArgs methods */
void   guestfs_is_whole_device_args__init
                     (GuestfsIsWholeDeviceArgs         *message);
size_t guestfs_is_whole_device_args__get_packed_size
                     (const GuestfsIsWholeDeviceArgs   *message);
size_t guestfs_is_whole_device_args__pack
                     (const GuestfsIsWholeDeviceArgs   *message,
                      uint8_t             *out);
size_t guestfs_is_whole_device_args__pack_to_buffer
                     (const GuestfsIsWholeDeviceArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsIsWholeDeviceArgs *
       guestfs_is_whole_device_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_is_whole_device_args__free_unpacked
                     (GuestfsIsWholeDeviceArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsIsWholeDeviceRet methods */
void   guestfs_is_whole_device_ret__init
                     (GuestfsIsWholeDeviceRet         *message);
size_t guestfs_is_whole_device_ret__get_packed_size
                     (const GuestfsIsWholeDeviceRet   *message);
size_t guestfs_is_whole_device_ret__pack
                     (const GuestfsIsWholeDeviceRet   *message,
                      uint8_t             *out);
size_t guestfs_is_whole_device_ret__pack_to_buffer
                     (const GuestfsIsWholeDeviceRet   *message,
                      ProtobufCBuffer     *buffer);
GuestfsIsWholeDeviceRet *
       guestfs_is_whole_device_ret__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_is_whole_device_ret__free_unpacked
                     (GuestfsIsWholeDeviceRet *message,
                      ProtobufCAllocator *allocator);
/* GuestfsInternalParseMountableArgs methods */
void   guestfs_internal_parse_mountable_args__init
                     (GuestfsInternalParseMountableArgs         *message);
size_t guestfs_internal_parse_mountable_args__get_packed_size
                     (const GuestfsInternalParseMountableArgs   *message);
size_t guestfs_internal_parse_mountable_args__pack
                     (const GuestfsInternalParseMountableArgs   *message,
                      uint8_t             *out);
size_t guestfs_internal_parse_mountable_args__pack_to_buffer
                     (const GuestfsInternalParseMountableArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsInternalParseMountableArgs *
       guestfs_internal_parse_mountable_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_internal_parse_mountable_args__free_unpacked
                     (GuestfsInternalParseMountableArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsInternalParseMountableRet methods */
void   guestfs_internal_parse_mountable_ret__init
                     (GuestfsInternalParseMountableRet         *message);
size_t guestfs_internal_parse_mountable_ret__get_packed_size
                     (const GuestfsInternalParseMountableRet   *message);
size_t guestfs_internal_parse_mountable_ret__pack
                     (const GuestfsInternalParseMountableRet   *message,
                      uint8_t             *out);
size_t guestfs_internal_parse_mountable_ret__pack_to_buffer
                     (const GuestfsInternalParseMountableRet   *message,
                      ProtobufCBuffer     *buffer);
GuestfsInternalParseMountableRet *
       guestfs_internal_parse_mountable_ret__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_internal_parse_mountable_ret__free_unpacked
                     (GuestfsInternalParseMountableRet *message,
                      ProtobufCAllocator *allocator);
/* GuestfsInternalRhbz914931Args methods */
void   guestfs_internal_rhbz914931_args__init
                     (GuestfsInternalRhbz914931Args         *message);
size_t guestfs_internal_rhbz914931_args__get_packed_size
                     (const GuestfsInternalRhbz914931Args   *message);
size_t guestfs_internal_rhbz914931_args__pack
                     (const GuestfsInternalRhbz914931Args   *message,
                      uint8_t             *out);
size_t guestfs_internal_rhbz914931_args__pack_to_buffer
                     (const GuestfsInternalRhbz914931Args   *message,
                      ProtobufCBuffer     *buffer);
GuestfsInternalRhbz914931Args *
       guestfs_internal_rhbz914931_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_internal_rhbz914931_args__free_unpacked
                     (GuestfsInternalRhbz914931Args *message,
                      ProtobufCAllocator *allocator);
/* GuestfsFeatureAvailableArgs methods */
void   guestfs_feature_available_args__init
                     (GuestfsFeatureAvailableArgs         *message);
size_t guestfs_feature_available_args__get_packed_size
                     (const GuestfsFeatureAvailableArgs   *message);
size_t guestfs_feature_available_args__pack
                     (const GuestfsFeatureAvailableArgs   *message,
                      uint8_t             *out);
size_t guestfs_feature_available_args__pack_to_buffer
                     (const GuestfsFeatureAvailableArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsFeatureAvailableArgs *
       guestfs_feature_available_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_feature_available_args__free_unpacked
                     (GuestfsFeatureAvailableArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsFeatureAvailableRet methods */
void   guestfs_feature_available_ret__init
                     (GuestfsFeatureAvailableRet         *message);
size_t guestfs_feature_available_ret__get_packed_size
                     (const GuestfsFeatureAvailableRet   *message);
size_t guestfs_feature_available_ret__pack
                     (const GuestfsFeatureAvailableRet   *message,
                      uint8_t             *out);
size_t guestfs_feature_available_ret__pack_to_buffer
                     (const GuestfsFeatureAvailableRet   *message,
                      ProtobufCBuffer     *buffer);
GuestfsFeatureAvailableRet *
       guestfs_feature_available_ret__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_feature_available_ret__free_unpacked
                     (GuestfsFeatureAvailableRet *message,
                      ProtobufCAllocator *allocator);
/* GuestfsSyslinuxArgs methods */
void   guestfs_syslinux_args__init
                     (GuestfsSyslinuxArgs         *message);
size_t guestfs_syslinux_args__get_packed_size
                     (const GuestfsSyslinuxArgs   *message);
size_t guestfs_syslinux_args__pack
                     (const GuestfsSyslinuxArgs   *message,
                      uint8_t             *out);
size_t guestfs_syslinux_args__pack_to_buffer
                     (const GuestfsSyslinuxArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsSyslinuxArgs *
       guestfs_syslinux_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_syslinux_args__free_unpacked
                     (GuestfsSyslinuxArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsExtlinuxArgs methods */
void   guestfs_extlinux_args__init
                     (GuestfsExtlinuxArgs         *message);
size_t guestfs_extlinux_args__get_packed_size
                     (const GuestfsExtlinuxArgs   *message);
size_t guestfs_extlinux_args__pack
                     (const GuestfsExtlinuxArgs   *message,
                      uint8_t             *out);
size_t guestfs_extlinux_args__pack_to_buffer
                     (const GuestfsExtlinuxArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsExtlinuxArgs *
       guestfs_extlinux_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_extlinux_args__free_unpacked
                     (GuestfsExtlinuxArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsCpRrArgs methods */
void   guestfs_cp_rr_args__init
                     (GuestfsCpRrArgs         *message);
size_t guestfs_cp_rr_args__get_packed_size
                     (const GuestfsCpRrArgs   *message);
size_t guestfs_cp_rr_args__pack
                     (const GuestfsCpRrArgs   *message,
                      uint8_t             *out);
size_t guestfs_cp_rr_args__pack_to_buffer
                     (const GuestfsCpRrArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsCpRrArgs *
       guestfs_cp_rr_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_cp_rr_args__free_unpacked
                     (GuestfsCpRrArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsRemountArgs methods */
void   guestfs_remount_args__init
                     (GuestfsRemountArgs         *message);
size_t guestfs_remount_args__get_packed_size
                     (const GuestfsRemountArgs   *message);
size_t guestfs_remount_args__pack
                     (const GuestfsRemountArgs   *message,
                      uint8_t             *out);
size_t guestfs_remount_args__pack_to_buffer
                     (const GuestfsRemountArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsRemountArgs *
       guestfs_remount_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_remount_args__free_unpacked
                     (GuestfsRemountArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsSetUuidArgs methods */
void   guestfs_set_uuid_args__init
                     (GuestfsSetUuidArgs         *message);
size_t guestfs_set_uuid_args__get_packed_size
                     (const GuestfsSetUuidArgs   *message);
size_t guestfs_set_uuid_args__pack
                     (const GuestfsSetUuidArgs   *message,
                      uint8_t             *out);
size_t guestfs_set_uuid_args__pack_to_buffer
                     (const GuestfsSetUuidArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsSetUuidArgs *
       guestfs_set_uuid_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_set_uuid_args__free_unpacked
                     (GuestfsSetUuidArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsJournalOpenArgs methods */
void   guestfs_journal_open_args__init
                     (GuestfsJournalOpenArgs         *message);
size_t guestfs_journal_open_args__get_packed_size
                     (const GuestfsJournalOpenArgs   *message);
size_t guestfs_journal_open_args__pack
                     (const GuestfsJournalOpenArgs   *message,
                      uint8_t             *out);
size_t guestfs_journal_open_args__pack_to_buffer
                     (const GuestfsJournalOpenArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsJournalOpenArgs *
       guestfs_journal_open_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_journal_open_args__free_unpacked
                     (GuestfsJournalOpenArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsJournalNextRet methods */
void   guestfs_journal_next_ret__init
                     (GuestfsJournalNextRet         *message);
size_t guestfs_journal_next_ret__get_packed_size
                     (const GuestfsJournalNextRet   *message);
size_t guestfs_journal_next_ret__pack
                     (const GuestfsJournalNextRet   *message,
                      uint8_t             *out);
size_t guestfs_journal_next_ret__pack_to_buffer
                     (const GuestfsJournalNextRet   *message,
                      ProtobufCBuffer     *buffer);
GuestfsJournalNextRet *
       guestfs_journal_next_ret__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_journal_next_ret__free_unpacked
                     (GuestfsJournalNextRet *message,
                      ProtobufCAllocator *allocator);
/* GuestfsJournalSkipArgs methods */
void   guestfs_journal_skip_args__init
                     (GuestfsJournalSkipArgs         *message);
size_t guestfs_journal_skip_args__get_packed_size
                     (const GuestfsJournalSkipArgs   *message);
size_t guestfs_journal_skip_args__pack
                     (const GuestfsJournalSkipArgs   *message,
                      uint8_t             *out);
size_t guestfs_journal_skip_args__pack_to_buffer
                     (const GuestfsJournalSkipArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsJournalSkipArgs *
       guestfs_journal_skip_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_journal_skip_args__free_unpacked
                     (GuestfsJournalSkipArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsJournalSkipRet methods */
void   guestfs_journal_skip_ret__init
                     (GuestfsJournalSkipRet         *message);
size_t guestfs_journal_skip_ret__get_packed_size
                     (const GuestfsJournalSkipRet   *message);
size_t guestfs_journal_skip_ret__pack
                     (const GuestfsJournalSkipRet   *message,
                      uint8_t             *out);
size_t guestfs_journal_skip_ret__pack_to_buffer
                     (const GuestfsJournalSkipRet   *message,
                      ProtobufCBuffer     *buffer);
GuestfsJournalSkipRet *
       guestfs_journal_skip_ret__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_journal_skip_ret__free_unpacked
                     (GuestfsJournalSkipRet *message,
                      ProtobufCAllocator *allocator);
/* GuestfsJournalGetDataThresholdRet methods */
void   guestfs_journal_get_data_threshold_ret__init
                     (GuestfsJournalGetDataThresholdRet         *message);
size_t guestfs_journal_get_data_threshold_ret__get_packed_size
                     (const GuestfsJournalGetDataThresholdRet   *message);
size_t guestfs_journal_get_data_threshold_ret__pack
                     (const GuestfsJournalGetDataThresholdRet   *message,
                      uint8_t             *out);
size_t guestfs_journal_get_data_threshold_ret__pack_to_buffer
                     (const GuestfsJournalGetDataThresholdRet   *message,
                      ProtobufCBuffer     *buffer);
GuestfsJournalGetDataThresholdRet *
       guestfs_journal_get_data_threshold_ret__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_journal_get_data_threshold_ret__free_unpacked
                     (GuestfsJournalGetDataThresholdRet *message,
                      ProtobufCAllocator *allocator);
/* GuestfsJournalSetDataThresholdArgs methods */
void   guestfs_journal_set_data_threshold_args__init
                     (GuestfsJournalSetDataThresholdArgs         *message);
size_t guestfs_journal_set_data_threshold_args__get_packed_size
                     (const GuestfsJournalSetDataThresholdArgs   *message);
size_t guestfs_journal_set_data_threshold_args__pack
                     (const GuestfsJournalSetDataThresholdArgs   *message,
                      uint8_t             *out);
size_t guestfs_journal_set_data_threshold_args__pack_to_buffer
                     (const GuestfsJournalSetDataThresholdArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsJournalSetDataThresholdArgs *
       guestfs_journal_set_data_threshold_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_journal_set_data_threshold_args__free_unpacked
                     (GuestfsJournalSetDataThresholdArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsAugSetmArgs methods */
void   guestfs_aug_setm_args__init
                     (GuestfsAugSetmArgs         *message);
size_t guestfs_aug_setm_args__get_packed_size
                     (const GuestfsAugSetmArgs   *message);
size_t guestfs_aug_setm_args__pack
                     (const GuestfsAugSetmArgs   *message,
                      uint8_t             *out);
size_t guestfs_aug_setm_args__pack_to_buffer
                     (const GuestfsAugSetmArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsAugSetmArgs *
       guestfs_aug_setm_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_aug_setm_args__free_unpacked
                     (GuestfsAugSetmArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsAugSetmRet methods */
void   guestfs_aug_setm_ret__init
                     (GuestfsAugSetmRet         *message);
size_t guestfs_aug_setm_ret__get_packed_size
                     (const GuestfsAugSetmRet   *message);
size_t guestfs_aug_setm_ret__pack
                     (const GuestfsAugSetmRet   *message,
                      uint8_t             *out);
size_t guestfs_aug_setm_ret__pack_to_buffer
                     (const GuestfsAugSetmRet   *message,
                      ProtobufCBuffer     *buffer);
GuestfsAugSetmRet *
       guestfs_aug_setm_ret__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_aug_setm_ret__free_unpacked
                     (GuestfsAugSetmRet *message,
                      ProtobufCAllocator *allocator);
/* GuestfsAugLabelArgs methods */
void   guestfs_aug_label_args__init
                     (GuestfsAugLabelArgs         *message);
size_t guestfs_aug_label_args__get_packed_size
                     (const GuestfsAugLabelArgs   *message);
size_t guestfs_aug_label_args__pack
                     (const GuestfsAugLabelArgs   *message,
                      uint8_t             *out);
size_t guestfs_aug_label_args__pack_to_buffer
                     (const GuestfsAugLabelArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsAugLabelArgs *
       guestfs_aug_label_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_aug_label_args__free_unpacked
                     (GuestfsAugLabelArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsAugLabelRet methods */
void   guestfs_aug_label_ret__init
                     (GuestfsAugLabelRet         *message);
size_t guestfs_aug_label_ret__get_packed_size
                     (const GuestfsAugLabelRet   *message);
size_t guestfs_aug_label_ret__pack
                     (const GuestfsAugLabelRet   *message,
                      uint8_t             *out);
size_t guestfs_aug_label_ret__pack_to_buffer
                     (const GuestfsAugLabelRet   *message,
                      ProtobufCBuffer     *buffer);
GuestfsAugLabelRet *
       guestfs_aug_label_ret__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_aug_label_ret__free_unpacked
                     (GuestfsAugLabelRet *message,
                      ProtobufCAllocator *allocator);
/* GuestfsInternalUploadArgs methods */
void   guestfs_internal_upload_args__init
                     (GuestfsInternalUploadArgs         *message);
size_t guestfs_internal_upload_args__get_packed_size
                     (const GuestfsInternalUploadArgs   *message);
size_t guestfs_internal_upload_args__pack
                     (const GuestfsInternalUploadArgs   *message,
                      uint8_t             *out);
size_t guestfs_internal_upload_args__pack_to_buffer
                     (const GuestfsInternalUploadArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsInternalUploadArgs *
       guestfs_internal_upload_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_internal_upload_args__free_unpacked
                     (GuestfsInternalUploadArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsCopyAttributesArgs methods */
void   guestfs_copy_attributes_args__init
                     (GuestfsCopyAttributesArgs         *message);
size_t guestfs_copy_attributes_args__get_packed_size
                     (const GuestfsCopyAttributesArgs   *message);
size_t guestfs_copy_attributes_args__pack
                     (const GuestfsCopyAttributesArgs   *message,
                      uint8_t             *out);
size_t guestfs_copy_attributes_args__pack_to_buffer
                     (const GuestfsCopyAttributesArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsCopyAttributesArgs *
       guestfs_copy_attributes_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_copy_attributes_args__free_unpacked
                     (GuestfsCopyAttributesArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsPartGetNameArgs methods */
void   guestfs_part_get_name_args__init
                     (GuestfsPartGetNameArgs         *message);
size_t guestfs_part_get_name_args__get_packed_size
                     (const GuestfsPartGetNameArgs   *message);
size_t guestfs_part_get_name_args__pack
                     (const GuestfsPartGetNameArgs   *message,
                      uint8_t             *out);
size_t guestfs_part_get_name_args__pack_to_buffer
                     (const GuestfsPartGetNameArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsPartGetNameArgs *
       guestfs_part_get_name_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_part_get_name_args__free_unpacked
                     (GuestfsPartGetNameArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsPartGetNameRet methods */
void   guestfs_part_get_name_ret__init
                     (GuestfsPartGetNameRet         *message);
size_t guestfs_part_get_name_ret__get_packed_size
                     (const GuestfsPartGetNameRet   *message);
size_t guestfs_part_get_name_ret__pack
                     (const GuestfsPartGetNameRet   *message,
                      uint8_t             *out);
size_t guestfs_part_get_name_ret__pack_to_buffer
                     (const GuestfsPartGetNameRet   *message,
                      ProtobufCBuffer     *buffer);
GuestfsPartGetNameRet *
       guestfs_part_get_name_ret__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_part_get_name_ret__free_unpacked
                     (GuestfsPartGetNameRet *message,
                      ProtobufCAllocator *allocator);
/* GuestfsBlkdiscardArgs methods */
void   guestfs_blkdiscard_args__init
                     (GuestfsBlkdiscardArgs         *message);
size_t guestfs_blkdiscard_args__get_packed_size
                     (const GuestfsBlkdiscardArgs   *message);
size_t guestfs_blkdiscard_args__pack
                     (const GuestfsBlkdiscardArgs   *message,
                      uint8_t             *out);
size_t guestfs_blkdiscard_args__pack_to_buffer
                     (const GuestfsBlkdiscardArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsBlkdiscardArgs *
       guestfs_blkdiscard_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_blkdiscard_args__free_unpacked
                     (GuestfsBlkdiscardArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsBlkdiscardzeroesArgs methods */
void   guestfs_blkdiscardzeroes_args__init
                     (GuestfsBlkdiscardzeroesArgs         *message);
size_t guestfs_blkdiscardzeroes_args__get_packed_size
                     (const GuestfsBlkdiscardzeroesArgs   *message);
size_t guestfs_blkdiscardzeroes_args__pack
                     (const GuestfsBlkdiscardzeroesArgs   *message,
                      uint8_t             *out);
size_t guestfs_blkdiscardzeroes_args__pack_to_buffer
                     (const GuestfsBlkdiscardzeroesArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsBlkdiscardzeroesArgs *
       guestfs_blkdiscardzeroes_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_blkdiscardzeroes_args__free_unpacked
                     (GuestfsBlkdiscardzeroesArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsBlkdiscardzeroesRet methods */
void   guestfs_blkdiscardzeroes_ret__init
                     (GuestfsBlkdiscardzeroesRet         *message);
size_t guestfs_blkdiscardzeroes_ret__get_packed_size
                     (const GuestfsBlkdiscardzeroesRet   *message);
size_t guestfs_blkdiscardzeroes_ret__pack
                     (const GuestfsBlkdiscardzeroesRet   *message,
                      uint8_t             *out);
size_t guestfs_blkdiscardzeroes_ret__pack_to_buffer
                     (const GuestfsBlkdiscardzeroesRet   *message,
                      ProtobufCBuffer     *buffer);
GuestfsBlkdiscardzeroesRet *
       guestfs_blkdiscardzeroes_ret__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_blkdiscardzeroes_ret__free_unpacked
                     (GuestfsBlkdiscardzeroesRet *message,
                      ProtobufCAllocator *allocator);
/* GuestfsCpioOutArgs methods */
void   guestfs_cpio_out_args__init
                     (GuestfsCpioOutArgs         *message);
size_t guestfs_cpio_out_args__get_packed_size
                     (const GuestfsCpioOutArgs   *message);
size_t guestfs_cpio_out_args__pack
                     (const GuestfsCpioOutArgs   *message,
                      uint8_t             *out);
size_t guestfs_cpio_out_args__pack_to_buffer
                     (const GuestfsCpioOutArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsCpioOutArgs *
       guestfs_cpio_out_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_cpio_out_args__free_unpacked
                     (GuestfsCpioOutArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsJournalGetRealtimeUsecRet methods */
void   guestfs_journal_get_realtime_usec_ret__init
                     (GuestfsJournalGetRealtimeUsecRet         *message);
size_t guestfs_journal_get_realtime_usec_ret__get_packed_size
                     (const GuestfsJournalGetRealtimeUsecRet   *message);
size_t guestfs_journal_get_realtime_usec_ret__pack
                     (const GuestfsJournalGetRealtimeUsecRet   *message,
                      uint8_t             *out);
size_t guestfs_journal_get_realtime_usec_ret__pack_to_buffer
                     (const GuestfsJournalGetRealtimeUsecRet   *message,
                      ProtobufCBuffer     *buffer);
GuestfsJournalGetRealtimeUsecRet *
       guestfs_journal_get_realtime_usec_ret__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_journal_get_realtime_usec_ret__free_unpacked
                     (GuestfsJournalGetRealtimeUsecRet *message,
                      ProtobufCAllocator *allocator);
/* GuestfsStatnsArgs methods */
void   guestfs_statns_args__init
                     (GuestfsStatnsArgs         *message);
size_t guestfs_statns_args__get_packed_size
                     (const GuestfsStatnsArgs   *message);
size_t guestfs_statns_args__pack
                     (const GuestfsStatnsArgs   *message,
                      uint8_t             *out);
size_t guestfs_statns_args__pack_to_buffer
                     (const GuestfsStatnsArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsStatnsArgs *
       guestfs_statns_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_statns_args__free_unpacked
                     (GuestfsStatnsArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsStatnsRet methods */
void   guestfs_statns_ret__init
                     (GuestfsStatnsRet         *message);
size_t guestfs_statns_ret__get_packed_size
                     (const GuestfsStatnsRet   *message);
size_t guestfs_statns_ret__pack
                     (const GuestfsStatnsRet   *message,
                      uint8_t             *out);
size_t guestfs_statns_ret__pack_to_buffer
                     (const GuestfsStatnsRet   *message,
                      ProtobufCBuffer     *buffer);
GuestfsStatnsRet *
       guestfs_statns_ret__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_statns_ret__free_unpacked
                     (GuestfsStatnsRet *message,
                      ProtobufCAllocator *allocator);
/* GuestfsLstatnsArgs methods */
void   guestfs_lstatns_args__init
                     (GuestfsLstatnsArgs         *message);
size_t guestfs_lstatns_args__get_packed_size
                     (const GuestfsLstatnsArgs   *message);
size_t guestfs_lstatns_args__pack
                     (const GuestfsLstatnsArgs   *message,
                      uint8_t             *out);
size_t guestfs_lstatns_args__pack_to_buffer
                     (const GuestfsLstatnsArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsLstatnsArgs *
       guestfs_lstatns_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_lstatns_args__free_unpacked
                     (GuestfsLstatnsArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsLstatnsRet methods */
void   guestfs_lstatns_ret__init
                     (GuestfsLstatnsRet         *message);
size_t guestfs_lstatns_ret__get_packed_size
                     (const GuestfsLstatnsRet   *message);
size_t guestfs_lstatns_ret__pack
                     (const GuestfsLstatnsRet   *message,
                      uint8_t             *out);
size_t guestfs_lstatns_ret__pack_to_buffer
                     (const GuestfsLstatnsRet   *message,
                      ProtobufCBuffer     *buffer);
GuestfsLstatnsRet *
       guestfs_lstatns_ret__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_lstatns_ret__free_unpacked
                     (GuestfsLstatnsRet *message,
                      ProtobufCAllocator *allocator);
/* GuestfsInternalLstatnslistArgs methods */
void   guestfs_internal_lstatnslist_args__init
                     (GuestfsInternalLstatnslistArgs         *message);
size_t guestfs_internal_lstatnslist_args__get_packed_size
                     (const GuestfsInternalLstatnslistArgs   *message);
size_t guestfs_internal_lstatnslist_args__pack
                     (const GuestfsInternalLstatnslistArgs   *message,
                      uint8_t             *out);
size_t guestfs_internal_lstatnslist_args__pack_to_buffer
                     (const GuestfsInternalLstatnslistArgs   *message,
                      ProtobufCBuffer     *buffer);
GuestfsInternalLstatnslistArgs *
       guestfs_internal_lstatnslist_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_internal_lstatnslist_args__free_unpacked
                     (GuestfsInternalLstatnslistArgs *message,
                      ProtobufCAllocator *allocator);
/* GuestfsInternalLstatnslistRet methods */
void   guestfs_internal_lstatnslist_ret__init
                     (GuestfsInternalLstatnslistRet         *message);
size_t guestfs_internal_lstatnslist_ret__get_packed_size
                     (const GuestfsInternalLstatnslistRet   *message);
size_t guestfs_internal_lstatnslist_ret__pack
                     (const GuestfsInternalLstatnslistRet   *message,
                      uint8_t             *out);
size_t guestfs_internal_lstatnslist_ret__pack_to_buffer
                     (const GuestfsInternalLstatnslistRet   *message,
                      ProtobufCBuffer     *buffer);
GuestfsInternalLstatnslistRet *
       guestfs_internal_lstatnslist_ret__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_internal_lstatnslist_ret__free_unpacked
                     (GuestfsInternalLstatnslistRet *message,
                      ProtobufCAllocator *allocator);
/* GuestfsMessageError methods */
void   guestfs_message_error__init
                     (GuestfsMessageError         *message);
size_t guestfs_message_error__get_packed_size
                     (const GuestfsMessageError   *message);
size_t guestfs_message_error__pack
                     (const GuestfsMessageError   *message,
                      uint8_t             *out);
size_t guestfs_message_error__pack_to_buffer
                     (const GuestfsMessageError   *message,
                      ProtobufCBuffer     *buffer);
GuestfsMessageError *
       guestfs_message_error__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_message_error__free_unpacked
                     (GuestfsMessageError *message,
                      ProtobufCAllocator *allocator);
/* GuestfsMessageHeader methods */
void   guestfs_message_header__init
                     (GuestfsMessageHeader         *message);
size_t guestfs_message_header__get_packed_size
                     (const GuestfsMessageHeader   *message);
size_t guestfs_message_header__pack
                     (const GuestfsMessageHeader   *message,
                      uint8_t             *out);
size_t guestfs_message_header__pack_to_buffer
                     (const GuestfsMessageHeader   *message,
                      ProtobufCBuffer     *buffer);
GuestfsMessageHeader *
       guestfs_message_header__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_message_header__free_unpacked
                     (GuestfsMessageHeader *message,
                      ProtobufCAllocator *allocator);
/* GuestfsChunk methods */
void   guestfs_chunk__init
                     (GuestfsChunk         *message);
size_t guestfs_chunk__get_packed_size
                     (const GuestfsChunk   *message);
size_t guestfs_chunk__pack
                     (const GuestfsChunk   *message,
                      uint8_t             *out);
size_t guestfs_chunk__pack_to_buffer
                     (const GuestfsChunk   *message,
                      ProtobufCBuffer     *buffer);
GuestfsChunk *
       guestfs_chunk__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_chunk__free_unpacked
                     (GuestfsChunk *message,
                      ProtobufCAllocator *allocator);
/* GuestfsProgress methods */
void   guestfs_progress__init
                     (GuestfsProgress         *message);
size_t guestfs_progress__get_packed_size
                     (const GuestfsProgress   *message);
size_t guestfs_progress__pack
                     (const GuestfsProgress   *message,
                      uint8_t             *out);
size_t guestfs_progress__pack_to_buffer
                     (const GuestfsProgress   *message,
                      ProtobufCBuffer     *buffer);
GuestfsProgress *
       guestfs_progress__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_progress__free_unpacked
                     (GuestfsProgress *message,
                      ProtobufCAllocator *allocator);
/* GuestfsFlagMessage methods */
void   guestfs_flag_message__init
                     (GuestfsFlagMessage         *message);
size_t guestfs_flag_message__get_packed_size
                     (const GuestfsFlagMessage   *message);
size_t guestfs_flag_message__pack
                     (const GuestfsFlagMessage   *message,
                      uint8_t             *out);
size_t guestfs_flag_message__pack_to_buffer
                     (const GuestfsFlagMessage   *message,
                      ProtobufCBuffer     *buffer);
GuestfsFlagMessage *
       guestfs_flag_message__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   guestfs_flag_message__free_unpacked
                     (GuestfsFlagMessage *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*GuestfsIntIntBool_Closure)
                 (const GuestfsIntIntBool *message,
                  void *closure_data);
typedef void (*GuestfsIntIntBoolList_Closure)
                 (const GuestfsIntIntBoolList *message,
                  void *closure_data);
typedef void (*GuestfsIntPv_Closure)
                 (const GuestfsIntPv *message,
                  void *closure_data);
typedef void (*GuestfsIntPvList_Closure)
                 (const GuestfsIntPvList *message,
                  void *closure_data);
typedef void (*GuestfsIntVg_Closure)
                 (const GuestfsIntVg *message,
                  void *closure_data);
typedef void (*GuestfsIntVgList_Closure)
                 (const GuestfsIntVgList *message,
                  void *closure_data);
typedef void (*GuestfsIntLv_Closure)
                 (const GuestfsIntLv *message,
                  void *closure_data);
typedef void (*GuestfsIntLvList_Closure)
                 (const GuestfsIntLvList *message,
                  void *closure_data);
typedef void (*GuestfsIntStat_Closure)
                 (const GuestfsIntStat *message,
                  void *closure_data);
typedef void (*GuestfsIntStatList_Closure)
                 (const GuestfsIntStatList *message,
                  void *closure_data);
typedef void (*GuestfsIntStatNS_Closure)
                 (const GuestfsIntStatNS *message,
                  void *closure_data);
typedef void (*GuestfsIntStatNSList_Closure)
                 (const GuestfsIntStatNSList *message,
                  void *closure_data);
typedef void (*GuestfsIntStatVFS_Closure)
                 (const GuestfsIntStatVFS *message,
                  void *closure_data);
typedef void (*GuestfsIntStatVFSList_Closure)
                 (const GuestfsIntStatVFSList *message,
                  void *closure_data);
typedef void (*GuestfsIntDirent_Closure)
                 (const GuestfsIntDirent *message,
                  void *closure_data);
typedef void (*GuestfsIntDirentList_Closure)
                 (const GuestfsIntDirentList *message,
                  void *closure_data);
typedef void (*GuestfsIntVersion_Closure)
                 (const GuestfsIntVersion *message,
                  void *closure_data);
typedef void (*GuestfsIntVersionList_Closure)
                 (const GuestfsIntVersionList *message,
                  void *closure_data);
typedef void (*GuestfsIntXAttr_Closure)
                 (const GuestfsIntXAttr *message,
                  void *closure_data);
typedef void (*GuestfsIntXAttrList_Closure)
                 (const GuestfsIntXAttrList *message,
                  void *closure_data);
typedef void (*GuestfsIntINotifyEvent_Closure)
                 (const GuestfsIntINotifyEvent *message,
                  void *closure_data);
typedef void (*GuestfsIntINotifyEventList_Closure)
                 (const GuestfsIntINotifyEventList *message,
                  void *closure_data);
typedef void (*GuestfsIntPartition_Closure)
                 (const GuestfsIntPartition *message,
                  void *closure_data);
typedef void (*GuestfsIntPartitionList_Closure)
                 (const GuestfsIntPartitionList *message,
                  void *closure_data);
typedef void (*GuestfsIntApplication_Closure)
                 (const GuestfsIntApplication *message,
                  void *closure_data);
typedef void (*GuestfsIntApplicationList_Closure)
                 (const GuestfsIntApplicationList *message,
                  void *closure_data);
typedef void (*GuestfsIntApplication2_Closure)
                 (const GuestfsIntApplication2 *message,
                  void *closure_data);
typedef void (*GuestfsIntApplication2List_Closure)
                 (const GuestfsIntApplication2List *message,
                  void *closure_data);
typedef void (*GuestfsIntISOInfo_Closure)
                 (const GuestfsIntISOInfo *message,
                  void *closure_data);
typedef void (*GuestfsIntISOInfoList_Closure)
                 (const GuestfsIntISOInfoList *message,
                  void *closure_data);
typedef void (*GuestfsIntMDStat_Closure)
                 (const GuestfsIntMDStat *message,
                  void *closure_data);
typedef void (*GuestfsIntMDStatList_Closure)
                 (const GuestfsIntMDStatList *message,
                  void *closure_data);
typedef void (*GuestfsIntBTRFSSubvolume_Closure)
                 (const GuestfsIntBTRFSSubvolume *message,
                  void *closure_data);
typedef void (*GuestfsIntBTRFSSubvolumeList_Closure)
                 (const GuestfsIntBTRFSSubvolumeList *message,
                  void *closure_data);
typedef void (*GuestfsIntXFSInfo_Closure)
                 (const GuestfsIntXFSInfo *message,
                  void *closure_data);
typedef void (*GuestfsIntXFSInfoList_Closure)
                 (const GuestfsIntXFSInfoList *message,
                  void *closure_data);
typedef void (*GuestfsIntUTSName_Closure)
                 (const GuestfsIntUTSName *message,
                  void *closure_data);
typedef void (*GuestfsIntUTSNameList_Closure)
                 (const GuestfsIntUTSNameList *message,
                  void *closure_data);
typedef void (*GuestfsIntHivexNode_Closure)
                 (const GuestfsIntHivexNode *message,
                  void *closure_data);
typedef void (*GuestfsIntHivexNodeList_Closure)
                 (const GuestfsIntHivexNodeList *message,
                  void *closure_data);
typedef void (*GuestfsIntHivexValue_Closure)
                 (const GuestfsIntHivexValue *message,
                  void *closure_data);
typedef void (*GuestfsIntHivexValueList_Closure)
                 (const GuestfsIntHivexValueList *message,
                  void *closure_data);
typedef void (*GuestfsIntInternalMountable_Closure)
                 (const GuestfsIntInternalMountable *message,
                  void *closure_data);
typedef void (*GuestfsIntInternalMountableList_Closure)
                 (const GuestfsIntInternalMountableList *message,
                  void *closure_data);
typedef void (*GuestfsMountArgs_Closure)
                 (const GuestfsMountArgs *message,
                  void *closure_data);
typedef void (*GuestfsTouchArgs_Closure)
                 (const GuestfsTouchArgs *message,
                  void *closure_data);
typedef void (*GuestfsLlArgs_Closure)
                 (const GuestfsLlArgs *message,
                  void *closure_data);
typedef void (*GuestfsLlRet_Closure)
                 (const GuestfsLlRet *message,
                  void *closure_data);
typedef void (*GuestfsListDevicesRet_Closure)
                 (const GuestfsListDevicesRet *message,
                  void *closure_data);
typedef void (*GuestfsListPartitionsRet_Closure)
                 (const GuestfsListPartitionsRet *message,
                  void *closure_data);
typedef void (*GuestfsPvsRet_Closure)
                 (const GuestfsPvsRet *message,
                  void *closure_data);
typedef void (*GuestfsVgsRet_Closure)
                 (const GuestfsVgsRet *message,
                  void *closure_data);
typedef void (*GuestfsLvsRet_Closure)
                 (const GuestfsLvsRet *message,
                  void *closure_data);
typedef void (*GuestfsPvsFullRet_Closure)
                 (const GuestfsPvsFullRet *message,
                  void *closure_data);
typedef void (*GuestfsVgsFullRet_Closure)
                 (const GuestfsVgsFullRet *message,
                  void *closure_data);
typedef void (*GuestfsLvsFullRet_Closure)
                 (const GuestfsLvsFullRet *message,
                  void *closure_data);
typedef void (*GuestfsAugInitArgs_Closure)
                 (const GuestfsAugInitArgs *message,
                  void *closure_data);
typedef void (*GuestfsAugDefvarArgs_Closure)
                 (const GuestfsAugDefvarArgs *message,
                  void *closure_data);
typedef void (*GuestfsAugDefvarRet_Closure)
                 (const GuestfsAugDefvarRet *message,
                  void *closure_data);
typedef void (*GuestfsAugDefnodeArgs_Closure)
                 (const GuestfsAugDefnodeArgs *message,
                  void *closure_data);
typedef void (*GuestfsAugDefnodeRet_Closure)
                 (const GuestfsAugDefnodeRet *message,
                  void *closure_data);
typedef void (*GuestfsAugGetArgs_Closure)
                 (const GuestfsAugGetArgs *message,
                  void *closure_data);
typedef void (*GuestfsAugGetRet_Closure)
                 (const GuestfsAugGetRet *message,
                  void *closure_data);
typedef void (*GuestfsAugSetArgs_Closure)
                 (const GuestfsAugSetArgs *message,
                  void *closure_data);
typedef void (*GuestfsAugInsertArgs_Closure)
                 (const GuestfsAugInsertArgs *message,
                  void *closure_data);
typedef void (*GuestfsAugRmArgs_Closure)
                 (const GuestfsAugRmArgs *message,
                  void *closure_data);
typedef void (*GuestfsAugRmRet_Closure)
                 (const GuestfsAugRmRet *message,
                  void *closure_data);
typedef void (*GuestfsAugMvArgs_Closure)
                 (const GuestfsAugMvArgs *message,
                  void *closure_data);
typedef void (*GuestfsAugMatchArgs_Closure)
                 (const GuestfsAugMatchArgs *message,
                  void *closure_data);
typedef void (*GuestfsAugMatchRet_Closure)
                 (const GuestfsAugMatchRet *message,
                  void *closure_data);
typedef void (*GuestfsAugLsArgs_Closure)
                 (const GuestfsAugLsArgs *message,
                  void *closure_data);
typedef void (*GuestfsAugLsRet_Closure)
                 (const GuestfsAugLsRet *message,
                  void *closure_data);
typedef void (*GuestfsRmArgs_Closure)
                 (const GuestfsRmArgs *message,
                  void *closure_data);
typedef void (*GuestfsRmdirArgs_Closure)
                 (const GuestfsRmdirArgs *message,
                  void *closure_data);
typedef void (*GuestfsRmRfArgs_Closure)
                 (const GuestfsRmRfArgs *message,
                  void *closure_data);
typedef void (*GuestfsMkdirArgs_Closure)
                 (const GuestfsMkdirArgs *message,
                  void *closure_data);
typedef void (*GuestfsMkdirPpArgs_Closure)
                 (const GuestfsMkdirPpArgs *message,
                  void *closure_data);
typedef void (*GuestfsChmodArgs_Closure)
                 (const GuestfsChmodArgs *message,
                  void *closure_data);
typedef void (*GuestfsChownArgs_Closure)
                 (const GuestfsChownArgs *message,
                  void *closure_data);
typedef void (*GuestfsExistsArgs_Closure)
                 (const GuestfsExistsArgs *message,
                  void *closure_data);
typedef void (*GuestfsExistsRet_Closure)
                 (const GuestfsExistsRet *message,
                  void *closure_data);
typedef void (*GuestfsIsFileArgs_Closure)
                 (const GuestfsIsFileArgs *message,
                  void *closure_data);
typedef void (*GuestfsIsFileRet_Closure)
                 (const GuestfsIsFileRet *message,
                  void *closure_data);
typedef void (*GuestfsIsDirArgs_Closure)
                 (const GuestfsIsDirArgs *message,
                  void *closure_data);
typedef void (*GuestfsIsDirRet_Closure)
                 (const GuestfsIsDirRet *message,
                  void *closure_data);
typedef void (*GuestfsPvcreateArgs_Closure)
                 (const GuestfsPvcreateArgs *message,
                  void *closure_data);
typedef void (*GuestfsVgcreateArgs_Closure)
                 (const GuestfsVgcreateArgs *message,
                  void *closure_data);
typedef void (*GuestfsLvcreateArgs_Closure)
                 (const GuestfsLvcreateArgs *message,
                  void *closure_data);
typedef void (*GuestfsSfdiskArgs_Closure)
                 (const GuestfsSfdiskArgs *message,
                  void *closure_data);
typedef void (*GuestfsWriteFileArgs_Closure)
                 (const GuestfsWriteFileArgs *message,
                  void *closure_data);
typedef void (*GuestfsUmountArgs_Closure)
                 (const GuestfsUmountArgs *message,
                  void *closure_data);
typedef void (*GuestfsMountsRet_Closure)
                 (const GuestfsMountsRet *message,
                  void *closure_data);
typedef void (*GuestfsFileArgs_Closure)
                 (const GuestfsFileArgs *message,
                  void *closure_data);
typedef void (*GuestfsFileRet_Closure)
                 (const GuestfsFileRet *message,
                  void *closure_data);
typedef void (*GuestfsCommandArgs_Closure)
                 (const GuestfsCommandArgs *message,
                  void *closure_data);
typedef void (*GuestfsCommandRet_Closure)
                 (const GuestfsCommandRet *message,
                  void *closure_data);
typedef void (*GuestfsCommandLinesArgs_Closure)
                 (const GuestfsCommandLinesArgs *message,
                  void *closure_data);
typedef void (*GuestfsCommandLinesRet_Closure)
                 (const GuestfsCommandLinesRet *message,
                  void *closure_data);
typedef void (*GuestfsStatvfsArgs_Closure)
                 (const GuestfsStatvfsArgs *message,
                  void *closure_data);
typedef void (*GuestfsStatvfsRet_Closure)
                 (const GuestfsStatvfsRet *message,
                  void *closure_data);
typedef void (*GuestfsTune2fslArgs_Closure)
                 (const GuestfsTune2fslArgs *message,
                  void *closure_data);
typedef void (*GuestfsTune2fslRet_Closure)
                 (const GuestfsTune2fslRet *message,
                  void *closure_data);
typedef void (*GuestfsBlockdevSetroArgs_Closure)
                 (const GuestfsBlockdevSetroArgs *message,
                  void *closure_data);
typedef void (*GuestfsBlockdevSetrwArgs_Closure)
                 (const GuestfsBlockdevSetrwArgs *message,
                  void *closure_data);
typedef void (*GuestfsBlockdevGetroArgs_Closure)
                 (const GuestfsBlockdevGetroArgs *message,
                  void *closure_data);
typedef void (*GuestfsBlockdevGetroRet_Closure)
                 (const GuestfsBlockdevGetroRet *message,
                  void *closure_data);
typedef void (*GuestfsBlockdevGetssArgs_Closure)
                 (const GuestfsBlockdevGetssArgs *message,
                  void *closure_data);
typedef void (*GuestfsBlockdevGetssRet_Closure)
                 (const GuestfsBlockdevGetssRet *message,
                  void *closure_data);
typedef void (*GuestfsBlockdevGetbszArgs_Closure)
                 (const GuestfsBlockdevGetbszArgs *message,
                  void *closure_data);
typedef void (*GuestfsBlockdevGetbszRet_Closure)
                 (const GuestfsBlockdevGetbszRet *message,
                  void *closure_data);
typedef void (*GuestfsBlockdevSetbszArgs_Closure)
                 (const GuestfsBlockdevSetbszArgs *message,
                  void *closure_data);
typedef void (*GuestfsBlockdevGetszArgs_Closure)
                 (const GuestfsBlockdevGetszArgs *message,
                  void *closure_data);
typedef void (*GuestfsBlockdevGetszRet_Closure)
                 (const GuestfsBlockdevGetszRet *message,
                  void *closure_data);
typedef void (*GuestfsBlockdevGetsize64Args_Closure)
                 (const GuestfsBlockdevGetsize64Args *message,
                  void *closure_data);
typedef void (*GuestfsBlockdevGetsize64Ret_Closure)
                 (const GuestfsBlockdevGetsize64Ret *message,
                  void *closure_data);
typedef void (*GuestfsBlockdevFlushbufsArgs_Closure)
                 (const GuestfsBlockdevFlushbufsArgs *message,
                  void *closure_data);
typedef void (*GuestfsBlockdevRereadptArgs_Closure)
                 (const GuestfsBlockdevRereadptArgs *message,
                  void *closure_data);
typedef void (*GuestfsUploadArgs_Closure)
                 (const GuestfsUploadArgs *message,
                  void *closure_data);
typedef void (*GuestfsDownloadArgs_Closure)
                 (const GuestfsDownloadArgs *message,
                  void *closure_data);
typedef void (*GuestfsChecksumArgs_Closure)
                 (const GuestfsChecksumArgs *message,
                  void *closure_data);
typedef void (*GuestfsChecksumRet_Closure)
                 (const GuestfsChecksumRet *message,
                  void *closure_data);
typedef void (*GuestfsTarInArgs_Closure)
                 (const GuestfsTarInArgs *message,
                  void *closure_data);
typedef void (*GuestfsTarOutArgs_Closure)
                 (const GuestfsTarOutArgs *message,
                  void *closure_data);
typedef void (*GuestfsTgzInArgs_Closure)
                 (const GuestfsTgzInArgs *message,
                  void *closure_data);
typedef void (*GuestfsTgzOutArgs_Closure)
                 (const GuestfsTgzOutArgs *message,
                  void *closure_data);
typedef void (*GuestfsMountRoArgs_Closure)
                 (const GuestfsMountRoArgs *message,
                  void *closure_data);
typedef void (*GuestfsMountOptionsArgs_Closure)
                 (const GuestfsMountOptionsArgs *message,
                  void *closure_data);
typedef void (*GuestfsMountVfsArgs_Closure)
                 (const GuestfsMountVfsArgs *message,
                  void *closure_data);
typedef void (*GuestfsDebugArgs_Closure)
                 (const GuestfsDebugArgs *message,
                  void *closure_data);
typedef void (*GuestfsDebugRet_Closure)
                 (const GuestfsDebugRet *message,
                  void *closure_data);
typedef void (*GuestfsLvremoveArgs_Closure)
                 (const GuestfsLvremoveArgs *message,
                  void *closure_data);
typedef void (*GuestfsVgremoveArgs_Closure)
                 (const GuestfsVgremoveArgs *message,
                  void *closure_data);
typedef void (*GuestfsPvremoveArgs_Closure)
                 (const GuestfsPvremoveArgs *message,
                  void *closure_data);
typedef void (*GuestfsSetE2labelArgs_Closure)
                 (const GuestfsSetE2labelArgs *message,
                  void *closure_data);
typedef void (*GuestfsGetE2labelArgs_Closure)
                 (const GuestfsGetE2labelArgs *message,
                  void *closure_data);
typedef void (*GuestfsGetE2labelRet_Closure)
                 (const GuestfsGetE2labelRet *message,
                  void *closure_data);
typedef void (*GuestfsSetE2uuidArgs_Closure)
                 (const GuestfsSetE2uuidArgs *message,
                  void *closure_data);
typedef void (*GuestfsGetE2uuidArgs_Closure)
                 (const GuestfsGetE2uuidArgs *message,
                  void *closure_data);
typedef void (*GuestfsGetE2uuidRet_Closure)
                 (const GuestfsGetE2uuidRet *message,
                  void *closure_data);
typedef void (*GuestfsFsckArgs_Closure)
                 (const GuestfsFsckArgs *message,
                  void *closure_data);
typedef void (*GuestfsFsckRet_Closure)
                 (const GuestfsFsckRet *message,
                  void *closure_data);
typedef void (*GuestfsZeroArgs_Closure)
                 (const GuestfsZeroArgs *message,
                  void *closure_data);
typedef void (*GuestfsGrubInstallArgs_Closure)
                 (const GuestfsGrubInstallArgs *message,
                  void *closure_data);
typedef void (*GuestfsCpArgs_Closure)
                 (const GuestfsCpArgs *message,
                  void *closure_data);
typedef void (*GuestfsCpAaArgs_Closure)
                 (const GuestfsCpAaArgs *message,
                  void *closure_data);
typedef void (*GuestfsMvArgs_Closure)
                 (const GuestfsMvArgs *message,
                  void *closure_data);
typedef void (*GuestfsDropCachesArgs_Closure)
                 (const GuestfsDropCachesArgs *message,
                  void *closure_data);
typedef void (*GuestfsDmesgRet_Closure)
                 (const GuestfsDmesgRet *message,
                  void *closure_data);
typedef void (*GuestfsEqualArgs_Closure)
                 (const GuestfsEqualArgs *message,
                  void *closure_data);
typedef void (*GuestfsEqualRet_Closure)
                 (const GuestfsEqualRet *message,
                  void *closure_data);
typedef void (*GuestfsStringsArgs_Closure)
                 (const GuestfsStringsArgs *message,
                  void *closure_data);
typedef void (*GuestfsStringsRet_Closure)
                 (const GuestfsStringsRet *message,
                  void *closure_data);
typedef void (*GuestfsStringsEeArgs_Closure)
                 (const GuestfsStringsEeArgs *message,
                  void *closure_data);
typedef void (*GuestfsStringsEeRet_Closure)
                 (const GuestfsStringsEeRet *message,
                  void *closure_data);
typedef void (*GuestfsHexdumpArgs_Closure)
                 (const GuestfsHexdumpArgs *message,
                  void *closure_data);
typedef void (*GuestfsHexdumpRet_Closure)
                 (const GuestfsHexdumpRet *message,
                  void *closure_data);
typedef void (*GuestfsZerofreeArgs_Closure)
                 (const GuestfsZerofreeArgs *message,
                  void *closure_data);
typedef void (*GuestfsPvresizeArgs_Closure)
                 (const GuestfsPvresizeArgs *message,
                  void *closure_data);
typedef void (*GuestfsSfdiskNnArgs_Closure)
                 (const GuestfsSfdiskNnArgs *message,
                  void *closure_data);
typedef void (*GuestfsSfdisklArgs_Closure)
                 (const GuestfsSfdisklArgs *message,
                  void *closure_data);
typedef void (*GuestfsSfdisklRet_Closure)
                 (const GuestfsSfdisklRet *message,
                  void *closure_data);
typedef void (*GuestfsSfdiskKernelGeometryArgs_Closure)
                 (const GuestfsSfdiskKernelGeometryArgs *message,
                  void *closure_data);
typedef void (*GuestfsSfdiskKernelGeometryRet_Closure)
                 (const GuestfsSfdiskKernelGeometryRet *message,
                  void *closure_data);
typedef void (*GuestfsSfdiskDiskGeometryArgs_Closure)
                 (const GuestfsSfdiskDiskGeometryArgs *message,
                  void *closure_data);
typedef void (*GuestfsSfdiskDiskGeometryRet_Closure)
                 (const GuestfsSfdiskDiskGeometryRet *message,
                  void *closure_data);
typedef void (*GuestfsVgActivateAllArgs_Closure)
                 (const GuestfsVgActivateAllArgs *message,
                  void *closure_data);
typedef void (*GuestfsVgActivateArgs_Closure)
                 (const GuestfsVgActivateArgs *message,
                  void *closure_data);
typedef void (*GuestfsLvresizeArgs_Closure)
                 (const GuestfsLvresizeArgs *message,
                  void *closure_data);
typedef void (*GuestfsResize2fsArgs_Closure)
                 (const GuestfsResize2fsArgs *message,
                  void *closure_data);
typedef void (*GuestfsE2fsckFfArgs_Closure)
                 (const GuestfsE2fsckFfArgs *message,
                  void *closure_data);
typedef void (*GuestfsSleepArgs_Closure)
                 (const GuestfsSleepArgs *message,
                  void *closure_data);
typedef void (*GuestfsNtfs3gprobeArgs_Closure)
                 (const GuestfsNtfs3gprobeArgs *message,
                  void *closure_data);
typedef void (*GuestfsNtfs3gprobeRet_Closure)
                 (const GuestfsNtfs3gprobeRet *message,
                  void *closure_data);
typedef void (*GuestfsShArgs_Closure)
                 (const GuestfsShArgs *message,
                  void *closure_data);
typedef void (*GuestfsShRet_Closure)
                 (const GuestfsShRet *message,
                  void *closure_data);
typedef void (*GuestfsShLinesArgs_Closure)
                 (const GuestfsShLinesArgs *message,
                  void *closure_data);
typedef void (*GuestfsShLinesRet_Closure)
                 (const GuestfsShLinesRet *message,
                  void *closure_data);
typedef void (*GuestfsGlobExpandArgs_Closure)
                 (const GuestfsGlobExpandArgs *message,
                  void *closure_data);
typedef void (*GuestfsGlobExpandRet_Closure)
                 (const GuestfsGlobExpandRet *message,
                  void *closure_data);
typedef void (*GuestfsScrubDeviceArgs_Closure)
                 (const GuestfsScrubDeviceArgs *message,
                  void *closure_data);
typedef void (*GuestfsScrubFileArgs_Closure)
                 (const GuestfsScrubFileArgs *message,
                  void *closure_data);
typedef void (*GuestfsScrubFreespaceArgs_Closure)
                 (const GuestfsScrubFreespaceArgs *message,
                  void *closure_data);
typedef void (*GuestfsMkdtempArgs_Closure)
                 (const GuestfsMkdtempArgs *message,
                  void *closure_data);
typedef void (*GuestfsMkdtempRet_Closure)
                 (const GuestfsMkdtempRet *message,
                  void *closure_data);
typedef void (*GuestfsWclArgs_Closure)
                 (const GuestfsWclArgs *message,
                  void *closure_data);
typedef void (*GuestfsWclRet_Closure)
                 (const GuestfsWclRet *message,
                  void *closure_data);
typedef void (*GuestfsWcwArgs_Closure)
                 (const GuestfsWcwArgs *message,
                  void *closure_data);
typedef void (*GuestfsWcwRet_Closure)
                 (const GuestfsWcwRet *message,
                  void *closure_data);
typedef void (*GuestfsWccArgs_Closure)
                 (const GuestfsWccArgs *message,
                  void *closure_data);
typedef void (*GuestfsWccRet_Closure)
                 (const GuestfsWccRet *message,
                  void *closure_data);
typedef void (*GuestfsHeadArgs_Closure)
                 (const GuestfsHeadArgs *message,
                  void *closure_data);
typedef void (*GuestfsHeadRet_Closure)
                 (const GuestfsHeadRet *message,
                  void *closure_data);
typedef void (*GuestfsHeadNnArgs_Closure)
                 (const GuestfsHeadNnArgs *message,
                  void *closure_data);
typedef void (*GuestfsHeadNnRet_Closure)
                 (const GuestfsHeadNnRet *message,
                  void *closure_data);
typedef void (*GuestfsTailArgs_Closure)
                 (const GuestfsTailArgs *message,
                  void *closure_data);
typedef void (*GuestfsTailRet_Closure)
                 (const GuestfsTailRet *message,
                  void *closure_data);
typedef void (*GuestfsTailNnArgs_Closure)
                 (const GuestfsTailNnArgs *message,
                  void *closure_data);
typedef void (*GuestfsTailNnRet_Closure)
                 (const GuestfsTailNnRet *message,
                  void *closure_data);
typedef void (*GuestfsDfRet_Closure)
                 (const GuestfsDfRet *message,
                  void *closure_data);
typedef void (*GuestfsDfhRet_Closure)
                 (const GuestfsDfhRet *message,
                  void *closure_data);
typedef void (*GuestfsDuArgs_Closure)
                 (const GuestfsDuArgs *message,
                  void *closure_data);
typedef void (*GuestfsDuRet_Closure)
                 (const GuestfsDuRet *message,
                  void *closure_data);
typedef void (*GuestfsInitrdListArgs_Closure)
                 (const GuestfsInitrdListArgs *message,
                  void *closure_data);
typedef void (*GuestfsInitrdListRet_Closure)
                 (const GuestfsInitrdListRet *message,
                  void *closure_data);
typedef void (*GuestfsMountLoopArgs_Closure)
                 (const GuestfsMountLoopArgs *message,
                  void *closure_data);
typedef void (*GuestfsMkswapArgs_Closure)
                 (const GuestfsMkswapArgs *message,
                  void *closure_data);
typedef void (*GuestfsMkswapLlArgs_Closure)
                 (const GuestfsMkswapLlArgs *message,
                  void *closure_data);
typedef void (*GuestfsMkswapUuArgs_Closure)
                 (const GuestfsMkswapUuArgs *message,
                  void *closure_data);
typedef void (*GuestfsMknodArgs_Closure)
                 (const GuestfsMknodArgs *message,
                  void *closure_data);
typedef void (*GuestfsMkfifoArgs_Closure)
                 (const GuestfsMkfifoArgs *message,
                  void *closure_data);
typedef void (*GuestfsMknodBbArgs_Closure)
                 (const GuestfsMknodBbArgs *message,
                  void *closure_data);
typedef void (*GuestfsMknodCcArgs_Closure)
                 (const GuestfsMknodCcArgs *message,
                  void *closure_data);
typedef void (*GuestfsUmaskArgs_Closure)
                 (const GuestfsUmaskArgs *message,
                  void *closure_data);
typedef void (*GuestfsUmaskRet_Closure)
                 (const GuestfsUmaskRet *message,
                  void *closure_data);
typedef void (*GuestfsReaddirArgs_Closure)
                 (const GuestfsReaddirArgs *message,
                  void *closure_data);
typedef void (*GuestfsReaddirRet_Closure)
                 (const GuestfsReaddirRet *message,
                  void *closure_data);
typedef void (*GuestfsSfdiskmArgs_Closure)
                 (const GuestfsSfdiskmArgs *message,
                  void *closure_data);
typedef void (*GuestfsZfileArgs_Closure)
                 (const GuestfsZfileArgs *message,
                  void *closure_data);
typedef void (*GuestfsZfileRet_Closure)
                 (const GuestfsZfileRet *message,
                  void *closure_data);
typedef void (*GuestfsGetxattrsArgs_Closure)
                 (const GuestfsGetxattrsArgs *message,
                  void *closure_data);
typedef void (*GuestfsGetxattrsRet_Closure)
                 (const GuestfsGetxattrsRet *message,
                  void *closure_data);
typedef void (*GuestfsLgetxattrsArgs_Closure)
                 (const GuestfsLgetxattrsArgs *message,
                  void *closure_data);
typedef void (*GuestfsLgetxattrsRet_Closure)
                 (const GuestfsLgetxattrsRet *message,
                  void *closure_data);
typedef void (*GuestfsSetxattrArgs_Closure)
                 (const GuestfsSetxattrArgs *message,
                  void *closure_data);
typedef void (*GuestfsLsetxattrArgs_Closure)
                 (const GuestfsLsetxattrArgs *message,
                  void *closure_data);
typedef void (*GuestfsRemovexattrArgs_Closure)
                 (const GuestfsRemovexattrArgs *message,
                  void *closure_data);
typedef void (*GuestfsLremovexattrArgs_Closure)
                 (const GuestfsLremovexattrArgs *message,
                  void *closure_data);
typedef void (*GuestfsMountpointsRet_Closure)
                 (const GuestfsMountpointsRet *message,
                  void *closure_data);
typedef void (*GuestfsMkmountpointArgs_Closure)
                 (const GuestfsMkmountpointArgs *message,
                  void *closure_data);
typedef void (*GuestfsRmmountpointArgs_Closure)
                 (const GuestfsRmmountpointArgs *message,
                  void *closure_data);
typedef void (*GuestfsGrepArgs_Closure)
                 (const GuestfsGrepArgs *message,
                  void *closure_data);
typedef void (*GuestfsGrepRet_Closure)
                 (const GuestfsGrepRet *message,
                  void *closure_data);
typedef void (*GuestfsEgrepArgs_Closure)
                 (const GuestfsEgrepArgs *message,
                  void *closure_data);
typedef void (*GuestfsEgrepRet_Closure)
                 (const GuestfsEgrepRet *message,
                  void *closure_data);
typedef void (*GuestfsFgrepArgs_Closure)
                 (const GuestfsFgrepArgs *message,
                  void *closure_data);
typedef void (*GuestfsFgrepRet_Closure)
                 (const GuestfsFgrepRet *message,
                  void *closure_data);
typedef void (*GuestfsGrepiArgs_Closure)
                 (const GuestfsGrepiArgs *message,
                  void *closure_data);
typedef void (*GuestfsGrepiRet_Closure)
                 (const GuestfsGrepiRet *message,
                  void *closure_data);
typedef void (*GuestfsEgrepiArgs_Closure)
                 (const GuestfsEgrepiArgs *message,
                  void *closure_data);
typedef void (*GuestfsEgrepiRet_Closure)
                 (const GuestfsEgrepiRet *message,
                  void *closure_data);
typedef void (*GuestfsFgrepiArgs_Closure)
                 (const GuestfsFgrepiArgs *message,
                  void *closure_data);
typedef void (*GuestfsFgrepiRet_Closure)
                 (const GuestfsFgrepiRet *message,
                  void *closure_data);
typedef void (*GuestfsZgrepArgs_Closure)
                 (const GuestfsZgrepArgs *message,
                  void *closure_data);
typedef void (*GuestfsZgrepRet_Closure)
                 (const GuestfsZgrepRet *message,
                  void *closure_data);
typedef void (*GuestfsZegrepArgs_Closure)
                 (const GuestfsZegrepArgs *message,
                  void *closure_data);
typedef void (*GuestfsZegrepRet_Closure)
                 (const GuestfsZegrepRet *message,
                  void *closure_data);
typedef void (*GuestfsZfgrepArgs_Closure)
                 (const GuestfsZfgrepArgs *message,
                  void *closure_data);
typedef void (*GuestfsZfgrepRet_Closure)
                 (const GuestfsZfgrepRet *message,
                  void *closure_data);
typedef void (*GuestfsZgrepiArgs_Closure)
                 (const GuestfsZgrepiArgs *message,
                  void *closure_data);
typedef void (*GuestfsZgrepiRet_Closure)
                 (const GuestfsZgrepiRet *message,
                  void *closure_data);
typedef void (*GuestfsZegrepiArgs_Closure)
                 (const GuestfsZegrepiArgs *message,
                  void *closure_data);
typedef void (*GuestfsZegrepiRet_Closure)
                 (const GuestfsZegrepiRet *message,
                  void *closure_data);
typedef void (*GuestfsZfgrepiArgs_Closure)
                 (const GuestfsZfgrepiArgs *message,
                  void *closure_data);
typedef void (*GuestfsZfgrepiRet_Closure)
                 (const GuestfsZfgrepiRet *message,
                  void *closure_data);
typedef void (*GuestfsRealpathArgs_Closure)
                 (const GuestfsRealpathArgs *message,
                  void *closure_data);
typedef void (*GuestfsRealpathRet_Closure)
                 (const GuestfsRealpathRet *message,
                  void *closure_data);
typedef void (*GuestfsLnArgs_Closure)
                 (const GuestfsLnArgs *message,
                  void *closure_data);
typedef void (*GuestfsLnfArgs_Closure)
                 (const GuestfsLnfArgs *message,
                  void *closure_data);
typedef void (*GuestfsLnsArgs_Closure)
                 (const GuestfsLnsArgs *message,
                  void *closure_data);
typedef void (*GuestfsLnSfArgs_Closure)
                 (const GuestfsLnSfArgs *message,
                  void *closure_data);
typedef void (*GuestfsReadlinkArgs_Closure)
                 (const GuestfsReadlinkArgs *message,
                  void *closure_data);
typedef void (*GuestfsReadlinkRet_Closure)
                 (const GuestfsReadlinkRet *message,
                  void *closure_data);
typedef void (*GuestfsFallocateArgs_Closure)
                 (const GuestfsFallocateArgs *message,
                  void *closure_data);
typedef void (*GuestfsSwaponDeviceArgs_Closure)
                 (const GuestfsSwaponDeviceArgs *message,
                  void *closure_data);
typedef void (*GuestfsSwapoffDeviceArgs_Closure)
                 (const GuestfsSwapoffDeviceArgs *message,
                  void *closure_data);
typedef void (*GuestfsSwaponFileArgs_Closure)
                 (const GuestfsSwaponFileArgs *message,
                  void *closure_data);
typedef void (*GuestfsSwapoffFileArgs_Closure)
                 (const GuestfsSwapoffFileArgs *message,
                  void *closure_data);
typedef void (*GuestfsSwaponLabelArgs_Closure)
                 (const GuestfsSwaponLabelArgs *message,
                  void *closure_data);
typedef void (*GuestfsSwapoffLabelArgs_Closure)
                 (const GuestfsSwapoffLabelArgs *message,
                  void *closure_data);
typedef void (*GuestfsSwaponUuidArgs_Closure)
                 (const GuestfsSwaponUuidArgs *message,
                  void *closure_data);
typedef void (*GuestfsSwapoffUuidArgs_Closure)
                 (const GuestfsSwapoffUuidArgs *message,
                  void *closure_data);
typedef void (*GuestfsMkswapFileArgs_Closure)
                 (const GuestfsMkswapFileArgs *message,
                  void *closure_data);
typedef void (*GuestfsInotifyInitArgs_Closure)
                 (const GuestfsInotifyInitArgs *message,
                  void *closure_data);
typedef void (*GuestfsInotifyAddWatchArgs_Closure)
                 (const GuestfsInotifyAddWatchArgs *message,
                  void *closure_data);
typedef void (*GuestfsInotifyAddWatchRet_Closure)
                 (const GuestfsInotifyAddWatchRet *message,
                  void *closure_data);
typedef void (*GuestfsInotifyRmWatchArgs_Closure)
                 (const GuestfsInotifyRmWatchArgs *message,
                  void *closure_data);
typedef void (*GuestfsInotifyReadRet_Closure)
                 (const GuestfsInotifyReadRet *message,
                  void *closure_data);
typedef void (*GuestfsInotifyFilesRet_Closure)
                 (const GuestfsInotifyFilesRet *message,
                  void *closure_data);
typedef void (*GuestfsSetconArgs_Closure)
                 (const GuestfsSetconArgs *message,
                  void *closure_data);
typedef void (*GuestfsGetconRet_Closure)
                 (const GuestfsGetconRet *message,
                  void *closure_data);
typedef void (*GuestfsMkfsBbArgs_Closure)
                 (const GuestfsMkfsBbArgs *message,
                  void *closure_data);
typedef void (*GuestfsMke2journalArgs_Closure)
                 (const GuestfsMke2journalArgs *message,
                  void *closure_data);
typedef void (*GuestfsMke2journalLlArgs_Closure)
                 (const GuestfsMke2journalLlArgs *message,
                  void *closure_data);
typedef void (*GuestfsMke2journalUuArgs_Closure)
                 (const GuestfsMke2journalUuArgs *message,
                  void *closure_data);
typedef void (*GuestfsMke2fsJjArgs_Closure)
                 (const GuestfsMke2fsJjArgs *message,
                  void *closure_data);
typedef void (*GuestfsMke2fsJlArgs_Closure)
                 (const GuestfsMke2fsJlArgs *message,
                  void *closure_data);
typedef void (*GuestfsMke2fsJuArgs_Closure)
                 (const GuestfsMke2fsJuArgs *message,
                  void *closure_data);
typedef void (*GuestfsModprobeArgs_Closure)
                 (const GuestfsModprobeArgs *message,
                  void *closure_data);
typedef void (*GuestfsEchoDaemonArgs_Closure)
                 (const GuestfsEchoDaemonArgs *message,
                  void *closure_data);
typedef void (*GuestfsEchoDaemonRet_Closure)
                 (const GuestfsEchoDaemonRet *message,
                  void *closure_data);
typedef void (*GuestfsFind0Args_Closure)
                 (const GuestfsFind0Args *message,
                  void *closure_data);
typedef void (*GuestfsCaseSensitivePathArgs_Closure)
                 (const GuestfsCaseSensitivePathArgs *message,
                  void *closure_data);
typedef void (*GuestfsCaseSensitivePathRet_Closure)
                 (const GuestfsCaseSensitivePathRet *message,
                  void *closure_data);
typedef void (*GuestfsVfsTypeArgs_Closure)
                 (const GuestfsVfsTypeArgs *message,
                  void *closure_data);
typedef void (*GuestfsVfsTypeRet_Closure)
                 (const GuestfsVfsTypeRet *message,
                  void *closure_data);
typedef void (*GuestfsTruncateArgs_Closure)
                 (const GuestfsTruncateArgs *message,
                  void *closure_data);
typedef void (*GuestfsTruncateSizeArgs_Closure)
                 (const GuestfsTruncateSizeArgs *message,
                  void *closure_data);
typedef void (*GuestfsUtimensArgs_Closure)
                 (const GuestfsUtimensArgs *message,
                  void *closure_data);
typedef void (*GuestfsMkdirModeArgs_Closure)
                 (const GuestfsMkdirModeArgs *message,
                  void *closure_data);
typedef void (*GuestfsLchownArgs_Closure)
                 (const GuestfsLchownArgs *message,
                  void *closure_data);
typedef void (*GuestfsInternalLxattrlistArgs_Closure)
                 (const GuestfsInternalLxattrlistArgs *message,
                  void *closure_data);
typedef void (*GuestfsInternalLxattrlistRet_Closure)
                 (const GuestfsInternalLxattrlistRet *message,
                  void *closure_data);
typedef void (*GuestfsInternalReadlinklistArgs_Closure)
                 (const GuestfsInternalReadlinklistArgs *message,
                  void *closure_data);
typedef void (*GuestfsInternalReadlinklistRet_Closure)
                 (const GuestfsInternalReadlinklistRet *message,
                  void *closure_data);
typedef void (*GuestfsPreadArgs_Closure)
                 (const GuestfsPreadArgs *message,
                  void *closure_data);
typedef void (*GuestfsPreadRet_Closure)
                 (const GuestfsPreadRet *message,
                  void *closure_data);
typedef void (*GuestfsPartInitArgs_Closure)
                 (const GuestfsPartInitArgs *message,
                  void *closure_data);
typedef void (*GuestfsPartAddArgs_Closure)
                 (const GuestfsPartAddArgs *message,
                  void *closure_data);
typedef void (*GuestfsPartDiskArgs_Closure)
                 (const GuestfsPartDiskArgs *message,
                  void *closure_data);
typedef void (*GuestfsPartSetBootableArgs_Closure)
                 (const GuestfsPartSetBootableArgs *message,
                  void *closure_data);
typedef void (*GuestfsPartSetNameArgs_Closure)
                 (const GuestfsPartSetNameArgs *message,
                  void *closure_data);
typedef void (*GuestfsPartListArgs_Closure)
                 (const GuestfsPartListArgs *message,
                  void *closure_data);
typedef void (*GuestfsPartListRet_Closure)
                 (const GuestfsPartListRet *message,
                  void *closure_data);
typedef void (*GuestfsPartGetParttypeArgs_Closure)
                 (const GuestfsPartGetParttypeArgs *message,
                  void *closure_data);
typedef void (*GuestfsPartGetParttypeRet_Closure)
                 (const GuestfsPartGetParttypeRet *message,
                  void *closure_data);
typedef void (*GuestfsFillArgs_Closure)
                 (const GuestfsFillArgs *message,
                  void *closure_data);
typedef void (*GuestfsAvailableArgs_Closure)
                 (const GuestfsAvailableArgs *message,
                  void *closure_data);
typedef void (*GuestfsDdArgs_Closure)
                 (const GuestfsDdArgs *message,
                  void *closure_data);
typedef void (*GuestfsFilesizeArgs_Closure)
                 (const GuestfsFilesizeArgs *message,
                  void *closure_data);
typedef void (*GuestfsFilesizeRet_Closure)
                 (const GuestfsFilesizeRet *message,
                  void *closure_data);
typedef void (*GuestfsLvrenameArgs_Closure)
                 (const GuestfsLvrenameArgs *message,
                  void *closure_data);
typedef void (*GuestfsVgrenameArgs_Closure)
                 (const GuestfsVgrenameArgs *message,
                  void *closure_data);
typedef void (*GuestfsInitrdCatArgs_Closure)
                 (const GuestfsInitrdCatArgs *message,
                  void *closure_data);
typedef void (*GuestfsInitrdCatRet_Closure)
                 (const GuestfsInitrdCatRet *message,
                  void *closure_data);
typedef void (*GuestfsPvuuidArgs_Closure)
                 (const GuestfsPvuuidArgs *message,
                  void *closure_data);
typedef void (*GuestfsPvuuidRet_Closure)
                 (const GuestfsPvuuidRet *message,
                  void *closure_data);
typedef void (*GuestfsVguuidArgs_Closure)
                 (const GuestfsVguuidArgs *message,
                  void *closure_data);
typedef void (*GuestfsVguuidRet_Closure)
                 (const GuestfsVguuidRet *message,
                  void *closure_data);
typedef void (*GuestfsLvuuidArgs_Closure)
                 (const GuestfsLvuuidArgs *message,
                  void *closure_data);
typedef void (*GuestfsLvuuidRet_Closure)
                 (const GuestfsLvuuidRet *message,
                  void *closure_data);
typedef void (*GuestfsVgpvuuidsArgs_Closure)
                 (const GuestfsVgpvuuidsArgs *message,
                  void *closure_data);
typedef void (*GuestfsVgpvuuidsRet_Closure)
                 (const GuestfsVgpvuuidsRet *message,
                  void *closure_data);
typedef void (*GuestfsVglvuuidsArgs_Closure)
                 (const GuestfsVglvuuidsArgs *message,
                  void *closure_data);
typedef void (*GuestfsVglvuuidsRet_Closure)
                 (const GuestfsVglvuuidsRet *message,
                  void *closure_data);
typedef void (*GuestfsCopySizeArgs_Closure)
                 (const GuestfsCopySizeArgs *message,
                  void *closure_data);
typedef void (*GuestfsZeroDeviceArgs_Closure)
                 (const GuestfsZeroDeviceArgs *message,
                  void *closure_data);
typedef void (*GuestfsTxzInArgs_Closure)
                 (const GuestfsTxzInArgs *message,
                  void *closure_data);
typedef void (*GuestfsTxzOutArgs_Closure)
                 (const GuestfsTxzOutArgs *message,
                  void *closure_data);
typedef void (*GuestfsPartDelArgs_Closure)
                 (const GuestfsPartDelArgs *message,
                  void *closure_data);
typedef void (*GuestfsPartGetBootableArgs_Closure)
                 (const GuestfsPartGetBootableArgs *message,
                  void *closure_data);
typedef void (*GuestfsPartGetBootableRet_Closure)
                 (const GuestfsPartGetBootableRet *message,
                  void *closure_data);
typedef void (*GuestfsPartGetMbrIdArgs_Closure)
                 (const GuestfsPartGetMbrIdArgs *message,
                  void *closure_data);
typedef void (*GuestfsPartGetMbrIdRet_Closure)
                 (const GuestfsPartGetMbrIdRet *message,
                  void *closure_data);
typedef void (*GuestfsPartSetMbrIdArgs_Closure)
                 (const GuestfsPartSetMbrIdArgs *message,
                  void *closure_data);
typedef void (*GuestfsChecksumDeviceArgs_Closure)
                 (const GuestfsChecksumDeviceArgs *message,
                  void *closure_data);
typedef void (*GuestfsChecksumDeviceRet_Closure)
                 (const GuestfsChecksumDeviceRet *message,
                  void *closure_data);
typedef void (*GuestfsLvresizeFreeArgs_Closure)
                 (const GuestfsLvresizeFreeArgs *message,
                  void *closure_data);
typedef void (*GuestfsAugClearArgs_Closure)
                 (const GuestfsAugClearArgs *message,
                  void *closure_data);
typedef void (*GuestfsGetUmaskRet_Closure)
                 (const GuestfsGetUmaskRet *message,
                  void *closure_data);
typedef void (*GuestfsDebugUploadArgs_Closure)
                 (const GuestfsDebugUploadArgs *message,
                  void *closure_data);
typedef void (*GuestfsBase64InArgs_Closure)
                 (const GuestfsBase64InArgs *message,
                  void *closure_data);
typedef void (*GuestfsBase64OutArgs_Closure)
                 (const GuestfsBase64OutArgs *message,
                  void *closure_data);
typedef void (*GuestfsChecksumsOutArgs_Closure)
                 (const GuestfsChecksumsOutArgs *message,
                  void *closure_data);
typedef void (*GuestfsFillPatternArgs_Closure)
                 (const GuestfsFillPatternArgs *message,
                  void *closure_data);
typedef void (*GuestfsInternalWriteArgs_Closure)
                 (const GuestfsInternalWriteArgs *message,
                  void *closure_data);
typedef void (*GuestfsPwriteArgs_Closure)
                 (const GuestfsPwriteArgs *message,
                  void *closure_data);
typedef void (*GuestfsPwriteRet_Closure)
                 (const GuestfsPwriteRet *message,
                  void *closure_data);
typedef void (*GuestfsResize2fsSizeArgs_Closure)
                 (const GuestfsResize2fsSizeArgs *message,
                  void *closure_data);
typedef void (*GuestfsPvresizeSizeArgs_Closure)
                 (const GuestfsPvresizeSizeArgs *message,
                  void *closure_data);
typedef void (*GuestfsNtfsresizeSizeArgs_Closure)
                 (const GuestfsNtfsresizeSizeArgs *message,
                  void *closure_data);
typedef void (*GuestfsAvailableAllGroupsRet_Closure)
                 (const GuestfsAvailableAllGroupsRet *message,
                  void *closure_data);
typedef void (*GuestfsFallocate64Args_Closure)
                 (const GuestfsFallocate64Args *message,
                  void *closure_data);
typedef void (*GuestfsVfsLabelArgs_Closure)
                 (const GuestfsVfsLabelArgs *message,
                  void *closure_data);
typedef void (*GuestfsVfsLabelRet_Closure)
                 (const GuestfsVfsLabelRet *message,
                  void *closure_data);
typedef void (*GuestfsVfsUuidArgs_Closure)
                 (const GuestfsVfsUuidArgs *message,
                  void *closure_data);
typedef void (*GuestfsVfsUuidRet_Closure)
                 (const GuestfsVfsUuidRet *message,
                  void *closure_data);
typedef void (*GuestfsLvmSetFilterArgs_Closure)
                 (const GuestfsLvmSetFilterArgs *message,
                  void *closure_data);
typedef void (*GuestfsLuksOpenArgs_Closure)
                 (const GuestfsLuksOpenArgs *message,
                  void *closure_data);
typedef void (*GuestfsLuksOpenRoArgs_Closure)
                 (const GuestfsLuksOpenRoArgs *message,
                  void *closure_data);
typedef void (*GuestfsLuksCloseArgs_Closure)
                 (const GuestfsLuksCloseArgs *message,
                  void *closure_data);
typedef void (*GuestfsLuksFormatArgs_Closure)
                 (const GuestfsLuksFormatArgs *message,
                  void *closure_data);
typedef void (*GuestfsLuksFormatCipherArgs_Closure)
                 (const GuestfsLuksFormatCipherArgs *message,
                  void *closure_data);
typedef void (*GuestfsLuksAddKeyArgs_Closure)
                 (const GuestfsLuksAddKeyArgs *message,
                  void *closure_data);
typedef void (*GuestfsLuksKillSlotArgs_Closure)
                 (const GuestfsLuksKillSlotArgs *message,
                  void *closure_data);
typedef void (*GuestfsIsLvArgs_Closure)
                 (const GuestfsIsLvArgs *message,
                  void *closure_data);
typedef void (*GuestfsIsLvRet_Closure)
                 (const GuestfsIsLvRet *message,
                  void *closure_data);
typedef void (*GuestfsFindfsUuidArgs_Closure)
                 (const GuestfsFindfsUuidArgs *message,
                  void *closure_data);
typedef void (*GuestfsFindfsUuidRet_Closure)
                 (const GuestfsFindfsUuidRet *message,
                  void *closure_data);
typedef void (*GuestfsFindfsLabelArgs_Closure)
                 (const GuestfsFindfsLabelArgs *message,
                  void *closure_data);
typedef void (*GuestfsFindfsLabelRet_Closure)
                 (const GuestfsFindfsLabelRet *message,
                  void *closure_data);
typedef void (*GuestfsIsChardevArgs_Closure)
                 (const GuestfsIsChardevArgs *message,
                  void *closure_data);
typedef void (*GuestfsIsChardevRet_Closure)
                 (const GuestfsIsChardevRet *message,
                  void *closure_data);
typedef void (*GuestfsIsBlockdevArgs_Closure)
                 (const GuestfsIsBlockdevArgs *message,
                  void *closure_data);
typedef void (*GuestfsIsBlockdevRet_Closure)
                 (const GuestfsIsBlockdevRet *message,
                  void *closure_data);
typedef void (*GuestfsIsFifoArgs_Closure)
                 (const GuestfsIsFifoArgs *message,
                  void *closure_data);
typedef void (*GuestfsIsFifoRet_Closure)
                 (const GuestfsIsFifoRet *message,
                  void *closure_data);
typedef void (*GuestfsIsSymlinkArgs_Closure)
                 (const GuestfsIsSymlinkArgs *message,
                  void *closure_data);
typedef void (*GuestfsIsSymlinkRet_Closure)
                 (const GuestfsIsSymlinkRet *message,
                  void *closure_data);
typedef void (*GuestfsIsSocketArgs_Closure)
                 (const GuestfsIsSocketArgs *message,
                  void *closure_data);
typedef void (*GuestfsIsSocketRet_Closure)
                 (const GuestfsIsSocketRet *message,
                  void *closure_data);
typedef void (*GuestfsPartToDevArgs_Closure)
                 (const GuestfsPartToDevArgs *message,
                  void *closure_data);
typedef void (*GuestfsPartToDevRet_Closure)
                 (const GuestfsPartToDevRet *message,
                  void *closure_data);
typedef void (*GuestfsUploadOffsetArgs_Closure)
                 (const GuestfsUploadOffsetArgs *message,
                  void *closure_data);
typedef void (*GuestfsDownloadOffsetArgs_Closure)
                 (const GuestfsDownloadOffsetArgs *message,
                  void *closure_data);
typedef void (*GuestfsPwriteDeviceArgs_Closure)
                 (const GuestfsPwriteDeviceArgs *message,
                  void *closure_data);
typedef void (*GuestfsPwriteDeviceRet_Closure)
                 (const GuestfsPwriteDeviceRet *message,
                  void *closure_data);
typedef void (*GuestfsPreadDeviceArgs_Closure)
                 (const GuestfsPreadDeviceArgs *message,
                  void *closure_data);
typedef void (*GuestfsPreadDeviceRet_Closure)
                 (const GuestfsPreadDeviceRet *message,
                  void *closure_data);
typedef void (*GuestfsLvmCanonicalLvNameArgs_Closure)
                 (const GuestfsLvmCanonicalLvNameArgs *message,
                  void *closure_data);
typedef void (*GuestfsLvmCanonicalLvNameRet_Closure)
                 (const GuestfsLvmCanonicalLvNameRet *message,
                  void *closure_data);
typedef void (*GuestfsMkfsArgs_Closure)
                 (const GuestfsMkfsArgs *message,
                  void *closure_data);
typedef void (*GuestfsGetxattrArgs_Closure)
                 (const GuestfsGetxattrArgs *message,
                  void *closure_data);
typedef void (*GuestfsGetxattrRet_Closure)
                 (const GuestfsGetxattrRet *message,
                  void *closure_data);
typedef void (*GuestfsLgetxattrArgs_Closure)
                 (const GuestfsLgetxattrArgs *message,
                  void *closure_data);
typedef void (*GuestfsLgetxattrRet_Closure)
                 (const GuestfsLgetxattrRet *message,
                  void *closure_data);
typedef void (*GuestfsResize2fsmArgs_Closure)
                 (const GuestfsResize2fsmArgs *message,
                  void *closure_data);
typedef void (*GuestfsIsZeroArgs_Closure)
                 (const GuestfsIsZeroArgs *message,
                  void *closure_data);
typedef void (*GuestfsIsZeroRet_Closure)
                 (const GuestfsIsZeroRet *message,
                  void *closure_data);
typedef void (*GuestfsIsZeroDeviceArgs_Closure)
                 (const GuestfsIsZeroDeviceArgs *message,
                  void *closure_data);
typedef void (*GuestfsIsZeroDeviceRet_Closure)
                 (const GuestfsIsZeroDeviceRet *message,
                  void *closure_data);
typedef void (*GuestfsList9pRet_Closure)
                 (const GuestfsList9pRet *message,
                  void *closure_data);
typedef void (*GuestfsMount9pArgs_Closure)
                 (const GuestfsMount9pArgs *message,
                  void *closure_data);
typedef void (*GuestfsListDmDevicesRet_Closure)
                 (const GuestfsListDmDevicesRet *message,
                  void *closure_data);
typedef void (*GuestfsNTFSResizeArgs_Closure)
                 (const GuestfsNTFSResizeArgs *message,
                  void *closure_data);
typedef void (*GuestfsBtrfsFilesystemResizeArgs_Closure)
                 (const GuestfsBtrfsFilesystemResizeArgs *message,
                  void *closure_data);
typedef void (*GuestfsInternalWriteAppendArgs_Closure)
                 (const GuestfsInternalWriteAppendArgs *message,
                  void *closure_data);
typedef void (*GuestfsCompressOutArgs_Closure)
                 (const GuestfsCompressOutArgs *message,
                  void *closure_data);
typedef void (*GuestfsCompressDeviceOutArgs_Closure)
                 (const GuestfsCompressDeviceOutArgs *message,
                  void *closure_data);
typedef void (*GuestfsPartToPartnumArgs_Closure)
                 (const GuestfsPartToPartnumArgs *message,
                  void *closure_data);
typedef void (*GuestfsPartToPartnumRet_Closure)
                 (const GuestfsPartToPartnumRet *message,
                  void *closure_data);
typedef void (*GuestfsCopyDeviceToDeviceArgs_Closure)
                 (const GuestfsCopyDeviceToDeviceArgs *message,
                  void *closure_data);
typedef void (*GuestfsCopyDeviceToFileArgs_Closure)
                 (const GuestfsCopyDeviceToFileArgs *message,
                  void *closure_data);
typedef void (*GuestfsCopyFileToDeviceArgs_Closure)
                 (const GuestfsCopyFileToDeviceArgs *message,
                  void *closure_data);
typedef void (*GuestfsCopyFileToFileArgs_Closure)
                 (const GuestfsCopyFileToFileArgs *message,
                  void *closure_data);
typedef void (*GuestfsTune2fsArgs_Closure)
                 (const GuestfsTune2fsArgs *message,
                  void *closure_data);
typedef void (*GuestfsMdCreateArgs_Closure)
                 (const GuestfsMdCreateArgs *message,
                  void *closure_data);
typedef void (*GuestfsListMdDevicesRet_Closure)
                 (const GuestfsListMdDevicesRet *message,
                  void *closure_data);
typedef void (*GuestfsMdDetailArgs_Closure)
                 (const GuestfsMdDetailArgs *message,
                  void *closure_data);
typedef void (*GuestfsMdDetailRet_Closure)
                 (const GuestfsMdDetailRet *message,
                  void *closure_data);
typedef void (*GuestfsMdStopArgs_Closure)
                 (const GuestfsMdStopArgs *message,
                  void *closure_data);
typedef void (*GuestfsBlkidArgs_Closure)
                 (const GuestfsBlkidArgs *message,
                  void *closure_data);
typedef void (*GuestfsBlkidRet_Closure)
                 (const GuestfsBlkidRet *message,
                  void *closure_data);
typedef void (*GuestfsE2fsckArgs_Closure)
                 (const GuestfsE2fsckArgs *message,
                  void *closure_data);
typedef void (*GuestfsLlzArgs_Closure)
                 (const GuestfsLlzArgs *message,
                  void *closure_data);
typedef void (*GuestfsLlzRet_Closure)
                 (const GuestfsLlzRet *message,
                  void *closure_data);
typedef void (*GuestfsWipefsArgs_Closure)
                 (const GuestfsWipefsArgs *message,
                  void *closure_data);
typedef void (*GuestfsNtfsfixArgs_Closure)
                 (const GuestfsNtfsfixArgs *message,
                  void *closure_data);
typedef void (*GuestfsNtfscloneOutArgs_Closure)
                 (const GuestfsNtfscloneOutArgs *message,
                  void *closure_data);
typedef void (*GuestfsNtfscloneInArgs_Closure)
                 (const GuestfsNtfscloneInArgs *message,
                  void *closure_data);
typedef void (*GuestfsSetLabelArgs_Closure)
                 (const GuestfsSetLabelArgs *message,
                  void *closure_data);
typedef void (*GuestfsZeroFreeSpaceArgs_Closure)
                 (const GuestfsZeroFreeSpaceArgs *message,
                  void *closure_data);
typedef void (*GuestfsLvcreateFreeArgs_Closure)
                 (const GuestfsLvcreateFreeArgs *message,
                  void *closure_data);
typedef void (*GuestfsIsoinfoDeviceArgs_Closure)
                 (const GuestfsIsoinfoDeviceArgs *message,
                  void *closure_data);
typedef void (*GuestfsIsoinfoDeviceRet_Closure)
                 (const GuestfsIsoinfoDeviceRet *message,
                  void *closure_data);
typedef void (*GuestfsIsoinfoArgs_Closure)
                 (const GuestfsIsoinfoArgs *message,
                  void *closure_data);
typedef void (*GuestfsIsoinfoRet_Closure)
                 (const GuestfsIsoinfoRet *message,
                  void *closure_data);
typedef void (*GuestfsVgmetaArgs_Closure)
                 (const GuestfsVgmetaArgs *message,
                  void *closure_data);
typedef void (*GuestfsVgmetaRet_Closure)
                 (const GuestfsVgmetaRet *message,
                  void *closure_data);
typedef void (*GuestfsMdStatArgs_Closure)
                 (const GuestfsMdStatArgs *message,
                  void *closure_data);
typedef void (*GuestfsMdStatRet_Closure)
                 (const GuestfsMdStatRet *message,
                  void *closure_data);
typedef void (*GuestfsMkfsBtrfsArgs_Closure)
                 (const GuestfsMkfsBtrfsArgs *message,
                  void *closure_data);
typedef void (*GuestfsGetE2attrsArgs_Closure)
                 (const GuestfsGetE2attrsArgs *message,
                  void *closure_data);
typedef void (*GuestfsGetE2attrsRet_Closure)
                 (const GuestfsGetE2attrsRet *message,
                  void *closure_data);
typedef void (*GuestfsSetE2attrsArgs_Closure)
                 (const GuestfsSetE2attrsArgs *message,
                  void *closure_data);
typedef void (*GuestfsGetE2generationArgs_Closure)
                 (const GuestfsGetE2generationArgs *message,
                  void *closure_data);
typedef void (*GuestfsGetE2generationRet_Closure)
                 (const GuestfsGetE2generationRet *message,
                  void *closure_data);
typedef void (*GuestfsSetE2generationArgs_Closure)
                 (const GuestfsSetE2generationArgs *message,
                  void *closure_data);
typedef void (*GuestfsBtrfsSubvolumeSnapshotArgs_Closure)
                 (const GuestfsBtrfsSubvolumeSnapshotArgs *message,
                  void *closure_data);
typedef void (*GuestfsBtrfsSubvolumeDeleteArgs_Closure)
                 (const GuestfsBtrfsSubvolumeDeleteArgs *message,
                  void *closure_data);
typedef void (*GuestfsBtrfsSubvolumeCreateArgs_Closure)
                 (const GuestfsBtrfsSubvolumeCreateArgs *message,
                  void *closure_data);
typedef void (*GuestfsBtrfsSubvolumeListArgs_Closure)
                 (const GuestfsBtrfsSubvolumeListArgs *message,
                  void *closure_data);
typedef void (*GuestfsBtrfsSubvolumeListRet_Closure)
                 (const GuestfsBtrfsSubvolumeListRet *message,
                  void *closure_data);
typedef void (*GuestfsBtrfsSubvolumeSetDefaultArgs_Closure)
                 (const GuestfsBtrfsSubvolumeSetDefaultArgs *message,
                  void *closure_data);
typedef void (*GuestfsBtrfsFilesystemSyncArgs_Closure)
                 (const GuestfsBtrfsFilesystemSyncArgs *message,
                  void *closure_data);
typedef void (*GuestfsBtrfsFilesystemBalanceArgs_Closure)
                 (const GuestfsBtrfsFilesystemBalanceArgs *message,
                  void *closure_data);
typedef void (*GuestfsBtrfsDeviceAddArgs_Closure)
                 (const GuestfsBtrfsDeviceAddArgs *message,
                  void *closure_data);
typedef void (*GuestfsBtrfsDeviceDeleteArgs_Closure)
                 (const GuestfsBtrfsDeviceDeleteArgs *message,
                  void *closure_data);
typedef void (*GuestfsBtrfsSetSeedingArgs_Closure)
                 (const GuestfsBtrfsSetSeedingArgs *message,
                  void *closure_data);
typedef void (*GuestfsBtrfsFsckArgs_Closure)
                 (const GuestfsBtrfsFsckArgs *message,
                  void *closure_data);
typedef void (*GuestfsFilesystemAvailableArgs_Closure)
                 (const GuestfsFilesystemAvailableArgs *message,
                  void *closure_data);
typedef void (*GuestfsFilesystemAvailableRet_Closure)
                 (const GuestfsFilesystemAvailableRet *message,
                  void *closure_data);
typedef void (*GuestfsFstrimArgs_Closure)
                 (const GuestfsFstrimArgs *message,
                  void *closure_data);
typedef void (*GuestfsDeviceIndexArgs_Closure)
                 (const GuestfsDeviceIndexArgs *message,
                  void *closure_data);
typedef void (*GuestfsDeviceIndexRet_Closure)
                 (const GuestfsDeviceIndexRet *message,
                  void *closure_data);
typedef void (*GuestfsNrDevicesRet_Closure)
                 (const GuestfsNrDevicesRet *message,
                  void *closure_data);
typedef void (*GuestfsXfsInfoArgs_Closure)
                 (const GuestfsXfsInfoArgs *message,
                  void *closure_data);
typedef void (*GuestfsXfsInfoRet_Closure)
                 (const GuestfsXfsInfoRet *message,
                  void *closure_data);
typedef void (*GuestfsPvchangeUuidArgs_Closure)
                 (const GuestfsPvchangeUuidArgs *message,
                  void *closure_data);
typedef void (*GuestfsVgchangeUuidArgs_Closure)
                 (const GuestfsVgchangeUuidArgs *message,
                  void *closure_data);
typedef void (*GuestfsUtsnameRet_Closure)
                 (const GuestfsUtsnameRet *message,
                  void *closure_data);
typedef void (*GuestfsXfsGrowfsArgs_Closure)
                 (const GuestfsXfsGrowfsArgs *message,
                  void *closure_data);
typedef void (*GuestfsRsyncArgs_Closure)
                 (const GuestfsRsyncArgs *message,
                  void *closure_data);
typedef void (*GuestfsRsyncInArgs_Closure)
                 (const GuestfsRsyncInArgs *message,
                  void *closure_data);
typedef void (*GuestfsRsyncOutArgs_Closure)
                 (const GuestfsRsyncOutArgs *message,
                  void *closure_data);
typedef void (*GuestfsLs0Args_Closure)
                 (const GuestfsLs0Args *message,
                  void *closure_data);
typedef void (*GuestfsFillDirArgs_Closure)
                 (const GuestfsFillDirArgs *message,
                  void *closure_data);
typedef void (*GuestfsXfsAdminArgs_Closure)
                 (const GuestfsXfsAdminArgs *message,
                  void *closure_data);
typedef void (*GuestfsHivexOpenArgs_Closure)
                 (const GuestfsHivexOpenArgs *message,
                  void *closure_data);
typedef void (*GuestfsHivexRootRet_Closure)
                 (const GuestfsHivexRootRet *message,
                  void *closure_data);
typedef void (*GuestfsHivexNodeNameArgs_Closure)
                 (const GuestfsHivexNodeNameArgs *message,
                  void *closure_data);
typedef void (*GuestfsHivexNodeNameRet_Closure)
                 (const GuestfsHivexNodeNameRet *message,
                  void *closure_data);
typedef void (*GuestfsHivexNodeChildrenArgs_Closure)
                 (const GuestfsHivexNodeChildrenArgs *message,
                  void *closure_data);
typedef void (*GuestfsHivexNodeChildrenRet_Closure)
                 (const GuestfsHivexNodeChildrenRet *message,
                  void *closure_data);
typedef void (*GuestfsHivexNodeGetChildArgs_Closure)
                 (const GuestfsHivexNodeGetChildArgs *message,
                  void *closure_data);
typedef void (*GuestfsHivexNodeGetChildRet_Closure)
                 (const GuestfsHivexNodeGetChildRet *message,
                  void *closure_data);
typedef void (*GuestfsHivexNodeParentArgs_Closure)
                 (const GuestfsHivexNodeParentArgs *message,
                  void *closure_data);
typedef void (*GuestfsHivexNodeParentRet_Closure)
                 (const GuestfsHivexNodeParentRet *message,
                  void *closure_data);
typedef void (*GuestfsHivexNodeValuesArgs_Closure)
                 (const GuestfsHivexNodeValuesArgs *message,
                  void *closure_data);
typedef void (*GuestfsHivexNodeValuesRet_Closure)
                 (const GuestfsHivexNodeValuesRet *message,
                  void *closure_data);
typedef void (*GuestfsHivexNodeGetValueArgs_Closure)
                 (const GuestfsHivexNodeGetValueArgs *message,
                  void *closure_data);
typedef void (*GuestfsHivexNodeGetValueRet_Closure)
                 (const GuestfsHivexNodeGetValueRet *message,
                  void *closure_data);
typedef void (*GuestfsHivexValueKeyArgs_Closure)
                 (const GuestfsHivexValueKeyArgs *message,
                  void *closure_data);
typedef void (*GuestfsHivexValueKeyRet_Closure)
                 (const GuestfsHivexValueKeyRet *message,
                  void *closure_data);
typedef void (*GuestfsHivexValueTypeArgs_Closure)
                 (const GuestfsHivexValueTypeArgs *message,
                  void *closure_data);
typedef void (*GuestfsHivexValueTypeRet_Closure)
                 (const GuestfsHivexValueTypeRet *message,
                  void *closure_data);
typedef void (*GuestfsHivexValueValueArgs_Closure)
                 (const GuestfsHivexValueValueArgs *message,
                  void *closure_data);
typedef void (*GuestfsHivexValueValueRet_Closure)
                 (const GuestfsHivexValueValueRet *message,
                  void *closure_data);
typedef void (*GuestfsHivexCommitArgs_Closure)
                 (const GuestfsHivexCommitArgs *message,
                  void *closure_data);
typedef void (*GuestfsHivexNodeAddChildArgs_Closure)
                 (const GuestfsHivexNodeAddChildArgs *message,
                  void *closure_data);
typedef void (*GuestfsHivexNodeAddChildRet_Closure)
                 (const GuestfsHivexNodeAddChildRet *message,
                  void *closure_data);
typedef void (*GuestfsHivexNodeDeleteChildArgs_Closure)
                 (const GuestfsHivexNodeDeleteChildArgs *message,
                  void *closure_data);
typedef void (*GuestfsHivexNodeSetValueArgs_Closure)
                 (const GuestfsHivexNodeSetValueArgs *message,
                  void *closure_data);
typedef void (*GuestfsXfsRepairArgs_Closure)
                 (const GuestfsXfsRepairArgs *message,
                  void *closure_data);
typedef void (*GuestfsXfsRepairRet_Closure)
                 (const GuestfsXfsRepairRet *message,
                  void *closure_data);
typedef void (*GuestfsRmFfArgs_Closure)
                 (const GuestfsRmFfArgs *message,
                  void *closure_data);
typedef void (*GuestfsMke2fsArgs_Closure)
                 (const GuestfsMke2fsArgs *message,
                  void *closure_data);
typedef void (*GuestfsListDiskLabelsRet_Closure)
                 (const GuestfsListDiskLabelsRet *message,
                  void *closure_data);
typedef void (*GuestfsInternalHotAddDriveArgs_Closure)
                 (const GuestfsInternalHotAddDriveArgs *message,
                  void *closure_data);
typedef void (*GuestfsInternalHotRemoveDrivePrecheckArgs_Closure)
                 (const GuestfsInternalHotRemoveDrivePrecheckArgs *message,
                  void *closure_data);
typedef void (*GuestfsInternalHotRemoveDriveArgs_Closure)
                 (const GuestfsInternalHotRemoveDriveArgs *message,
                  void *closure_data);
typedef void (*GuestfsMktempArgs_Closure)
                 (const GuestfsMktempArgs *message,
                  void *closure_data);
typedef void (*GuestfsMktempRet_Closure)
                 (const GuestfsMktempRet *message,
                  void *closure_data);
typedef void (*GuestfsMklostAndFoundArgs_Closure)
                 (const GuestfsMklostAndFoundArgs *message,
                  void *closure_data);
typedef void (*GuestfsAclGetFileArgs_Closure)
                 (const GuestfsAclGetFileArgs *message,
                  void *closure_data);
typedef void (*GuestfsAclGetFileRet_Closure)
                 (const GuestfsAclGetFileRet *message,
                  void *closure_data);
typedef void (*GuestfsAclSetFileArgs_Closure)
                 (const GuestfsAclSetFileArgs *message,
                  void *closure_data);
typedef void (*GuestfsAclDeleteDefFileArgs_Closure)
                 (const GuestfsAclDeleteDefFileArgs *message,
                  void *closure_data);
typedef void (*GuestfsCapGetFileArgs_Closure)
                 (const GuestfsCapGetFileArgs *message,
                  void *closure_data);
typedef void (*GuestfsCapGetFileRet_Closure)
                 (const GuestfsCapGetFileRet *message,
                  void *closure_data);
typedef void (*GuestfsCapSetFileArgs_Closure)
                 (const GuestfsCapSetFileArgs *message,
                  void *closure_data);
typedef void (*GuestfsListLdmVolumesRet_Closure)
                 (const GuestfsListLdmVolumesRet *message,
                  void *closure_data);
typedef void (*GuestfsListLdmPartitionsRet_Closure)
                 (const GuestfsListLdmPartitionsRet *message,
                  void *closure_data);
typedef void (*GuestfsLdmtoolScanRet_Closure)
                 (const GuestfsLdmtoolScanRet *message,
                  void *closure_data);
typedef void (*GuestfsLdmtoolScanDevicesArgs_Closure)
                 (const GuestfsLdmtoolScanDevicesArgs *message,
                  void *closure_data);
typedef void (*GuestfsLdmtoolScanDevicesRet_Closure)
                 (const GuestfsLdmtoolScanDevicesRet *message,
                  void *closure_data);
typedef void (*GuestfsLdmtoolDiskgroupNameArgs_Closure)
                 (const GuestfsLdmtoolDiskgroupNameArgs *message,
                  void *closure_data);
typedef void (*GuestfsLdmtoolDiskgroupNameRet_Closure)
                 (const GuestfsLdmtoolDiskgroupNameRet *message,
                  void *closure_data);
typedef void (*GuestfsLdmtoolDiskgroupVolumesArgs_Closure)
                 (const GuestfsLdmtoolDiskgroupVolumesArgs *message,
                  void *closure_data);
typedef void (*GuestfsLdmtoolDiskgroupVolumesRet_Closure)
                 (const GuestfsLdmtoolDiskgroupVolumesRet *message,
                  void *closure_data);
typedef void (*GuestfsLdmtoolDiskgroupDisksArgs_Closure)
                 (const GuestfsLdmtoolDiskgroupDisksArgs *message,
                  void *closure_data);
typedef void (*GuestfsLdmtoolDiskgroupDisksRet_Closure)
                 (const GuestfsLdmtoolDiskgroupDisksRet *message,
                  void *closure_data);
typedef void (*GuestfsLdmtoolVolumeTypeArgs_Closure)
                 (const GuestfsLdmtoolVolumeTypeArgs *message,
                  void *closure_data);
typedef void (*GuestfsLdmtoolVolumeTypeRet_Closure)
                 (const GuestfsLdmtoolVolumeTypeRet *message,
                  void *closure_data);
typedef void (*GuestfsLdmtoolVolumeHintArgs_Closure)
                 (const GuestfsLdmtoolVolumeHintArgs *message,
                  void *closure_data);
typedef void (*GuestfsLdmtoolVolumeHintRet_Closure)
                 (const GuestfsLdmtoolVolumeHintRet *message,
                  void *closure_data);
typedef void (*GuestfsLdmtoolVolumePartitionsArgs_Closure)
                 (const GuestfsLdmtoolVolumePartitionsArgs *message,
                  void *closure_data);
typedef void (*GuestfsLdmtoolVolumePartitionsRet_Closure)
                 (const GuestfsLdmtoolVolumePartitionsRet *message,
                  void *closure_data);
typedef void (*GuestfsPartSetGptTypeArgs_Closure)
                 (const GuestfsPartSetGptTypeArgs *message,
                  void *closure_data);
typedef void (*GuestfsPartGetGptTypeArgs_Closure)
                 (const GuestfsPartGetGptTypeArgs *message,
                  void *closure_data);
typedef void (*GuestfsPartGetGptTypeRet_Closure)
                 (const GuestfsPartGetGptTypeRet *message,
                  void *closure_data);
typedef void (*GuestfsRenameArgs_Closure)
                 (const GuestfsRenameArgs *message,
                  void *closure_data);
typedef void (*GuestfsIsWholeDeviceArgs_Closure)
                 (const GuestfsIsWholeDeviceArgs *message,
                  void *closure_data);
typedef void (*GuestfsIsWholeDeviceRet_Closure)
                 (const GuestfsIsWholeDeviceRet *message,
                  void *closure_data);
typedef void (*GuestfsInternalParseMountableArgs_Closure)
                 (const GuestfsInternalParseMountableArgs *message,
                  void *closure_data);
typedef void (*GuestfsInternalParseMountableRet_Closure)
                 (const GuestfsInternalParseMountableRet *message,
                  void *closure_data);
typedef void (*GuestfsInternalRhbz914931Args_Closure)
                 (const GuestfsInternalRhbz914931Args *message,
                  void *closure_data);
typedef void (*GuestfsFeatureAvailableArgs_Closure)
                 (const GuestfsFeatureAvailableArgs *message,
                  void *closure_data);
typedef void (*GuestfsFeatureAvailableRet_Closure)
                 (const GuestfsFeatureAvailableRet *message,
                  void *closure_data);
typedef void (*GuestfsSyslinuxArgs_Closure)
                 (const GuestfsSyslinuxArgs *message,
                  void *closure_data);
typedef void (*GuestfsExtlinuxArgs_Closure)
                 (const GuestfsExtlinuxArgs *message,
                  void *closure_data);
typedef void (*GuestfsCpRrArgs_Closure)
                 (const GuestfsCpRrArgs *message,
                  void *closure_data);
typedef void (*GuestfsRemountArgs_Closure)
                 (const GuestfsRemountArgs *message,
                  void *closure_data);
typedef void (*GuestfsSetUuidArgs_Closure)
                 (const GuestfsSetUuidArgs *message,
                  void *closure_data);
typedef void (*GuestfsJournalOpenArgs_Closure)
                 (const GuestfsJournalOpenArgs *message,
                  void *closure_data);
typedef void (*GuestfsJournalNextRet_Closure)
                 (const GuestfsJournalNextRet *message,
                  void *closure_data);
typedef void (*GuestfsJournalSkipArgs_Closure)
                 (const GuestfsJournalSkipArgs *message,
                  void *closure_data);
typedef void (*GuestfsJournalSkipRet_Closure)
                 (const GuestfsJournalSkipRet *message,
                  void *closure_data);
typedef void (*GuestfsJournalGetDataThresholdRet_Closure)
                 (const GuestfsJournalGetDataThresholdRet *message,
                  void *closure_data);
typedef void (*GuestfsJournalSetDataThresholdArgs_Closure)
                 (const GuestfsJournalSetDataThresholdArgs *message,
                  void *closure_data);
typedef void (*GuestfsAugSetmArgs_Closure)
                 (const GuestfsAugSetmArgs *message,
                  void *closure_data);
typedef void (*GuestfsAugSetmRet_Closure)
                 (const GuestfsAugSetmRet *message,
                  void *closure_data);
typedef void (*GuestfsAugLabelArgs_Closure)
                 (const GuestfsAugLabelArgs *message,
                  void *closure_data);
typedef void (*GuestfsAugLabelRet_Closure)
                 (const GuestfsAugLabelRet *message,
                  void *closure_data);
typedef void (*GuestfsInternalUploadArgs_Closure)
                 (const GuestfsInternalUploadArgs *message,
                  void *closure_data);
typedef void (*GuestfsCopyAttributesArgs_Closure)
                 (const GuestfsCopyAttributesArgs *message,
                  void *closure_data);
typedef void (*GuestfsPartGetNameArgs_Closure)
                 (const GuestfsPartGetNameArgs *message,
                  void *closure_data);
typedef void (*GuestfsPartGetNameRet_Closure)
                 (const GuestfsPartGetNameRet *message,
                  void *closure_data);
typedef void (*GuestfsBlkdiscardArgs_Closure)
                 (const GuestfsBlkdiscardArgs *message,
                  void *closure_data);
typedef void (*GuestfsBlkdiscardzeroesArgs_Closure)
                 (const GuestfsBlkdiscardzeroesArgs *message,
                  void *closure_data);
typedef void (*GuestfsBlkdiscardzeroesRet_Closure)
                 (const GuestfsBlkdiscardzeroesRet *message,
                  void *closure_data);
typedef void (*GuestfsCpioOutArgs_Closure)
                 (const GuestfsCpioOutArgs *message,
                  void *closure_data);
typedef void (*GuestfsJournalGetRealtimeUsecRet_Closure)
                 (const GuestfsJournalGetRealtimeUsecRet *message,
                  void *closure_data);
typedef void (*GuestfsStatnsArgs_Closure)
                 (const GuestfsStatnsArgs *message,
                  void *closure_data);
typedef void (*GuestfsStatnsRet_Closure)
                 (const GuestfsStatnsRet *message,
                  void *closure_data);
typedef void (*GuestfsLstatnsArgs_Closure)
                 (const GuestfsLstatnsArgs *message,
                  void *closure_data);
typedef void (*GuestfsLstatnsRet_Closure)
                 (const GuestfsLstatnsRet *message,
                  void *closure_data);
typedef void (*GuestfsInternalLstatnslistArgs_Closure)
                 (const GuestfsInternalLstatnslistArgs *message,
                  void *closure_data);
typedef void (*GuestfsInternalLstatnslistRet_Closure)
                 (const GuestfsInternalLstatnslistRet *message,
                  void *closure_data);
typedef void (*GuestfsMessageError_Closure)
                 (const GuestfsMessageError *message,
                  void *closure_data);
typedef void (*GuestfsMessageHeader_Closure)
                 (const GuestfsMessageHeader *message,
                  void *closure_data);
typedef void (*GuestfsChunk_Closure)
                 (const GuestfsChunk *message,
                  void *closure_data);
typedef void (*GuestfsProgress_Closure)
                 (const GuestfsProgress *message,
                  void *closure_data);
typedef void (*GuestfsFlagMessage_Closure)
                 (const GuestfsFlagMessage *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCEnumDescriptor    guestfs_procedure__descriptor;
extern const ProtobufCEnumDescriptor    guestfs_const__descriptor;
extern const ProtobufCEnumDescriptor    guestfs_message_direction__descriptor;
extern const ProtobufCEnumDescriptor    guestfs_message_status__descriptor;
extern const ProtobufCMessageDescriptor guestfs_int_int_bool__descriptor;
extern const ProtobufCMessageDescriptor guestfs_int_int_bool_list__descriptor;
extern const ProtobufCMessageDescriptor guestfs_int_pv__descriptor;
extern const ProtobufCMessageDescriptor guestfs_int_pv_list__descriptor;
extern const ProtobufCMessageDescriptor guestfs_int_vg__descriptor;
extern const ProtobufCMessageDescriptor guestfs_int_vg_list__descriptor;
extern const ProtobufCMessageDescriptor guestfs_int_lv__descriptor;
extern const ProtobufCMessageDescriptor guestfs_int_lv_list__descriptor;
extern const ProtobufCMessageDescriptor guestfs_int_stat__descriptor;
extern const ProtobufCMessageDescriptor guestfs_int_stat_list__descriptor;
extern const ProtobufCMessageDescriptor guestfs_int_stat_ns__descriptor;
extern const ProtobufCMessageDescriptor guestfs_int_stat_nslist__descriptor;
extern const ProtobufCMessageDescriptor guestfs_int_stat_vfs__descriptor;
extern const ProtobufCMessageDescriptor guestfs_int_stat_vfslist__descriptor;
extern const ProtobufCMessageDescriptor guestfs_int_dirent__descriptor;
extern const ProtobufCMessageDescriptor guestfs_int_dirent_list__descriptor;
extern const ProtobufCMessageDescriptor guestfs_int_version__descriptor;
extern const ProtobufCMessageDescriptor guestfs_int_version_list__descriptor;
extern const ProtobufCMessageDescriptor guestfs_int_xattr__descriptor;
extern const ProtobufCMessageDescriptor guestfs_int_xattr_list__descriptor;
extern const ProtobufCMessageDescriptor guestfs_int_inotify_event__descriptor;
extern const ProtobufCMessageDescriptor guestfs_int_inotify_event_list__descriptor;
extern const ProtobufCMessageDescriptor guestfs_int_partition__descriptor;
extern const ProtobufCMessageDescriptor guestfs_int_partition_list__descriptor;
extern const ProtobufCMessageDescriptor guestfs_int_application__descriptor;
extern const ProtobufCMessageDescriptor guestfs_int_application_list__descriptor;
extern const ProtobufCMessageDescriptor guestfs_int_application2__descriptor;
extern const ProtobufCMessageDescriptor guestfs_int_application2_list__descriptor;
extern const ProtobufCMessageDescriptor guestfs_int_isoinfo__descriptor;
extern const ProtobufCMessageDescriptor guestfs_int_isoinfo_list__descriptor;
extern const ProtobufCMessageDescriptor guestfs_int_mdstat__descriptor;
extern const ProtobufCMessageDescriptor guestfs_int_mdstat_list__descriptor;
extern const ProtobufCMessageDescriptor guestfs_int_btrfssubvolume__descriptor;
extern const ProtobufCMessageDescriptor guestfs_int_btrfssubvolume_list__descriptor;
extern const ProtobufCMessageDescriptor guestfs_int_xfsinfo__descriptor;
extern const ProtobufCMessageDescriptor guestfs_int_xfsinfo_list__descriptor;
extern const ProtobufCMessageDescriptor guestfs_int_utsname__descriptor;
extern const ProtobufCMessageDescriptor guestfs_int_utsname_list__descriptor;
extern const ProtobufCMessageDescriptor guestfs_int_hivex_node__descriptor;
extern const ProtobufCMessageDescriptor guestfs_int_hivex_node_list__descriptor;
extern const ProtobufCMessageDescriptor guestfs_int_hivex_value__descriptor;
extern const ProtobufCMessageDescriptor guestfs_int_hivex_value_list__descriptor;
extern const ProtobufCMessageDescriptor guestfs_int_internal_mountable__descriptor;
extern const ProtobufCMessageDescriptor guestfs_int_internal_mountable_list__descriptor;
extern const ProtobufCMessageDescriptor guestfs_mount_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_touch_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_ll_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_ll_ret__descriptor;
extern const ProtobufCMessageDescriptor guestfs_list_devices_ret__descriptor;
extern const ProtobufCMessageDescriptor guestfs_list_partitions_ret__descriptor;
extern const ProtobufCMessageDescriptor guestfs_pvs_ret__descriptor;
extern const ProtobufCMessageDescriptor guestfs_vgs_ret__descriptor;
extern const ProtobufCMessageDescriptor guestfs_lvs_ret__descriptor;
extern const ProtobufCMessageDescriptor guestfs_pvs_full_ret__descriptor;
extern const ProtobufCMessageDescriptor guestfs_vgs_full_ret__descriptor;
extern const ProtobufCMessageDescriptor guestfs_lvs_full_ret__descriptor;
extern const ProtobufCMessageDescriptor guestfs_aug_init_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_aug_defvar_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_aug_defvar_ret__descriptor;
extern const ProtobufCMessageDescriptor guestfs_aug_defnode_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_aug_defnode_ret__descriptor;
extern const ProtobufCMessageDescriptor guestfs_aug_get_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_aug_get_ret__descriptor;
extern const ProtobufCMessageDescriptor guestfs_aug_set_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_aug_insert_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_aug_rm_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_aug_rm_ret__descriptor;
extern const ProtobufCMessageDescriptor guestfs_aug_mv_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_aug_match_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_aug_match_ret__descriptor;
extern const ProtobufCMessageDescriptor guestfs_aug_ls_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_aug_ls_ret__descriptor;
extern const ProtobufCMessageDescriptor guestfs_rm_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_rmdir_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_rm_rf_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_mkdir_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_mkdir_pp_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_chmod_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_chown_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_exists_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_exists_ret__descriptor;
extern const ProtobufCMessageDescriptor guestfs_is_file_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_is_file_ret__descriptor;
extern const ProtobufCMessageDescriptor guestfs_is_dir_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_is_dir_ret__descriptor;
extern const ProtobufCMessageDescriptor guestfs_pvcreate_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_vgcreate_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_lvcreate_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_sfdisk_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_write_file_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_umount_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_mounts_ret__descriptor;
extern const ProtobufCMessageDescriptor guestfs_file_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_file_ret__descriptor;
extern const ProtobufCMessageDescriptor guestfs_command_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_command_ret__descriptor;
extern const ProtobufCMessageDescriptor guestfs_command_lines_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_command_lines_ret__descriptor;
extern const ProtobufCMessageDescriptor guestfs_statvfs_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_statvfs_ret__descriptor;
extern const ProtobufCMessageDescriptor guestfs_tune2fsl_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_tune2fsl_ret__descriptor;
extern const ProtobufCMessageDescriptor guestfs_blockdev_setro_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_blockdev_setrw_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_blockdev_getro_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_blockdev_getro_ret__descriptor;
extern const ProtobufCMessageDescriptor guestfs_blockdev_getss_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_blockdev_getss_ret__descriptor;
extern const ProtobufCMessageDescriptor guestfs_blockdev_getbsz_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_blockdev_getbsz_ret__descriptor;
extern const ProtobufCMessageDescriptor guestfs_blockdev_setbsz_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_blockdev_getsz_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_blockdev_getsz_ret__descriptor;
extern const ProtobufCMessageDescriptor guestfs_blockdev_getsize64_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_blockdev_getsize64_ret__descriptor;
extern const ProtobufCMessageDescriptor guestfs_blockdev_flushbufs_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_blockdev_rereadpt_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_upload_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_download_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_checksum_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_checksum_ret__descriptor;
extern const ProtobufCMessageDescriptor guestfs_tar_in_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_tar_out_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_tgz_in_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_tgz_out_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_mount_ro_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_mount_options_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_mount_vfs_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_debug_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_debug_ret__descriptor;
extern const ProtobufCMessageDescriptor guestfs_lvremove_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_vgremove_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_pvremove_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_set_e2label_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_get_e2label_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_get_e2label_ret__descriptor;
extern const ProtobufCMessageDescriptor guestfs_set_e2uuid_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_get_e2uuid_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_get_e2uuid_ret__descriptor;
extern const ProtobufCMessageDescriptor guestfs_fsck_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_fsck_ret__descriptor;
extern const ProtobufCMessageDescriptor guestfs_zero_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_grub_install_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_cp_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_cp_aa_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_mv_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_drop_caches_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_dmesg_ret__descriptor;
extern const ProtobufCMessageDescriptor guestfs_equal_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_equal_ret__descriptor;
extern const ProtobufCMessageDescriptor guestfs_strings_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_strings_ret__descriptor;
extern const ProtobufCMessageDescriptor guestfs_strings_ee_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_strings_ee_ret__descriptor;
extern const ProtobufCMessageDescriptor guestfs_hexdump_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_hexdump_ret__descriptor;
extern const ProtobufCMessageDescriptor guestfs_zerofree_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_pvresize_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_sfdisk_nn_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_sfdiskl_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_sfdiskl_ret__descriptor;
extern const ProtobufCMessageDescriptor guestfs_sfdisk_kernel_geometry_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_sfdisk_kernel_geometry_ret__descriptor;
extern const ProtobufCMessageDescriptor guestfs_sfdisk_disk_geometry_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_sfdisk_disk_geometry_ret__descriptor;
extern const ProtobufCMessageDescriptor guestfs_vg_activate_all_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_vg_activate_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_lvresize_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_resize2fs_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_e2fsck_ff_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_sleep_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_ntfs3gprobe_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_ntfs3gprobe_ret__descriptor;
extern const ProtobufCMessageDescriptor guestfs_sh_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_sh_ret__descriptor;
extern const ProtobufCMessageDescriptor guestfs_sh_lines_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_sh_lines_ret__descriptor;
extern const ProtobufCMessageDescriptor guestfs_glob_expand_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_glob_expand_ret__descriptor;
extern const ProtobufCMessageDescriptor guestfs_scrub_device_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_scrub_file_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_scrub_freespace_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_mkdtemp_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_mkdtemp_ret__descriptor;
extern const ProtobufCMessageDescriptor guestfs_wcl_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_wcl_ret__descriptor;
extern const ProtobufCMessageDescriptor guestfs_wcw_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_wcw_ret__descriptor;
extern const ProtobufCMessageDescriptor guestfs_wcc_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_wcc_ret__descriptor;
extern const ProtobufCMessageDescriptor guestfs_head_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_head_ret__descriptor;
extern const ProtobufCMessageDescriptor guestfs_head_nn_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_head_nn_ret__descriptor;
extern const ProtobufCMessageDescriptor guestfs_tail_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_tail_ret__descriptor;
extern const ProtobufCMessageDescriptor guestfs_tail_nn_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_tail_nn_ret__descriptor;
extern const ProtobufCMessageDescriptor guestfs_df_ret__descriptor;
extern const ProtobufCMessageDescriptor guestfs_dfh_ret__descriptor;
extern const ProtobufCMessageDescriptor guestfs_du_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_du_ret__descriptor;
extern const ProtobufCMessageDescriptor guestfs_initrd_list_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_initrd_list_ret__descriptor;
extern const ProtobufCMessageDescriptor guestfs_mount_loop_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_mkswap_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_mkswap_ll_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_mkswap_uu_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_mknod_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_mkfifo_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_mknod_bb_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_mknod_cc_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_umask_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_umask_ret__descriptor;
extern const ProtobufCMessageDescriptor guestfs_readdir_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_readdir_ret__descriptor;
extern const ProtobufCMessageDescriptor guestfs_sfdiskm_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_zfile_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_zfile_ret__descriptor;
extern const ProtobufCMessageDescriptor guestfs_getxattrs_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_getxattrs_ret__descriptor;
extern const ProtobufCMessageDescriptor guestfs_lgetxattrs_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_lgetxattrs_ret__descriptor;
extern const ProtobufCMessageDescriptor guestfs_setxattr_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_lsetxattr_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_removexattr_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_lremovexattr_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_mountpoints_ret__descriptor;
extern const ProtobufCMessageDescriptor guestfs_mkmountpoint_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_rmmountpoint_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_grep_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_grep_ret__descriptor;
extern const ProtobufCMessageDescriptor guestfs_egrep_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_egrep_ret__descriptor;
extern const ProtobufCMessageDescriptor guestfs_fgrep_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_fgrep_ret__descriptor;
extern const ProtobufCMessageDescriptor guestfs_grepi_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_grepi_ret__descriptor;
extern const ProtobufCMessageDescriptor guestfs_egrepi_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_egrepi_ret__descriptor;
extern const ProtobufCMessageDescriptor guestfs_fgrepi_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_fgrepi_ret__descriptor;
extern const ProtobufCMessageDescriptor guestfs_zgrep_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_zgrep_ret__descriptor;
extern const ProtobufCMessageDescriptor guestfs_zegrep_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_zegrep_ret__descriptor;
extern const ProtobufCMessageDescriptor guestfs_zfgrep_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_zfgrep_ret__descriptor;
extern const ProtobufCMessageDescriptor guestfs_zgrepi_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_zgrepi_ret__descriptor;
extern const ProtobufCMessageDescriptor guestfs_zegrepi_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_zegrepi_ret__descriptor;
extern const ProtobufCMessageDescriptor guestfs_zfgrepi_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_zfgrepi_ret__descriptor;
extern const ProtobufCMessageDescriptor guestfs_realpath_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_realpath_ret__descriptor;
extern const ProtobufCMessageDescriptor guestfs_ln_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_lnf_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_lns_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_ln_sf_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_readlink_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_readlink_ret__descriptor;
extern const ProtobufCMessageDescriptor guestfs_fallocate_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_swapon_device_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_swapoff_device_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_swapon_file_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_swapoff_file_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_swapon_label_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_swapoff_label_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_swapon_uuid_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_swapoff_uuid_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_mkswap_file_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_inotify_init_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_inotify_add_watch_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_inotify_add_watch_ret__descriptor;
extern const ProtobufCMessageDescriptor guestfs_inotify_rm_watch_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_inotify_read_ret__descriptor;
extern const ProtobufCMessageDescriptor guestfs_inotify_files_ret__descriptor;
extern const ProtobufCMessageDescriptor guestfs_setcon_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_getcon_ret__descriptor;
extern const ProtobufCMessageDescriptor guestfs_mkfs_bb_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_mke2journal_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_mke2journal_ll_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_mke2journal_uu_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_mke2fs_jj_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_mke2fs_jl_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_mke2fs_ju_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_modprobe_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_echo_daemon_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_echo_daemon_ret__descriptor;
extern const ProtobufCMessageDescriptor guestfs_find0_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_case_sensitive_path_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_case_sensitive_path_ret__descriptor;
extern const ProtobufCMessageDescriptor guestfs_vfs_type_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_vfs_type_ret__descriptor;
extern const ProtobufCMessageDescriptor guestfs_truncate_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_truncate_size_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_utimens_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_mkdir_mode_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_lchown_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_internal_lxattrlist_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_internal_lxattrlist_ret__descriptor;
extern const ProtobufCMessageDescriptor guestfs_internal_readlinklist_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_internal_readlinklist_ret__descriptor;
extern const ProtobufCMessageDescriptor guestfs_pread_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_pread_ret__descriptor;
extern const ProtobufCMessageDescriptor guestfs_part_init_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_part_add_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_part_disk_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_part_set_bootable_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_part_set_name_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_part_list_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_part_list_ret__descriptor;
extern const ProtobufCMessageDescriptor guestfs_part_get_parttype_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_part_get_parttype_ret__descriptor;
extern const ProtobufCMessageDescriptor guestfs_fill_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_available_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_dd_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_filesize_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_filesize_ret__descriptor;
extern const ProtobufCMessageDescriptor guestfs_lvrename_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_vgrename_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_initrd_cat_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_initrd_cat_ret__descriptor;
extern const ProtobufCMessageDescriptor guestfs_pvuuid_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_pvuuid_ret__descriptor;
extern const ProtobufCMessageDescriptor guestfs_vguuid_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_vguuid_ret__descriptor;
extern const ProtobufCMessageDescriptor guestfs_lvuuid_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_lvuuid_ret__descriptor;
extern const ProtobufCMessageDescriptor guestfs_vgpvuuids_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_vgpvuuids_ret__descriptor;
extern const ProtobufCMessageDescriptor guestfs_vglvuuids_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_vglvuuids_ret__descriptor;
extern const ProtobufCMessageDescriptor guestfs_copy_size_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_zero_device_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_txz_in_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_txz_out_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_part_del_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_part_get_bootable_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_part_get_bootable_ret__descriptor;
extern const ProtobufCMessageDescriptor guestfs_part_get_mbr_id_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_part_get_mbr_id_ret__descriptor;
extern const ProtobufCMessageDescriptor guestfs_part_set_mbr_id_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_checksum_device_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_checksum_device_ret__descriptor;
extern const ProtobufCMessageDescriptor guestfs_lvresize_free_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_aug_clear_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_get_umask_ret__descriptor;
extern const ProtobufCMessageDescriptor guestfs_debug_upload_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_base64_in_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_base64_out_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_checksums_out_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_fill_pattern_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_internal_write_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_pwrite_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_pwrite_ret__descriptor;
extern const ProtobufCMessageDescriptor guestfs_resize2fs_size_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_pvresize_size_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_ntfsresize_size_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_available_all_groups_ret__descriptor;
extern const ProtobufCMessageDescriptor guestfs_fallocate64_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_vfs_label_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_vfs_label_ret__descriptor;
extern const ProtobufCMessageDescriptor guestfs_vfs_uuid_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_vfs_uuid_ret__descriptor;
extern const ProtobufCMessageDescriptor guestfs_lvm_set_filter_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_luks_open_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_luks_open_ro_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_luks_close_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_luks_format_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_luks_format_cipher_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_luks_add_key_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_luks_kill_slot_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_is_lv_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_is_lv_ret__descriptor;
extern const ProtobufCMessageDescriptor guestfs_findfs_uuid_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_findfs_uuid_ret__descriptor;
extern const ProtobufCMessageDescriptor guestfs_findfs_label_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_findfs_label_ret__descriptor;
extern const ProtobufCMessageDescriptor guestfs_is_chardev_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_is_chardev_ret__descriptor;
extern const ProtobufCMessageDescriptor guestfs_is_blockdev_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_is_blockdev_ret__descriptor;
extern const ProtobufCMessageDescriptor guestfs_is_fifo_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_is_fifo_ret__descriptor;
extern const ProtobufCMessageDescriptor guestfs_is_symlink_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_is_symlink_ret__descriptor;
extern const ProtobufCMessageDescriptor guestfs_is_socket_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_is_socket_ret__descriptor;
extern const ProtobufCMessageDescriptor guestfs_part_to_dev_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_part_to_dev_ret__descriptor;
extern const ProtobufCMessageDescriptor guestfs_upload_offset_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_download_offset_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_pwrite_device_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_pwrite_device_ret__descriptor;
extern const ProtobufCMessageDescriptor guestfs_pread_device_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_pread_device_ret__descriptor;
extern const ProtobufCMessageDescriptor guestfs_lvm_canonical_lv_name_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_lvm_canonical_lv_name_ret__descriptor;
extern const ProtobufCMessageDescriptor guestfs_mkfs_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_getxattr_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_getxattr_ret__descriptor;
extern const ProtobufCMessageDescriptor guestfs_lgetxattr_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_lgetxattr_ret__descriptor;
extern const ProtobufCMessageDescriptor guestfs_resize2fsm_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_is_zero_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_is_zero_ret__descriptor;
extern const ProtobufCMessageDescriptor guestfs_is_zero_device_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_is_zero_device_ret__descriptor;
extern const ProtobufCMessageDescriptor guestfs_list9p_ret__descriptor;
extern const ProtobufCMessageDescriptor guestfs_mount9p_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_list_dm_devices_ret__descriptor;
extern const ProtobufCMessageDescriptor guestfs_ntfsresize_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_btrfs_filesystem_resize_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_internal_write_append_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_compress_out_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_compress_device_out_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_part_to_partnum_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_part_to_partnum_ret__descriptor;
extern const ProtobufCMessageDescriptor guestfs_copy_device_to_device_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_copy_device_to_file_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_copy_file_to_device_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_copy_file_to_file_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_tune2fs_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_md_create_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_list_md_devices_ret__descriptor;
extern const ProtobufCMessageDescriptor guestfs_md_detail_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_md_detail_ret__descriptor;
extern const ProtobufCMessageDescriptor guestfs_md_stop_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_blkid_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_blkid_ret__descriptor;
extern const ProtobufCMessageDescriptor guestfs_e2fsck_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_llz_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_llz_ret__descriptor;
extern const ProtobufCMessageDescriptor guestfs_wipefs_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_ntfsfix_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_ntfsclone_out_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_ntfsclone_in_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_set_label_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_zero_free_space_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_lvcreate_free_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_isoinfo_device_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_isoinfo_device_ret__descriptor;
extern const ProtobufCMessageDescriptor guestfs_isoinfo_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_isoinfo_ret__descriptor;
extern const ProtobufCMessageDescriptor guestfs_vgmeta_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_vgmeta_ret__descriptor;
extern const ProtobufCMessageDescriptor guestfs_md_stat_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_md_stat_ret__descriptor;
extern const ProtobufCMessageDescriptor guestfs_mkfs_btrfs_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_get_e2attrs_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_get_e2attrs_ret__descriptor;
extern const ProtobufCMessageDescriptor guestfs_set_e2attrs_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_get_e2generation_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_get_e2generation_ret__descriptor;
extern const ProtobufCMessageDescriptor guestfs_set_e2generation_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_btrfs_subvolume_snapshot_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_btrfs_subvolume_delete_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_btrfs_subvolume_create_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_btrfs_subvolume_list_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_btrfs_subvolume_list_ret__descriptor;
extern const ProtobufCMessageDescriptor guestfs_btrfs_subvolume_set_default_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_btrfs_filesystem_sync_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_btrfs_filesystem_balance_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_btrfs_device_add_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_btrfs_device_delete_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_btrfs_set_seeding_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_btrfs_fsck_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_filesystem_available_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_filesystem_available_ret__descriptor;
extern const ProtobufCMessageDescriptor guestfs_fstrim_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_device_index_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_device_index_ret__descriptor;
extern const ProtobufCMessageDescriptor guestfs_nr_devices_ret__descriptor;
extern const ProtobufCMessageDescriptor guestfs_xfs_info_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_xfs_info_ret__descriptor;
extern const ProtobufCMessageDescriptor guestfs_pvchange_uuid_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_vgchange_uuid_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_utsname_ret__descriptor;
extern const ProtobufCMessageDescriptor guestfs_xfs_growfs_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_rsync_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_rsync_in_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_rsync_out_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_ls0_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_fill_dir_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_xfs_admin_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_hivex_open_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_hivex_root_ret__descriptor;
extern const ProtobufCMessageDescriptor guestfs_hivex_node_name_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_hivex_node_name_ret__descriptor;
extern const ProtobufCMessageDescriptor guestfs_hivex_node_children_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_hivex_node_children_ret__descriptor;
extern const ProtobufCMessageDescriptor guestfs_hivex_node_get_child_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_hivex_node_get_child_ret__descriptor;
extern const ProtobufCMessageDescriptor guestfs_hivex_node_parent_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_hivex_node_parent_ret__descriptor;
extern const ProtobufCMessageDescriptor guestfs_hivex_node_values_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_hivex_node_values_ret__descriptor;
extern const ProtobufCMessageDescriptor guestfs_hivex_node_get_value_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_hivex_node_get_value_ret__descriptor;
extern const ProtobufCMessageDescriptor guestfs_hivex_value_key_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_hivex_value_key_ret__descriptor;
extern const ProtobufCMessageDescriptor guestfs_hivex_value_type_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_hivex_value_type_ret__descriptor;
extern const ProtobufCMessageDescriptor guestfs_hivex_value_value_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_hivex_value_value_ret__descriptor;
extern const ProtobufCMessageDescriptor guestfs_hivex_commit_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_hivex_node_add_child_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_hivex_node_add_child_ret__descriptor;
extern const ProtobufCMessageDescriptor guestfs_hivex_node_delete_child_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_hivex_node_set_value_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_xfs_repair_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_xfs_repair_ret__descriptor;
extern const ProtobufCMessageDescriptor guestfs_rm_ff_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_mke2fs_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_list_disk_labels_ret__descriptor;
extern const ProtobufCMessageDescriptor guestfs_internal_hot_add_drive_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_internal_hot_remove_drive_precheck_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_internal_hot_remove_drive_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_mktemp_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_mktemp_ret__descriptor;
extern const ProtobufCMessageDescriptor guestfs_mklost_and_found_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_acl_get_file_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_acl_get_file_ret__descriptor;
extern const ProtobufCMessageDescriptor guestfs_acl_set_file_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_acl_delete_def_file_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_cap_get_file_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_cap_get_file_ret__descriptor;
extern const ProtobufCMessageDescriptor guestfs_cap_set_file_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_list_ldm_volumes_ret__descriptor;
extern const ProtobufCMessageDescriptor guestfs_list_ldm_partitions_ret__descriptor;
extern const ProtobufCMessageDescriptor guestfs_ldmtool_scan_ret__descriptor;
extern const ProtobufCMessageDescriptor guestfs_ldmtool_scan_devices_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_ldmtool_scan_devices_ret__descriptor;
extern const ProtobufCMessageDescriptor guestfs_ldmtool_diskgroup_name_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_ldmtool_diskgroup_name_ret__descriptor;
extern const ProtobufCMessageDescriptor guestfs_ldmtool_diskgroup_volumes_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_ldmtool_diskgroup_volumes_ret__descriptor;
extern const ProtobufCMessageDescriptor guestfs_ldmtool_diskgroup_disks_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_ldmtool_diskgroup_disks_ret__descriptor;
extern const ProtobufCMessageDescriptor guestfs_ldmtool_volume_type_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_ldmtool_volume_type_ret__descriptor;
extern const ProtobufCMessageDescriptor guestfs_ldmtool_volume_hint_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_ldmtool_volume_hint_ret__descriptor;
extern const ProtobufCMessageDescriptor guestfs_ldmtool_volume_partitions_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_ldmtool_volume_partitions_ret__descriptor;
extern const ProtobufCMessageDescriptor guestfs_part_set_gpt_type_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_part_get_gpt_type_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_part_get_gpt_type_ret__descriptor;
extern const ProtobufCMessageDescriptor guestfs_rename_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_is_whole_device_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_is_whole_device_ret__descriptor;
extern const ProtobufCMessageDescriptor guestfs_internal_parse_mountable_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_internal_parse_mountable_ret__descriptor;
extern const ProtobufCMessageDescriptor guestfs_internal_rhbz914931_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_feature_available_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_feature_available_ret__descriptor;
extern const ProtobufCMessageDescriptor guestfs_syslinux_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_extlinux_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_cp_rr_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_remount_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_set_uuid_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_journal_open_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_journal_next_ret__descriptor;
extern const ProtobufCMessageDescriptor guestfs_journal_skip_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_journal_skip_ret__descriptor;
extern const ProtobufCMessageDescriptor guestfs_journal_get_data_threshold_ret__descriptor;
extern const ProtobufCMessageDescriptor guestfs_journal_set_data_threshold_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_aug_setm_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_aug_setm_ret__descriptor;
extern const ProtobufCMessageDescriptor guestfs_aug_label_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_aug_label_ret__descriptor;
extern const ProtobufCMessageDescriptor guestfs_internal_upload_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_copy_attributes_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_part_get_name_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_part_get_name_ret__descriptor;
extern const ProtobufCMessageDescriptor guestfs_blkdiscard_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_blkdiscardzeroes_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_blkdiscardzeroes_ret__descriptor;
extern const ProtobufCMessageDescriptor guestfs_cpio_out_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_journal_get_realtime_usec_ret__descriptor;
extern const ProtobufCMessageDescriptor guestfs_statns_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_statns_ret__descriptor;
extern const ProtobufCMessageDescriptor guestfs_lstatns_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_lstatns_ret__descriptor;
extern const ProtobufCMessageDescriptor guestfs_internal_lstatnslist_args__descriptor;
extern const ProtobufCMessageDescriptor guestfs_internal_lstatnslist_ret__descriptor;
extern const ProtobufCMessageDescriptor guestfs_message_error__descriptor;
extern const ProtobufCMessageDescriptor guestfs_message_header__descriptor;
extern const ProtobufCMessageDescriptor guestfs_chunk__descriptor;
extern const ProtobufCMessageDescriptor guestfs_progress__descriptor;
extern const ProtobufCMessageDescriptor guestfs_flag_message__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_guestfs_5fprotocol_2eproto__INCLUDED */
